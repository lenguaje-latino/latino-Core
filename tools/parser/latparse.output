Rules useless in parser due to conflicts

  141 clase_sentencia: RETORNO expression

  145 clase_sentencias: error statement_list


State 2 conflicts: 1 reduce/reduce
State 11 conflicts: 3 shift/reduce
State 19 conflicts: 4 shift/reduce
State 31 conflicts: 1 reduce/reduce
State 38 conflicts: 48 reduce/reduce
State 49 conflicts: 2 reduce/reduce
State 66 conflicts: 48 reduce/reduce
State 73 conflicts: 1 shift/reduce, 26 reduce/reduce
State 78 conflicts: 1 reduce/reduce
State 98 conflicts: 3 shift/reduce
State 101 conflicts: 1 shift/reduce
State 102 conflicts: 1 shift/reduce
State 103 conflicts: 1 shift/reduce
State 134 conflicts: 3 shift/reduce
State 144 conflicts: 2 shift/reduce
State 145 conflicts: 2 shift/reduce
State 147 conflicts: 2 shift/reduce
State 159 conflicts: 1 shift/reduce
State 173 conflicts: 1 shift/reduce
State 174 conflicts: 1 shift/reduce
State 175 conflicts: 1 shift/reduce
State 176 conflicts: 1 shift/reduce
State 177 conflicts: 1 shift/reduce
State 178 conflicts: 1 shift/reduce
State 179 conflicts: 1 shift/reduce
State 180 conflicts: 1 shift/reduce
State 181 conflicts: 1 shift/reduce
State 182 conflicts: 1 shift/reduce
State 183 conflicts: 1 shift/reduce
State 184 conflicts: 1 shift/reduce
State 185 conflicts: 1 shift/reduce
State 186 conflicts: 1 shift/reduce
State 187 conflicts: 1 shift/reduce
State 188 conflicts: 1 shift/reduce
State 189 conflicts: 1 shift/reduce
State 208 conflicts: 6 reduce/reduce
State 211 conflicts: 5 reduce/reduce
State 220 conflicts: 1 shift/reduce
State 243 conflicts: 18 shift/reduce
State 244 conflicts: 1 shift/reduce
State 254 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 constant_expression: NUMERICO
    2                    | CADENA

    3 primary_expression: IDENTIFICADOR
    4                   | VERDADERO
    5                   | FALSO
    6                   | NULO

    7 unary_expression: '-' expression
    8                 | '+' expression

    9 multiplicative_expression: expression '^' expression
   10                          | expression EXPONENTE expression
   11                          | expression '*' expression
   12                          | expression '/' expression
   13                          | expression '%' expression

   14 additive_expression: expression '-' expression
   15                    | expression '+' expression

   16 relational_expression: expression MAYOR_QUE expression
   17                      | expression MENOR_QUE expression
   18                      | expression MAYOR_IGUAL expression
   19                      | expression MENOR_IGUAL expression

   20 equality_expression: expression DIFERENTE expression
   21                    | expression IGUAL_LOGICO expression
   22                    | expression REGEX expression

   23 logical_not_expression: '!' expression

   24 logical_and_expression: expression Y_LOGICO expression

   25 logical_or_expression: expression O_LOGICO expression

   26 ternary_expression: expression '?' expression ':' expression

   27 concat_expression: expression CONCATENAR expression

   28 expression: '(' expression ')'
   29           | constant_expression
   30           | primary_expression
   31           | unary_expression
   32           | multiplicative_expression
   33           | additive_expression
   34           | relational_expression
   35           | equality_expression
   36           | logical_not_expression
   37           | logical_and_expression
   38           | logical_or_expression
   39           | concat_expression
   40           | function_call
   41           | list_new
   42           | dict_new
   43           | variable_access
   44           | function_anonymous
   45           | ternary_expression
   46           | incdec_statement
   47           | VAR_ARGS

   48 program: ε
   49        | statement_list

   50 statement_list: statement statement_list
   51               | statement
   52               | error statement_list

   53 statement: declaration
   54          | global_declaration
   55          | selection_statement
   56          | iteration_statement
   57          | jump_statement
   58          | function_definition
   59          | function_call
   60          | incdec_statement
   61          | jump_loop
   62          | goto_etiqueta
   63          | clase_declaracion

   64 incdec_statement: variable_access INCREMENTO
   65                 | variable_access DECREMENTO

   66 variable_access: IDENTIFICADOR
   67                | field_designator
   68                | function_call

   69 field_designator: variable_access ATRIBUTO IDENTIFICADOR
   70                 | variable_access '[' expression ']'

   71 global_declaration: GLOBAL declaration
   72                   | GLOBAL function_definition

   73 declaration: variable_access '=' expression
   74            | variable_access CONCATENAR_IGUAL expression
   75            | variable_access MAS_IGUAL expression
   76            | variable_access MENOS_IGUAL expression
   77            | variable_access POR_IGUAL expression
   78            | variable_access ENTRE_IGUAL expression
   79            | variable_access MODULO_IGUAL expression
   80            | parameter_list '=' argument_expression_list
   81            | variable_access '[' expression ']' '=' expression

   82 labeled_statements: labeled_statement_case labeled_statements
   83                   | labeled_statement_case
   84                   | labeled_statement_default

   85 labeled_statement_case: CASO labeled_statement_case_case statement_list

   86 labeled_statement_case_case: constant_expression ':'
   87                            | constant_expression ':' CASO labeled_statement_case_case

   88 labeled_statement_default: DEFECTO ':' statement_list

   89 selection_statement: SI expression statement_list FIN
   90                    | SI expression statement_list SINO statement_list FIN
   91                    | SI expression statement_list osi_statements FIN
   92                    | ELEGIR expression labeled_statements FIN

   93 osi_statements: osi_statement
   94               | osi_statements osi_statement

   95 osi_statement: O_SI expression statement_list
   96              | O_SI expression statement_list SINO statement_list
   97              | O_SI expression statement_list osi_statements

   98 iteration_statement: MIENTRAS expression statement_list FIN
   99                    | REPETIR statement_list HASTA expression
  100                    | DESDE '(' declaration ';' expression ';' statement ')' statement_list FIN
  101                    | PARA IDENTIFICADOR EN RANGO '(' expression ')' statement_list FIN
  102                    | PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ')' statement_list FIN
  103                    | PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ',' expression ')' statement_list FIN

  104 goto_etiqueta: IDENTIFICADOR ':'

  105 jump_statement: RETORNO expression
  106               | RETORNO argument_expression_list
  107               | IR IDENTIFICADOR

  108 jump_loop: ROMPER
  109          | CONTINUAR

  110 function_definition: FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN

  111 function_anonymous: FUNCION '(' parameter_list ')' statement_list FIN

  112 function_call: variable_access '(' argument_expression_list ')'

  113 argument_expression_list: ε
  114                         | expression
  115                         | expression ',' argument_expression_list

  116 parameter_list: ε
  117               | IDENTIFICADOR
  118               | VAR_ARGS
  119               | parameter_list ',' IDENTIFICADOR
  120               | parameter_list ',' VAR_ARGS

  121 list_new: '[' list_items ']'

  122 list_items: ε
  123           | expression
  124           | expression ',' list_items

  125 dict_new: '{' dict_items '}'

  126 dict_items: ε
  127           | dict_item
  128           | dict_items ',' dict_item

  129 dict_item: ε
  130          | expression ':' expression

  131 clase_propiedad: IDENTIFICADOR '=' expression

  132 clase_propiedades: clase_propiedad clase_propiedades
  133                  | clase_propiedad
  134                  | error statement_list

  135 clase_funcion: FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN

  136 clase_funciones: clase_funcion clase_funciones
  137                | clase_funcion
  138                | error statement_list

  139 clase_sentencia: clase_propiedades
  140                | clase_funciones
  141                | RETORNO expression
  142                | RETORNO argument_expression_list

  143 clase_sentencias: clase_sentencia clase_sentencias
  144                 | clase_sentencia
  145                 | error statement_list

  146 clase_declaracion: CLASE IDENTIFICADOR clase_sentencias FIN


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 23
    '%' (37) 13
    '(' (40) 28 100 101 102 103 110 111 112 135
    ')' (41) 28 100 101 102 103 110 111 112 135
    '*' (42) 11
    '+' (43) 8 15
    ',' (44) 102 103 115 119 120 124 128
    '-' (45) 7 14
    '/' (47) 12
    ':' (58) 26 86 87 88 104 130
    ';' (59) 100
    '=' (61) 73 80 81 131
    '?' (63) 26
    '[' (91) 70 81 121
    ']' (93) 70 81 121
    '^' (94) 9
    '{' (123) 125
    '}' (125) 125
    error (256) 52 134 138 145
    NUMERICO <node> (258) 1
    CADENA <node> (259) 2
    IDENTIFICADOR <node> (260) 3 66 69 101 102 103 104 107 110 117 119 131 135 146
    VAR_ARGS <node> (261) 47 118 120
    SI (262) 89 90 91
    O_SI (263) 95 96 97
    FIN (264) 89 90 91 92 98 100 101 102 103 110 111 135 146
    SINO (265) 90 96
    MIENTRAS (266) 98
    REPETIR (267) 99
    ROMPER (268) 108
    CONTINUAR (269) 109
    HASTA (270) 99
    FUNCION (271) 110 111 135
    DESDE (272) 100
    RETORNO (273) 105 106 141 142
    ELEGIR (274) 92
    CASO (275) 85 87
    DEFECTO (276) 88
    ATRIBUTO (277) 69
    VERDADERO (278) 4
    FALSO (279) 5
    NULO (280) 6
    EXPONENTE (281) 10
    PARA (282) 101 102 103
    EN (283) 101 102 103
    RANGO (284) 101 102 103
    IR (285) 107
    MAYOR_QUE (286) 16
    MENOR_QUE (287) 17
    MAYOR_IGUAL (288) 18
    MENOR_IGUAL (289) 19
    IGUAL_LOGICO (290) 21
    DIFERENTE (291) 20
    Y_LOGICO (292) 24
    O_LOGICO (293) 25
    INCREMENTO (294) 64
    DECREMENTO (295) 65
    CONCATENAR (296) 27
    CONCATENAR_IGUAL (297) 74
    MAS_IGUAL (298) 75
    MENOS_IGUAL (299) 76
    POR_IGUAL (300) 77
    ENTRE_IGUAL (301) 78
    MODULO_IGUAL (302) 79
    REGEX (303) 22
    GLOBAL (304) 71 72
    CLASE (305) 146


Nonterminals, with rules where they appear

    $accept (69)
        on left: 0
    constant_expression <node> (70)
        on left: 1 2
        on right: 29 86 87
    primary_expression <node> (71)
        on left: 3 4 5 6
        on right: 30
    unary_expression <node> (72)
        on left: 7 8
        on right: 31
    multiplicative_expression <node> (73)
        on left: 9 10 11 12 13
        on right: 32
    additive_expression <node> (74)
        on left: 14 15
        on right: 33
    relational_expression <node> (75)
        on left: 16 17 18 19
        on right: 34
    equality_expression <node> (76)
        on left: 20 21 22
        on right: 35
    logical_not_expression <node> (77)
        on left: 23
        on right: 36
    logical_and_expression <node> (78)
        on left: 24
        on right: 37
    logical_or_expression <node> (79)
        on left: 25
        on right: 38
    ternary_expression <node> (80)
        on left: 26
        on right: 45
    concat_expression <node> (81)
        on left: 27
        on right: 39
    expression <node> (82)
        on left: 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
        on right: 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 70 73 74 75 76 77 78 79 81 89 90 91 92 95 96 97 98 99 100 101 102 103 105 114 115 123 124 130 131 141
    program (83)
        on left: 48 49
        on right: 0
    statement_list <node> (84)
        on left: 50 51 52
        on right: 49 50 52 85 88 89 90 91 95 96 97 98 99 100 101 102 103 110 111 134 135 138 145
    statement <node> (85)
        on left: 53 54 55 56 57 58 59 60 61 62 63
        on right: 50 51 100
    incdec_statement <node> (86)
        on left: 64 65
        on right: 46 60
    variable_access <node> (87)
        on left: 66 67 68
        on right: 43 64 65 69 70 73 74 75 76 77 78 79 81 112
    field_designator <node> (88)
        on left: 69 70
        on right: 67
    global_declaration <node> (89)
        on left: 71 72
        on right: 54
    declaration <node> (90)
        on left: 73 74 75 76 77 78 79 80 81
        on right: 53 71 100
    labeled_statements <node> (91)
        on left: 82 83 84
        on right: 82 92
    labeled_statement_case <node> (92)
        on left: 85
        on right: 82 83
    labeled_statement_case_case <node> (93)
        on left: 86 87
        on right: 85 87
    labeled_statement_default <node> (94)
        on left: 88
        on right: 84
    selection_statement <node> (95)
        on left: 89 90 91 92
        on right: 55
    osi_statements <node> (96)
        on left: 93 94
        on right: 91 94 97
    osi_statement <node> (97)
        on left: 95 96 97
        on right: 93 94
    iteration_statement <node> (98)
        on left: 98 99 100 101 102 103
        on right: 56
    goto_etiqueta <node> (99)
        on left: 104
        on right: 62
    jump_statement <node> (100)
        on left: 105 106 107
        on right: 57
    jump_loop <node> (101)
        on left: 108 109
        on right: 61
    function_definition <node> (102)
        on left: 110
        on right: 58 72
    function_anonymous <node> (103)
        on left: 111
        on right: 44
    function_call <node> (104)
        on left: 112
        on right: 40 59 68
    argument_expression_list <node> (105)
        on left: 113 114 115
        on right: 80 106 112 115 142
    parameter_list <node> (106)
        on left: 116 117 118 119 120
        on right: 80 110 111 119 120 135
    list_new <node> (107)
        on left: 121
        on right: 41
    list_items <node> (108)
        on left: 122 123 124
        on right: 121 124
    dict_new <node> (109)
        on left: 125
        on right: 42
    dict_items <node> (110)
        on left: 126 127 128
        on right: 125 128
    dict_item <node> (111)
        on left: 129 130
        on right: 127 128
    clase_propiedad <node> (112)
        on left: 131
        on right: 132 133
    clase_propiedades <node> (113)
        on left: 132 133 134
        on right: 132 139
    clase_funcion <node> (114)
        on left: 135
        on right: 136 137
    clase_funciones <node> (115)
        on left: 136 137 138
        on right: 136 140
    clase_sentencia <node> (116)
        on left: 139 140 141 142
        on right: 143 144
    clase_sentencias <node> (117)
        on left: 143 144 145
        on right: 143 146
    clase_declaracion <node> (118)
        on left: 146
        on right: 63


State 0

    0 $accept: • program $end
   48 program: ε •  [$end]
   49        | • statement_list
   50 statement_list: • statement statement_list
   51               | • statement
   52               | • error statement_list
   53 statement: • declaration
   54          | • global_declaration
   55          | • selection_statement
   56          | • iteration_statement
   57          | • jump_statement
   58          | • function_definition
   59          | • function_call
   60          | • incdec_statement
   61          | • jump_loop
   62          | • goto_etiqueta
   63          | • clase_declaracion
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   71 global_declaration: • GLOBAL declaration
   72                   | • GLOBAL function_definition
   73 declaration: • variable_access '=' expression
   74            | • variable_access CONCATENAR_IGUAL expression
   75            | • variable_access MAS_IGUAL expression
   76            | • variable_access MENOS_IGUAL expression
   77            | • variable_access POR_IGUAL expression
   78            | • variable_access ENTRE_IGUAL expression
   79            | • variable_access MODULO_IGUAL expression
   80            | • parameter_list '=' argument_expression_list
   81            | • variable_access '[' expression ']' '=' expression
   89 selection_statement: • SI expression statement_list FIN
   90                    | • SI expression statement_list SINO statement_list FIN
   91                    | • SI expression statement_list osi_statements FIN
   92                    | • ELEGIR expression labeled_statements FIN
   98 iteration_statement: • MIENTRAS expression statement_list FIN
   99                    | • REPETIR statement_list HASTA expression
  100                    | • DESDE '(' declaration ';' expression ';' statement ')' statement_list FIN
  101                    | • PARA IDENTIFICADOR EN RANGO '(' expression ')' statement_list FIN
  102                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ')' statement_list FIN
  103                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ',' expression ')' statement_list FIN
  104 goto_etiqueta: • IDENTIFICADOR ':'
  105 jump_statement: • RETORNO expression
  106               | • RETORNO argument_expression_list
  107               | • IR IDENTIFICADOR
  108 jump_loop: • ROMPER
  109          | • CONTINUAR
  110 function_definition: • FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  116 parameter_list: ε •  ['=', ',']
  117               | • IDENTIFICADOR
  118               | • VAR_ARGS
  119               | • parameter_list ',' IDENTIFICADOR
  120               | • parameter_list ',' VAR_ARGS
  146 clase_declaracion: • CLASE IDENTIFICADOR clase_sentencias FIN

    error          shift, and go to state 1
    IDENTIFICADOR  shift, and go to state 2
    VAR_ARGS       shift, and go to state 3
    SI             shift, and go to state 4
    MIENTRAS       shift, and go to state 5
    REPETIR        shift, and go to state 6
    ROMPER         shift, and go to state 7
    CONTINUAR      shift, and go to state 8
    FUNCION        shift, and go to state 9
    DESDE          shift, and go to state 10
    RETORNO        shift, and go to state 11
    ELEGIR         shift, and go to state 12
    PARA           shift, and go to state 13
    IR             shift, and go to state 14
    GLOBAL         shift, and go to state 15
    CLASE          shift, and go to state 16

    $end  reduce using rule 48 (program)
    '='   reduce using rule 116 (parameter_list)
    ','   reduce using rule 116 (parameter_list)

    program              go to state 17
    statement_list       go to state 18
    statement            go to state 19
    incdec_statement     go to state 20
    variable_access      go to state 21
    field_designator     go to state 22
    global_declaration   go to state 23
    declaration          go to state 24
    selection_statement  go to state 25
    iteration_statement  go to state 26
    goto_etiqueta        go to state 27
    jump_statement       go to state 28
    jump_loop            go to state 29
    function_definition  go to state 30
    function_call        go to state 31
    parameter_list       go to state 32
    clase_declaracion    go to state 33


State 1

   50 statement_list: • statement statement_list
   51               | • statement
   52               | • error statement_list
   52               | error • statement_list
   53 statement: • declaration
   54          | • global_declaration
   55          | • selection_statement
   56          | • iteration_statement
   57          | • jump_statement
   58          | • function_definition
   59          | • function_call
   60          | • incdec_statement
   61          | • jump_loop
   62          | • goto_etiqueta
   63          | • clase_declaracion
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   71 global_declaration: • GLOBAL declaration
   72                   | • GLOBAL function_definition
   73 declaration: • variable_access '=' expression
   74            | • variable_access CONCATENAR_IGUAL expression
   75            | • variable_access MAS_IGUAL expression
   76            | • variable_access MENOS_IGUAL expression
   77            | • variable_access POR_IGUAL expression
   78            | • variable_access ENTRE_IGUAL expression
   79            | • variable_access MODULO_IGUAL expression
   80            | • parameter_list '=' argument_expression_list
   81            | • variable_access '[' expression ']' '=' expression
   89 selection_statement: • SI expression statement_list FIN
   90                    | • SI expression statement_list SINO statement_list FIN
   91                    | • SI expression statement_list osi_statements FIN
   92                    | • ELEGIR expression labeled_statements FIN
   98 iteration_statement: • MIENTRAS expression statement_list FIN
   99                    | • REPETIR statement_list HASTA expression
  100                    | • DESDE '(' declaration ';' expression ';' statement ')' statement_list FIN
  101                    | • PARA IDENTIFICADOR EN RANGO '(' expression ')' statement_list FIN
  102                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ')' statement_list FIN
  103                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ',' expression ')' statement_list FIN
  104 goto_etiqueta: • IDENTIFICADOR ':'
  105 jump_statement: • RETORNO expression
  106               | • RETORNO argument_expression_list
  107               | • IR IDENTIFICADOR
  108 jump_loop: • ROMPER
  109          | • CONTINUAR
  110 function_definition: • FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  116 parameter_list: ε •  ['=', ',']
  117               | • IDENTIFICADOR
  118               | • VAR_ARGS
  119               | • parameter_list ',' IDENTIFICADOR
  120               | • parameter_list ',' VAR_ARGS
  146 clase_declaracion: • CLASE IDENTIFICADOR clase_sentencias FIN

    error          shift, and go to state 1
    IDENTIFICADOR  shift, and go to state 2
    VAR_ARGS       shift, and go to state 3
    SI             shift, and go to state 4
    MIENTRAS       shift, and go to state 5
    REPETIR        shift, and go to state 6
    ROMPER         shift, and go to state 7
    CONTINUAR      shift, and go to state 8
    FUNCION        shift, and go to state 9
    DESDE          shift, and go to state 10
    RETORNO        shift, and go to state 11
    ELEGIR         shift, and go to state 12
    PARA           shift, and go to state 13
    IR             shift, and go to state 14
    GLOBAL         shift, and go to state 15
    CLASE          shift, and go to state 16

    '='  reduce using rule 116 (parameter_list)
    ','  reduce using rule 116 (parameter_list)

    statement_list       go to state 34
    statement            go to state 19
    incdec_statement     go to state 20
    variable_access      go to state 21
    field_designator     go to state 22
    global_declaration   go to state 23
    declaration          go to state 24
    selection_statement  go to state 25
    iteration_statement  go to state 26
    goto_etiqueta        go to state 27
    jump_statement       go to state 28
    jump_loop            go to state 29
    function_definition  go to state 30
    function_call        go to state 31
    parameter_list       go to state 32
    clase_declaracion    go to state 33


State 2

   66 variable_access: IDENTIFICADOR •  [ATRIBUTO, INCREMENTO, DECREMENTO, CONCATENAR_IGUAL, MAS_IGUAL, MENOS_IGUAL, POR_IGUAL, ENTRE_IGUAL, MODULO_IGUAL, '=', '(', '[']
  104 goto_etiqueta: IDENTIFICADOR • ':'
  117 parameter_list: IDENTIFICADOR •  ['=', ',']

    ':'  shift, and go to state 35

    '='       reduce using rule 66 (variable_access)
    '='       [reduce using rule 117 (parameter_list)]
    ','       reduce using rule 117 (parameter_list)
    $default  reduce using rule 66 (variable_access)

    reduce/reduce conflict on token '=':
       66 variable_access: IDENTIFICADOR •
      117 parameter_list: IDENTIFICADOR •
      Example: IDENTIFICADOR • '=' expression
      First reduce derivation
        declaration
        ↳ 73: variable_access       '=' expression
              ↳ 66: IDENTIFICADOR •
      Second reduce derivation
        declaration
        ↳ 80: parameter_list         '=' argument_expression_list
              ↳ 117: IDENTIFICADOR •     ↳ 114: expression



State 3

  118 parameter_list: VAR_ARGS •

    $default  reduce using rule 118 (parameter_list)


State 4

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   89 selection_statement: SI • expression statement_list FIN
   90                    | SI • expression statement_list SINO statement_list FIN
   91                    | SI • expression statement_list osi_statements FIN
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 62
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 5

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   98 iteration_statement: MIENTRAS • expression statement_list FIN
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 69
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 6

   50 statement_list: • statement statement_list
   51               | • statement
   52               | • error statement_list
   53 statement: • declaration
   54          | • global_declaration
   55          | • selection_statement
   56          | • iteration_statement
   57          | • jump_statement
   58          | • function_definition
   59          | • function_call
   60          | • incdec_statement
   61          | • jump_loop
   62          | • goto_etiqueta
   63          | • clase_declaracion
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   71 global_declaration: • GLOBAL declaration
   72                   | • GLOBAL function_definition
   73 declaration: • variable_access '=' expression
   74            | • variable_access CONCATENAR_IGUAL expression
   75            | • variable_access MAS_IGUAL expression
   76            | • variable_access MENOS_IGUAL expression
   77            | • variable_access POR_IGUAL expression
   78            | • variable_access ENTRE_IGUAL expression
   79            | • variable_access MODULO_IGUAL expression
   80            | • parameter_list '=' argument_expression_list
   81            | • variable_access '[' expression ']' '=' expression
   89 selection_statement: • SI expression statement_list FIN
   90                    | • SI expression statement_list SINO statement_list FIN
   91                    | • SI expression statement_list osi_statements FIN
   92                    | • ELEGIR expression labeled_statements FIN
   98 iteration_statement: • MIENTRAS expression statement_list FIN
   99                    | • REPETIR statement_list HASTA expression
   99                    | REPETIR • statement_list HASTA expression
  100                    | • DESDE '(' declaration ';' expression ';' statement ')' statement_list FIN
  101                    | • PARA IDENTIFICADOR EN RANGO '(' expression ')' statement_list FIN
  102                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ')' statement_list FIN
  103                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ',' expression ')' statement_list FIN
  104 goto_etiqueta: • IDENTIFICADOR ':'
  105 jump_statement: • RETORNO expression
  106               | • RETORNO argument_expression_list
  107               | • IR IDENTIFICADOR
  108 jump_loop: • ROMPER
  109          | • CONTINUAR
  110 function_definition: • FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  116 parameter_list: ε •  ['=', ',']
  117               | • IDENTIFICADOR
  118               | • VAR_ARGS
  119               | • parameter_list ',' IDENTIFICADOR
  120               | • parameter_list ',' VAR_ARGS
  146 clase_declaracion: • CLASE IDENTIFICADOR clase_sentencias FIN

    error          shift, and go to state 1
    IDENTIFICADOR  shift, and go to state 2
    VAR_ARGS       shift, and go to state 3
    SI             shift, and go to state 4
    MIENTRAS       shift, and go to state 5
    REPETIR        shift, and go to state 6
    ROMPER         shift, and go to state 7
    CONTINUAR      shift, and go to state 8
    FUNCION        shift, and go to state 9
    DESDE          shift, and go to state 10
    RETORNO        shift, and go to state 11
    ELEGIR         shift, and go to state 12
    PARA           shift, and go to state 13
    IR             shift, and go to state 14
    GLOBAL         shift, and go to state 15
    CLASE          shift, and go to state 16

    '='  reduce using rule 116 (parameter_list)
    ','  reduce using rule 116 (parameter_list)

    statement_list       go to state 70
    statement            go to state 19
    incdec_statement     go to state 20
    variable_access      go to state 21
    field_designator     go to state 22
    global_declaration   go to state 23
    declaration          go to state 24
    selection_statement  go to state 25
    iteration_statement  go to state 26
    goto_etiqueta        go to state 27
    jump_statement       go to state 28
    jump_loop            go to state 29
    function_definition  go to state 30
    function_call        go to state 31
    parameter_list       go to state 32
    clase_declaracion    go to state 33


State 7

  108 jump_loop: ROMPER •

    $default  reduce using rule 108 (jump_loop)


State 8

  109 jump_loop: CONTINUAR •

    $default  reduce using rule 109 (jump_loop)


State 9

  110 function_definition: FUNCION • IDENTIFICADOR '(' parameter_list ')' statement_list FIN

    IDENTIFICADOR  shift, and go to state 71


State 10

  100 iteration_statement: DESDE • '(' declaration ';' expression ';' statement ')' statement_list FIN

    '('  shift, and go to state 72


State 11

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
  105 jump_statement: RETORNO • expression
  106               | RETORNO • argument_expression_list
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  113 argument_expression_list: ε •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, PARA, IR, GLOBAL, CLASE, '=', ')', ',']
  114                         | • expression
  115                         | • expression ',' argument_expression_list
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    IDENTIFICADOR  [reduce using rule 113 (argument_expression_list)]
    VAR_ARGS       [reduce using rule 113 (argument_expression_list)]
    FUNCION        [reduce using rule 113 (argument_expression_list)]
    $default       reduce using rule 113 (argument_expression_list)

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 73
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    argument_expression_list   go to state 74
    list_new                   go to state 67
    dict_new                   go to state 68

    shift/reduce conflict on token IDENTIFICADOR:
      113 argument_expression_list: ε •
        3 primary_expression: • IDENTIFICADOR
      First example: statement_list
      Shift derivation
        statement_list
        ↳ 50: statement_list
      Second example: IDENTIFICADOR
      Reduce derivation
        statement_list
        ↳ 50: IDENTIFICADOR

    shift/reduce conflict on token VAR_ARGS:
      113 argument_expression_list: ε •
       47 expression: • VAR_ARGS
      First example: statement_list
      Shift derivation
        statement_list
        ↳ 50: statement_list
      Second example: VAR_ARGS
      Reduce derivation
        statement_list
        ↳ 50: VAR_ARGS

    shift/reduce conflict on token IDENTIFICADOR:
      113 argument_expression_list: ε •
       66 variable_access: • IDENTIFICADOR
      First example: statement_list
      Shift derivation
        statement_list
        ↳ 50: statement_list
      Second example: IDENTIFICADOR
      Reduce derivation
        statement_list
        ↳ 50: IDENTIFICADOR

    shift/reduce conflict on token FUNCION:
      113 argument_expression_list: ε •
      111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
      First example: RETORNO • FUNCION '(' parameter_list ')' statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                          $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                             statement_list
                         ↳ 57: jump_statement
                               ↳ 105: RETORNO expression
                                              ↳ 44: function_anonymous
                                                    ↳ 111: • FUNCION '(' parameter_list ')' statement_list FIN
      Second example: RETORNO • FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                                     $end
             ↳ 49: statement_list
                   ↳ 50: statement                                     statement_list
                         ↳ 57: jump_statement                          ↳ 50: statement                                                                    statement_list
                               ↳ 106: RETORNO argument_expression_list       ↳ 58: function_definition
                                              ↳ 113: ε •                           ↳ 110: FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN



State 12

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   92 selection_statement: ELEGIR • expression labeled_statements FIN
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 75
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 13

  101 iteration_statement: PARA • IDENTIFICADOR EN RANGO '(' expression ')' statement_list FIN
  102                    | PARA • IDENTIFICADOR EN RANGO '(' expression ',' expression ')' statement_list FIN
  103                    | PARA • IDENTIFICADOR EN RANGO '(' expression ',' expression ',' expression ')' statement_list FIN

    IDENTIFICADOR  shift, and go to state 76


State 14

  107 jump_statement: IR • IDENTIFICADOR

    IDENTIFICADOR  shift, and go to state 77


State 15

   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   71 global_declaration: GLOBAL • declaration
   72                   | GLOBAL • function_definition
   73 declaration: • variable_access '=' expression
   74            | • variable_access CONCATENAR_IGUAL expression
   75            | • variable_access MAS_IGUAL expression
   76            | • variable_access MENOS_IGUAL expression
   77            | • variable_access POR_IGUAL expression
   78            | • variable_access ENTRE_IGUAL expression
   79            | • variable_access MODULO_IGUAL expression
   80            | • parameter_list '=' argument_expression_list
   81            | • variable_access '[' expression ']' '=' expression
  110 function_definition: • FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  116 parameter_list: ε •  ['=', ',']
  117               | • IDENTIFICADOR
  118               | • VAR_ARGS
  119               | • parameter_list ',' IDENTIFICADOR
  120               | • parameter_list ',' VAR_ARGS

    IDENTIFICADOR  shift, and go to state 78
    VAR_ARGS       shift, and go to state 3
    FUNCION        shift, and go to state 9

    $default  reduce using rule 116 (parameter_list)

    variable_access      go to state 79
    field_designator     go to state 22
    declaration          go to state 80
    function_definition  go to state 81
    function_call        go to state 82
    parameter_list       go to state 32


State 16

  146 clase_declaracion: CLASE • IDENTIFICADOR clase_sentencias FIN

    IDENTIFICADOR  shift, and go to state 83


State 17

    0 $accept: program • $end

    $end  shift, and go to state 84


State 18

   49 program: statement_list •

    $default  reduce using rule 49 (program)


State 19

   50 statement_list: • statement statement_list
   50               | statement • statement_list
   51               | • statement
   51               | statement •  [$end, error, IDENTIFICADOR, O_SI, FIN, SINO, HASTA, FUNCION, RETORNO, CASO, DEFECTO]
   52               | • error statement_list
   53 statement: • declaration
   54          | • global_declaration
   55          | • selection_statement
   56          | • iteration_statement
   57          | • jump_statement
   58          | • function_definition
   59          | • function_call
   60          | • incdec_statement
   61          | • jump_loop
   62          | • goto_etiqueta
   63          | • clase_declaracion
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   71 global_declaration: • GLOBAL declaration
   72                   | • GLOBAL function_definition
   73 declaration: • variable_access '=' expression
   74            | • variable_access CONCATENAR_IGUAL expression
   75            | • variable_access MAS_IGUAL expression
   76            | • variable_access MENOS_IGUAL expression
   77            | • variable_access POR_IGUAL expression
   78            | • variable_access ENTRE_IGUAL expression
   79            | • variable_access MODULO_IGUAL expression
   80            | • parameter_list '=' argument_expression_list
   81            | • variable_access '[' expression ']' '=' expression
   89 selection_statement: • SI expression statement_list FIN
   90                    | • SI expression statement_list SINO statement_list FIN
   91                    | • SI expression statement_list osi_statements FIN
   92                    | • ELEGIR expression labeled_statements FIN
   98 iteration_statement: • MIENTRAS expression statement_list FIN
   99                    | • REPETIR statement_list HASTA expression
  100                    | • DESDE '(' declaration ';' expression ';' statement ')' statement_list FIN
  101                    | • PARA IDENTIFICADOR EN RANGO '(' expression ')' statement_list FIN
  102                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ')' statement_list FIN
  103                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ',' expression ')' statement_list FIN
  104 goto_etiqueta: • IDENTIFICADOR ':'
  105 jump_statement: • RETORNO expression
  106               | • RETORNO argument_expression_list
  107               | • IR IDENTIFICADOR
  108 jump_loop: • ROMPER
  109          | • CONTINUAR
  110 function_definition: • FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  116 parameter_list: ε •  ['=', ',']
  117               | • IDENTIFICADOR
  118               | • VAR_ARGS
  119               | • parameter_list ',' IDENTIFICADOR
  120               | • parameter_list ',' VAR_ARGS
  146 clase_declaracion: • CLASE IDENTIFICADOR clase_sentencias FIN

    error          shift, and go to state 1
    IDENTIFICADOR  shift, and go to state 2
    VAR_ARGS       shift, and go to state 3
    SI             shift, and go to state 4
    MIENTRAS       shift, and go to state 5
    REPETIR        shift, and go to state 6
    ROMPER         shift, and go to state 7
    CONTINUAR      shift, and go to state 8
    FUNCION        shift, and go to state 9
    DESDE          shift, and go to state 10
    RETORNO        shift, and go to state 11
    ELEGIR         shift, and go to state 12
    PARA           shift, and go to state 13
    IR             shift, and go to state 14
    GLOBAL         shift, and go to state 15
    CLASE          shift, and go to state 16

    $end           reduce using rule 51 (statement_list)
    error          [reduce using rule 51 (statement_list)]
    IDENTIFICADOR  [reduce using rule 51 (statement_list)]
    O_SI           reduce using rule 51 (statement_list)
    FIN            reduce using rule 51 (statement_list)
    SINO           reduce using rule 51 (statement_list)
    HASTA          reduce using rule 51 (statement_list)
    FUNCION        [reduce using rule 51 (statement_list)]
    RETORNO        [reduce using rule 51 (statement_list)]
    CASO           reduce using rule 51 (statement_list)
    DEFECTO        reduce using rule 51 (statement_list)
    '='            reduce using rule 116 (parameter_list)
    ','            reduce using rule 116 (parameter_list)

    statement_list       go to state 85
    statement            go to state 19
    incdec_statement     go to state 20
    variable_access      go to state 21
    field_designator     go to state 22
    global_declaration   go to state 23
    declaration          go to state 24
    selection_statement  go to state 25
    iteration_statement  go to state 26
    goto_etiqueta        go to state 27
    jump_statement       go to state 28
    jump_loop            go to state 29
    function_definition  go to state 30
    function_call        go to state 31
    parameter_list       go to state 32
    clase_declaracion    go to state 33

    shift/reduce conflict on token error:
       51 statement_list: statement •
       52 statement_list: • error statement_list
      Example: error statement • error statement_list
      Shift derivation
        clase_sentencias
        ↳ 145: error statement_list
                     ↳ 50: statement statement_list
                                     ↳ 52: • error statement_list
      Reduce derivation
        clase_sentencias
        ↳ 143: clase_sentencia                       clase_sentencias
               ↳ 139: clase_propiedades              ↳ 145: error statement_list
                      ↳ 134: error statement_list
                                   ↳ 51: statement •

    shift/reduce conflict on token IDENTIFICADOR:
       51 statement_list: statement •
       66 variable_access: • IDENTIFICADOR
      First example: CLASE IDENTIFICADOR error statement • IDENTIFICADOR INCREMENTO statement_list clase_sentencias FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                                $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                                   statement_list
                         ↳ 63: clase_declaracion
                               ↳ 146: CLASE IDENTIFICADOR clase_sentencias                                                                                                       FIN
                                                          ↳ 143: clase_propiedades                                                                              clase_sentencias
                                                                 ↳ 134: error statement_list
                                                                              ↳ 50: statement statement_list
                                                                                              ↳ 50: statement                                    statement_list
                                                                                                    ↳ 60: incdec_statement
                                                                                                          ↳ 64: variable_access       INCREMENTO
                                                                                                                ↳ 66: • IDENTIFICADOR
      Second example: CLASE IDENTIFICADOR error statement • IDENTIFICADOR '=' expression clase_propiedades clase_sentencias FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                                                                                  $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                                                     statement_list
                         ↳ 63: clase_declaracion
                               ↳ 146: CLASE IDENTIFICADOR clase_sentencias                                                                                                                         FIN
                                                          ↳ 143: clase_sentencia                       clase_sentencias
                                                                 ↳ 139: clase_propiedades              ↳ 143: clase_sentencia                                                     clase_sentencias
                                                                        ↳ 134: error statement_list           ↳ 139: clase_propiedades
                                                                                     ↳ 51: statement •               ↳ 132: clase_propiedad                     clase_propiedades
                                                                                                                            ↳ 131: IDENTIFICADOR '=' expression

    shift/reduce conflict on token IDENTIFICADOR:
       51 statement_list: statement •
      104 goto_etiqueta: • IDENTIFICADOR ':'
      First example: CLASE IDENTIFICADOR error statement • IDENTIFICADOR ':' statement_list clase_sentencias FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                    $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                       statement_list
                         ↳ 63: clase_declaracion
                               ↳ 146: CLASE IDENTIFICADOR clase_sentencias                                                                                           FIN
                                                          ↳ 143: clase_propiedades                                                                  clase_sentencias
                                                                 ↳ 134: error statement_list
                                                                              ↳ 50: statement statement_list
                                                                                              ↳ 50: statement                        statement_list
                                                                                                    ↳ 62: goto_etiqueta
                                                                                                          ↳ 104: • IDENTIFICADOR ':'
      Second example: CLASE IDENTIFICADOR error statement • IDENTIFICADOR '=' expression clase_propiedades clase_sentencias FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                                                                                  $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                                                     statement_list
                         ↳ 63: clase_declaracion
                               ↳ 146: CLASE IDENTIFICADOR clase_sentencias                                                                                                                         FIN
                                                          ↳ 143: clase_sentencia                       clase_sentencias
                                                                 ↳ 139: clase_propiedades              ↳ 143: clase_sentencia                                                     clase_sentencias
                                                                        ↳ 134: error statement_list           ↳ 139: clase_propiedades
                                                                                     ↳ 51: statement •               ↳ 132: clase_propiedad                     clase_propiedades
                                                                                                                            ↳ 131: IDENTIFICADOR '=' expression

    shift/reduce conflict on token RETORNO:
       51 statement_list: statement •
      105 jump_statement: • RETORNO expression
      First example: CLASE IDENTIFICADOR error statement • RETORNO expression statement_list clase_sentencias FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                     $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                        statement_list
                         ↳ 63: clase_declaracion
                               ↳ 146: CLASE IDENTIFICADOR clase_sentencias                                                                                            FIN
                                                          ↳ 143: clase_propiedades                                                                   clase_sentencias
                                                                 ↳ 134: error statement_list
                                                                              ↳ 50: statement statement_list
                                                                                              ↳ 50: statement                         statement_list
                                                                                                    ↳ 57: jump_statement
                                                                                                          ↳ 105: • RETORNO expression
      Second example: CLASE IDENTIFICADOR error statement • RETORNO expression clase_sentencias FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                                        $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                           statement_list
                         ↳ 63: clase_declaracion
                               ↳ 146: CLASE IDENTIFICADOR clase_sentencias                                                                               FIN
                                                          ↳ 143: clase_sentencia                       clase_sentencias
                                                                 ↳ 139: clase_propiedades              ↳ 143: clase_sentencia           clase_sentencias
                                                                        ↳ 134: error statement_list           ↳ 141: RETORNO expression
                                                                                     ↳ 51: statement •

    shift/reduce conflict on token RETORNO:
       51 statement_list: statement •
      106 jump_statement: • RETORNO argument_expression_list
      First example: CLASE IDENTIFICADOR error statement • RETORNO argument_expression_list statement_list clase_sentencias FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                                   $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                                      statement_list
                         ↳ 63: clase_declaracion
                               ↳ 146: CLASE IDENTIFICADOR clase_sentencias                                                                                                          FIN
                                                          ↳ 143: clase_propiedades                                                                                 clase_sentencias
                                                                 ↳ 134: error statement_list
                                                                              ↳ 50: statement statement_list
                                                                                              ↳ 50: statement                                       statement_list
                                                                                                    ↳ 57: jump_statement
                                                                                                          ↳ 106: • RETORNO argument_expression_list
      Second example: CLASE IDENTIFICADOR error statement • RETORNO expression clase_sentencias FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                                        $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                           statement_list
                         ↳ 63: clase_declaracion
                               ↳ 146: CLASE IDENTIFICADOR clase_sentencias                                                                               FIN
                                                          ↳ 143: clase_sentencia                       clase_sentencias
                                                                 ↳ 139: clase_propiedades              ↳ 143: clase_sentencia           clase_sentencias
                                                                        ↳ 134: error statement_list           ↳ 141: RETORNO expression
                                                                                     ↳ 51: statement •

    shift/reduce conflict on token FUNCION:
       51 statement_list: statement •
      110 function_definition: • FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN
      First example: CLASE IDENTIFICADOR error statement • FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN statement_list clase_sentencias FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                                                                  $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                                                                     statement_list
                         ↳ 63: clase_declaracion
                               ↳ 146: CLASE IDENTIFICADOR clase_sentencias                                                                                                                                         FIN
                                                          ↳ 143: clase_propiedades                                                                                                                clase_sentencias
                                                                 ↳ 134: error statement_list
                                                                              ↳ 50: statement statement_list
                                                                                              ↳ 50: statement                                                                      statement_list
                                                                                                    ↳ 58: function_definition
                                                                                                          ↳ 110: • FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN
      Second example: CLASE IDENTIFICADOR error statement • FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN clase_funciones clase_sentencias FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                                                                                                                   $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                                                                                      statement_list
                         ↳ 63: clase_declaracion
                               ↳ 146: CLASE IDENTIFICADOR clase_sentencias                                                                                                                                                          FIN
                                                          ↳ 143: clase_sentencia                       clase_sentencias
                                                                 ↳ 139: clase_propiedades              ↳ 143: clase_sentencia                                                                                      clase_sentencias
                                                                        ↳ 134: error statement_list           ↳ 140: clase_funciones
                                                                                     ↳ 51: statement •               ↳ 136: clase_funcion                                                          clase_funciones
                                                                                                                            ↳ 135: FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN

    shift/reduce conflict on token IDENTIFICADOR:
       51 statement_list: statement •
      117 parameter_list: • IDENTIFICADOR
      First example: CLASE IDENTIFICADOR error statement • IDENTIFICADOR '=' argument_expression_list statement_list clase_sentencias FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                                                   $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                                                      statement_list
                         ↳ 63: clase_declaracion
                               ↳ 146: CLASE IDENTIFICADOR clase_sentencias                                                                                                                          FIN
                                                          ↳ 143: clase_propiedades                                                                                                 clase_sentencias
                                                                 ↳ 134: error statement_list
                                                                              ↳ 50: statement statement_list
                                                                                              ↳ 50: statement                                                       statement_list
                                                                                                    ↳ 53: declaration
                                                                                                          ↳ 80: parameter_list         '=' argument_expression_list
                                                                                                                ↳ 117: • IDENTIFICADOR
      Second example: CLASE IDENTIFICADOR error statement • IDENTIFICADOR '=' expression clase_propiedades clase_sentencias FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                                                                                  $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                                                     statement_list
                         ↳ 63: clase_declaracion
                               ↳ 146: CLASE IDENTIFICADOR clase_sentencias                                                                                                                         FIN
                                                          ↳ 143: clase_sentencia                       clase_sentencias
                                                                 ↳ 139: clase_propiedades              ↳ 143: clase_sentencia                                                     clase_sentencias
                                                                        ↳ 134: error statement_list           ↳ 139: clase_propiedades
                                                                                     ↳ 51: statement •               ↳ 132: clase_propiedad                     clase_propiedades
                                                                                                                            ↳ 131: IDENTIFICADOR '=' expression



State 20

   60 statement: incdec_statement •

    $default  reduce using rule 60 (statement)


State 21

   64 incdec_statement: variable_access • INCREMENTO
   65                 | variable_access • DECREMENTO
   69 field_designator: variable_access • ATRIBUTO IDENTIFICADOR
   70                 | variable_access • '[' expression ']'
   73 declaration: variable_access • '=' expression
   74            | variable_access • CONCATENAR_IGUAL expression
   75            | variable_access • MAS_IGUAL expression
   76            | variable_access • MENOS_IGUAL expression
   77            | variable_access • POR_IGUAL expression
   78            | variable_access • ENTRE_IGUAL expression
   79            | variable_access • MODULO_IGUAL expression
   81            | variable_access • '[' expression ']' '=' expression
  112 function_call: variable_access • '(' argument_expression_list ')'

    ATRIBUTO          shift, and go to state 86
    INCREMENTO        shift, and go to state 87
    DECREMENTO        shift, and go to state 88
    CONCATENAR_IGUAL  shift, and go to state 89
    MAS_IGUAL         shift, and go to state 90
    MENOS_IGUAL       shift, and go to state 91
    POR_IGUAL         shift, and go to state 92
    ENTRE_IGUAL       shift, and go to state 93
    MODULO_IGUAL      shift, and go to state 94
    '='               shift, and go to state 95
    '('               shift, and go to state 96
    '['               shift, and go to state 97


State 22

   67 variable_access: field_designator •

    $default  reduce using rule 67 (variable_access)


State 23

   54 statement: global_declaration •

    $default  reduce using rule 54 (statement)


State 24

   53 statement: declaration •

    $default  reduce using rule 53 (statement)


State 25

   55 statement: selection_statement •

    $default  reduce using rule 55 (statement)


State 26

   56 statement: iteration_statement •

    $default  reduce using rule 56 (statement)


State 27

   62 statement: goto_etiqueta •

    $default  reduce using rule 62 (statement)


State 28

   57 statement: jump_statement •

    $default  reduce using rule 57 (statement)


State 29

   61 statement: jump_loop •

    $default  reduce using rule 61 (statement)


State 30

   58 statement: function_definition •

    $default  reduce using rule 58 (statement)


State 31

   59 statement: function_call •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, PARA, IR, GLOBAL, CLASE, '=', ')', ',']
   68 variable_access: function_call •  [ATRIBUTO, INCREMENTO, DECREMENTO, CONCATENAR_IGUAL, MAS_IGUAL, MENOS_IGUAL, POR_IGUAL, ENTRE_IGUAL, MODULO_IGUAL, '=', '(', '[']

    ATRIBUTO          reduce using rule 68 (variable_access)
    INCREMENTO        reduce using rule 68 (variable_access)
    DECREMENTO        reduce using rule 68 (variable_access)
    CONCATENAR_IGUAL  reduce using rule 68 (variable_access)
    MAS_IGUAL         reduce using rule 68 (variable_access)
    MENOS_IGUAL       reduce using rule 68 (variable_access)
    POR_IGUAL         reduce using rule 68 (variable_access)
    ENTRE_IGUAL       reduce using rule 68 (variable_access)
    MODULO_IGUAL      reduce using rule 68 (variable_access)
    '='               reduce using rule 59 (statement)
    '='               [reduce using rule 68 (variable_access)]
    '('               reduce using rule 68 (variable_access)
    '['               reduce using rule 68 (variable_access)
    $default          reduce using rule 59 (statement)

    reduce/reduce conflict on token '=':
       59 statement: function_call •
       68 variable_access: function_call •
      First example: function_call • parameter_list '=' '=' argument_expression_list statement_list $end
      First reduce derivation
        $accept
        ↳ 0: program                                                                                                            $end
             ↳ 49: statement_list
                   ↳ 50: statement             statement_list
                         ↳ 59: function_call • ↳ 50: statement                                                   statement_list
                                                     ↳ 53: declaration
                                                           ↳ 80: parameter_list '=' '=' argument_expression_list
      Second example: function_call • '=' expression statement_list $end
      Second reduce derivation
        $accept
        ↳ 0: program                                                                     $end
             ↳ 49: statement_list
                   ↳ 50: statement                                        statement_list
                         ↳ 53: declaration
                               ↳ 73: variable_access       '=' expression
                                     ↳ 68: function_call •



State 32

   80 declaration: parameter_list • '=' argument_expression_list
  119 parameter_list: parameter_list • ',' IDENTIFICADOR
  120               | parameter_list • ',' VAR_ARGS

    '='  shift, and go to state 98
    ','  shift, and go to state 99


State 33

   63 statement: clase_declaracion •

    $default  reduce using rule 63 (statement)


State 34

   52 statement_list: error statement_list •

    $default  reduce using rule 52 (statement_list)


State 35

  104 goto_etiqueta: IDENTIFICADOR ':' •

    $default  reduce using rule 104 (goto_etiqueta)


State 36

    1 constant_expression: NUMERICO •

    $default  reduce using rule 1 (constant_expression)


State 37

    2 constant_expression: CADENA •

    $default  reduce using rule 2 (constant_expression)


State 38

    3 primary_expression: IDENTIFICADOR •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, EXPONENTE, PARA, IR, MAYOR_QUE, MENOR_QUE, MAYOR_IGUAL, MENOR_IGUAL, IGUAL_LOGICO, DIFERENTE, Y_LOGICO, O_LOGICO, CONCATENAR, REGEX, GLOBAL, CLASE, '=', '+', '-', '*', '/', '%', '^', '?', ':', ')', ']', ';', ',', '}']
   66 variable_access: IDENTIFICADOR •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, ATRIBUTO, EXPONENTE, PARA, IR, MAYOR_QUE, MENOR_QUE, MAYOR_IGUAL, MENOR_IGUAL, IGUAL_LOGICO, DIFERENTE, Y_LOGICO, O_LOGICO, INCREMENTO, DECREMENTO, CONCATENAR, REGEX, GLOBAL, CLASE, '=', '+', '-', '*', '/', '%', '^', '?', ':', '(', ')', '[', ']', ';', ',', '}']

    $end           reduce using rule 3 (primary_expression)
    $end           [reduce using rule 66 (variable_access)]
    error          reduce using rule 3 (primary_expression)
    error          [reduce using rule 66 (variable_access)]
    IDENTIFICADOR  reduce using rule 3 (primary_expression)
    IDENTIFICADOR  [reduce using rule 66 (variable_access)]
    VAR_ARGS       reduce using rule 3 (primary_expression)
    VAR_ARGS       [reduce using rule 66 (variable_access)]
    SI             reduce using rule 3 (primary_expression)
    SI             [reduce using rule 66 (variable_access)]
    O_SI           reduce using rule 3 (primary_expression)
    O_SI           [reduce using rule 66 (variable_access)]
    FIN            reduce using rule 3 (primary_expression)
    FIN            [reduce using rule 66 (variable_access)]
    SINO           reduce using rule 3 (primary_expression)
    SINO           [reduce using rule 66 (variable_access)]
    MIENTRAS       reduce using rule 3 (primary_expression)
    MIENTRAS       [reduce using rule 66 (variable_access)]
    REPETIR        reduce using rule 3 (primary_expression)
    REPETIR        [reduce using rule 66 (variable_access)]
    ROMPER         reduce using rule 3 (primary_expression)
    ROMPER         [reduce using rule 66 (variable_access)]
    CONTINUAR      reduce using rule 3 (primary_expression)
    CONTINUAR      [reduce using rule 66 (variable_access)]
    HASTA          reduce using rule 3 (primary_expression)
    HASTA          [reduce using rule 66 (variable_access)]
    FUNCION        reduce using rule 3 (primary_expression)
    FUNCION        [reduce using rule 66 (variable_access)]
    DESDE          reduce using rule 3 (primary_expression)
    DESDE          [reduce using rule 66 (variable_access)]
    RETORNO        reduce using rule 3 (primary_expression)
    RETORNO        [reduce using rule 66 (variable_access)]
    ELEGIR         reduce using rule 3 (primary_expression)
    ELEGIR         [reduce using rule 66 (variable_access)]
    CASO           reduce using rule 3 (primary_expression)
    CASO           [reduce using rule 66 (variable_access)]
    DEFECTO        reduce using rule 3 (primary_expression)
    DEFECTO        [reduce using rule 66 (variable_access)]
    ATRIBUTO       reduce using rule 66 (variable_access)
    EXPONENTE      reduce using rule 3 (primary_expression)
    EXPONENTE      [reduce using rule 66 (variable_access)]
    PARA           reduce using rule 3 (primary_expression)
    PARA           [reduce using rule 66 (variable_access)]
    IR             reduce using rule 3 (primary_expression)
    IR             [reduce using rule 66 (variable_access)]
    MAYOR_QUE      reduce using rule 3 (primary_expression)
    MAYOR_QUE      [reduce using rule 66 (variable_access)]
    MENOR_QUE      reduce using rule 3 (primary_expression)
    MENOR_QUE      [reduce using rule 66 (variable_access)]
    MAYOR_IGUAL    reduce using rule 3 (primary_expression)
    MAYOR_IGUAL    [reduce using rule 66 (variable_access)]
    MENOR_IGUAL    reduce using rule 3 (primary_expression)
    MENOR_IGUAL    [reduce using rule 66 (variable_access)]
    IGUAL_LOGICO   reduce using rule 3 (primary_expression)
    IGUAL_LOGICO   [reduce using rule 66 (variable_access)]
    DIFERENTE      reduce using rule 3 (primary_expression)
    DIFERENTE      [reduce using rule 66 (variable_access)]
    Y_LOGICO       reduce using rule 3 (primary_expression)
    Y_LOGICO       [reduce using rule 66 (variable_access)]
    O_LOGICO       reduce using rule 3 (primary_expression)
    O_LOGICO       [reduce using rule 66 (variable_access)]
    INCREMENTO     reduce using rule 66 (variable_access)
    DECREMENTO     reduce using rule 66 (variable_access)
    CONCATENAR     reduce using rule 3 (primary_expression)
    CONCATENAR     [reduce using rule 66 (variable_access)]
    REGEX          reduce using rule 3 (primary_expression)
    REGEX          [reduce using rule 66 (variable_access)]
    GLOBAL         reduce using rule 3 (primary_expression)
    GLOBAL         [reduce using rule 66 (variable_access)]
    CLASE          reduce using rule 3 (primary_expression)
    CLASE          [reduce using rule 66 (variable_access)]
    '='            reduce using rule 3 (primary_expression)
    '='            [reduce using rule 66 (variable_access)]
    '+'            reduce using rule 3 (primary_expression)
    '+'            [reduce using rule 66 (variable_access)]
    '-'            reduce using rule 3 (primary_expression)
    '-'            [reduce using rule 66 (variable_access)]
    '*'            reduce using rule 3 (primary_expression)
    '*'            [reduce using rule 66 (variable_access)]
    '/'            reduce using rule 3 (primary_expression)
    '/'            [reduce using rule 66 (variable_access)]
    '%'            reduce using rule 3 (primary_expression)
    '%'            [reduce using rule 66 (variable_access)]
    '^'            reduce using rule 3 (primary_expression)
    '^'            [reduce using rule 66 (variable_access)]
    '?'            reduce using rule 3 (primary_expression)
    '?'            [reduce using rule 66 (variable_access)]
    ':'            reduce using rule 3 (primary_expression)
    ':'            [reduce using rule 66 (variable_access)]
    '('            reduce using rule 66 (variable_access)
    ')'            reduce using rule 3 (primary_expression)
    ')'            [reduce using rule 66 (variable_access)]
    '['            reduce using rule 66 (variable_access)
    ']'            reduce using rule 3 (primary_expression)
    ']'            [reduce using rule 66 (variable_access)]
    ';'            reduce using rule 3 (primary_expression)
    ';'            [reduce using rule 66 (variable_access)]
    ','            reduce using rule 3 (primary_expression)
    ','            [reduce using rule 66 (variable_access)]
    '}'            reduce using rule 3 (primary_expression)
    '}'            [reduce using rule 66 (variable_access)]
    $default       reduce using rule 3 (primary_expression)

    reduce/reduce conflict on tokens $end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, EXPONENTE, PARA, IR, MAYOR_QUE, MENOR_QUE, MAYOR_IGUAL, MENOR_IGUAL, IGUAL_LOGICO, DIFERENTE, Y_LOGICO, O_LOGICO, CONCATENAR, REGEX, GLOBAL, CLASE, '=', '+', '-', '*', '/', '%', '^', '?', ':', ')', ']', ';', ',', '}':
        3 primary_expression: IDENTIFICADOR •
       66 variable_access: IDENTIFICADOR •
      Example: IDENTIFICADOR •
      First reduce derivation
        expression
        ↳ 30: primary_expression
              ↳ 3: IDENTIFICADOR •
      Second reduce derivation
        expression
        ↳ 43: variable_access
              ↳ 66: IDENTIFICADOR •



State 39

   47 expression: VAR_ARGS •

    $default  reduce using rule 47 (expression)


State 40

  111 function_anonymous: FUNCION • '(' parameter_list ')' statement_list FIN

    '('  shift, and go to state 100


State 41

    4 primary_expression: VERDADERO •

    $default  reduce using rule 4 (primary_expression)


State 42

    5 primary_expression: FALSO •

    $default  reduce using rule 5 (primary_expression)


State 43

    6 primary_expression: NULO •

    $default  reduce using rule 6 (primary_expression)


State 44

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    8                 | '+' • expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 101
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 45

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    7                 | '-' • expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 102
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 46

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   23                       | '!' • expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 103
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 47

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   28           | '(' • expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 104
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 48

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  121         | '[' • list_items ']'
  122 list_items: ε •  [']']
  123           | • expression
  124           | • expression ',' list_items
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    $default  reduce using rule 122 (list_items)

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 105
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    list_items                 go to state 106
    dict_new                   go to state 68


State 49

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'
  125         | '{' • dict_items '}'
  126 dict_items: ε •  [',', '}']
  127           | • dict_item
  128           | • dict_items ',' dict_item
  129 dict_item: ε •  [',', '}']
  130          | • expression ':' expression

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    ','       reduce using rule 126 (dict_items)
    ','       [reduce using rule 129 (dict_item)]
    '}'       reduce using rule 126 (dict_items)
    '}'       [reduce using rule 129 (dict_item)]
    $default  reduce using rule 126 (dict_items)

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 107
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68
    dict_items                 go to state 108
    dict_item                  go to state 109

    reduce/reduce conflict on tokens ',', '}':
      126 dict_items: ε •
      129 dict_item: ε •
      Example: •
      First reduce derivation
        dict_items
        ↳ 126: ε •
      Second reduce derivation
        dict_items
        ↳ 127: dict_item
               ↳ 129: ε •



State 50

   29 expression: constant_expression •

    $default  reduce using rule 29 (expression)


State 51

   30 expression: primary_expression •

    $default  reduce using rule 30 (expression)


State 52

   31 expression: unary_expression •

    $default  reduce using rule 31 (expression)


State 53

   32 expression: multiplicative_expression •

    $default  reduce using rule 32 (expression)


State 54

   33 expression: additive_expression •

    $default  reduce using rule 33 (expression)


State 55

   34 expression: relational_expression •

    $default  reduce using rule 34 (expression)


State 56

   35 expression: equality_expression •

    $default  reduce using rule 35 (expression)


State 57

   36 expression: logical_not_expression •

    $default  reduce using rule 36 (expression)


State 58

   37 expression: logical_and_expression •

    $default  reduce using rule 37 (expression)


State 59

   38 expression: logical_or_expression •

    $default  reduce using rule 38 (expression)


State 60

   45 expression: ternary_expression •

    $default  reduce using rule 45 (expression)


State 61

   39 expression: concat_expression •

    $default  reduce using rule 39 (expression)


State 62

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression
   50 statement_list: • statement statement_list
   51               | • statement
   52               | • error statement_list
   53 statement: • declaration
   54          | • global_declaration
   55          | • selection_statement
   56          | • iteration_statement
   57          | • jump_statement
   58          | • function_definition
   59          | • function_call
   60          | • incdec_statement
   61          | • jump_loop
   62          | • goto_etiqueta
   63          | • clase_declaracion
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   71 global_declaration: • GLOBAL declaration
   72                   | • GLOBAL function_definition
   73 declaration: • variable_access '=' expression
   74            | • variable_access CONCATENAR_IGUAL expression
   75            | • variable_access MAS_IGUAL expression
   76            | • variable_access MENOS_IGUAL expression
   77            | • variable_access POR_IGUAL expression
   78            | • variable_access ENTRE_IGUAL expression
   79            | • variable_access MODULO_IGUAL expression
   80            | • parameter_list '=' argument_expression_list
   81            | • variable_access '[' expression ']' '=' expression
   89 selection_statement: • SI expression statement_list FIN
   89                    | SI expression • statement_list FIN
   90                    | • SI expression statement_list SINO statement_list FIN
   90                    | SI expression • statement_list SINO statement_list FIN
   91                    | • SI expression statement_list osi_statements FIN
   91                    | SI expression • statement_list osi_statements FIN
   92                    | • ELEGIR expression labeled_statements FIN
   98 iteration_statement: • MIENTRAS expression statement_list FIN
   99                    | • REPETIR statement_list HASTA expression
  100                    | • DESDE '(' declaration ';' expression ';' statement ')' statement_list FIN
  101                    | • PARA IDENTIFICADOR EN RANGO '(' expression ')' statement_list FIN
  102                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ')' statement_list FIN
  103                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ',' expression ')' statement_list FIN
  104 goto_etiqueta: • IDENTIFICADOR ':'
  105 jump_statement: • RETORNO expression
  106               | • RETORNO argument_expression_list
  107               | • IR IDENTIFICADOR
  108 jump_loop: • ROMPER
  109          | • CONTINUAR
  110 function_definition: • FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  116 parameter_list: ε •  ['=', ',']
  117               | • IDENTIFICADOR
  118               | • VAR_ARGS
  119               | • parameter_list ',' IDENTIFICADOR
  120               | • parameter_list ',' VAR_ARGS
  146 clase_declaracion: • CLASE IDENTIFICADOR clase_sentencias FIN

    error          shift, and go to state 1
    IDENTIFICADOR  shift, and go to state 2
    VAR_ARGS       shift, and go to state 3
    SI             shift, and go to state 4
    MIENTRAS       shift, and go to state 5
    REPETIR        shift, and go to state 6
    ROMPER         shift, and go to state 7
    CONTINUAR      shift, and go to state 8
    FUNCION        shift, and go to state 9
    DESDE          shift, and go to state 10
    RETORNO        shift, and go to state 11
    ELEGIR         shift, and go to state 12
    EXPONENTE      shift, and go to state 110
    PARA           shift, and go to state 13
    IR             shift, and go to state 14
    MAYOR_QUE      shift, and go to state 111
    MENOR_QUE      shift, and go to state 112
    MAYOR_IGUAL    shift, and go to state 113
    MENOR_IGUAL    shift, and go to state 114
    IGUAL_LOGICO   shift, and go to state 115
    DIFERENTE      shift, and go to state 116
    Y_LOGICO       shift, and go to state 117
    O_LOGICO       shift, and go to state 118
    CONCATENAR     shift, and go to state 119
    REGEX          shift, and go to state 120
    GLOBAL         shift, and go to state 15
    CLASE          shift, and go to state 16
    '+'            shift, and go to state 121
    '-'            shift, and go to state 122
    '*'            shift, and go to state 123
    '/'            shift, and go to state 124
    '%'            shift, and go to state 125
    '^'            shift, and go to state 126
    '?'            shift, and go to state 127

    '='  reduce using rule 116 (parameter_list)
    ','  reduce using rule 116 (parameter_list)

    statement_list       go to state 128
    statement            go to state 19
    incdec_statement     go to state 20
    variable_access      go to state 21
    field_designator     go to state 22
    global_declaration   go to state 23
    declaration          go to state 24
    selection_statement  go to state 25
    iteration_statement  go to state 26
    goto_etiqueta        go to state 27
    jump_statement       go to state 28
    jump_loop            go to state 29
    function_definition  go to state 30
    function_call        go to state 31
    parameter_list       go to state 32
    clase_declaracion    go to state 33


State 63

   46 expression: incdec_statement •

    $default  reduce using rule 46 (expression)


State 64

   43 expression: variable_access •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, EXPONENTE, PARA, IR, MAYOR_QUE, MENOR_QUE, MAYOR_IGUAL, MENOR_IGUAL, IGUAL_LOGICO, DIFERENTE, Y_LOGICO, O_LOGICO, CONCATENAR, REGEX, GLOBAL, CLASE, '=', '+', '-', '*', '/', '%', '^', '?', ':', ')', ']', ';', ',', '}']
   64 incdec_statement: variable_access • INCREMENTO
   65                 | variable_access • DECREMENTO
   69 field_designator: variable_access • ATRIBUTO IDENTIFICADOR
   70                 | variable_access • '[' expression ']'
  112 function_call: variable_access • '(' argument_expression_list ')'

    ATRIBUTO    shift, and go to state 86
    INCREMENTO  shift, and go to state 87
    DECREMENTO  shift, and go to state 88
    '('         shift, and go to state 96
    '['         shift, and go to state 129

    $default  reduce using rule 43 (expression)


State 65

   44 expression: function_anonymous •

    $default  reduce using rule 44 (expression)


State 66

   40 expression: function_call •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, EXPONENTE, PARA, IR, MAYOR_QUE, MENOR_QUE, MAYOR_IGUAL, MENOR_IGUAL, IGUAL_LOGICO, DIFERENTE, Y_LOGICO, O_LOGICO, CONCATENAR, REGEX, GLOBAL, CLASE, '=', '+', '-', '*', '/', '%', '^', '?', ':', ')', ']', ';', ',', '}']
   68 variable_access: function_call •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, ATRIBUTO, EXPONENTE, PARA, IR, MAYOR_QUE, MENOR_QUE, MAYOR_IGUAL, MENOR_IGUAL, IGUAL_LOGICO, DIFERENTE, Y_LOGICO, O_LOGICO, INCREMENTO, DECREMENTO, CONCATENAR, REGEX, GLOBAL, CLASE, '=', '+', '-', '*', '/', '%', '^', '?', ':', '(', ')', '[', ']', ';', ',', '}']

    $end           reduce using rule 40 (expression)
    $end           [reduce using rule 68 (variable_access)]
    error          reduce using rule 40 (expression)
    error          [reduce using rule 68 (variable_access)]
    IDENTIFICADOR  reduce using rule 40 (expression)
    IDENTIFICADOR  [reduce using rule 68 (variable_access)]
    VAR_ARGS       reduce using rule 40 (expression)
    VAR_ARGS       [reduce using rule 68 (variable_access)]
    SI             reduce using rule 40 (expression)
    SI             [reduce using rule 68 (variable_access)]
    O_SI           reduce using rule 40 (expression)
    O_SI           [reduce using rule 68 (variable_access)]
    FIN            reduce using rule 40 (expression)
    FIN            [reduce using rule 68 (variable_access)]
    SINO           reduce using rule 40 (expression)
    SINO           [reduce using rule 68 (variable_access)]
    MIENTRAS       reduce using rule 40 (expression)
    MIENTRAS       [reduce using rule 68 (variable_access)]
    REPETIR        reduce using rule 40 (expression)
    REPETIR        [reduce using rule 68 (variable_access)]
    ROMPER         reduce using rule 40 (expression)
    ROMPER         [reduce using rule 68 (variable_access)]
    CONTINUAR      reduce using rule 40 (expression)
    CONTINUAR      [reduce using rule 68 (variable_access)]
    HASTA          reduce using rule 40 (expression)
    HASTA          [reduce using rule 68 (variable_access)]
    FUNCION        reduce using rule 40 (expression)
    FUNCION        [reduce using rule 68 (variable_access)]
    DESDE          reduce using rule 40 (expression)
    DESDE          [reduce using rule 68 (variable_access)]
    RETORNO        reduce using rule 40 (expression)
    RETORNO        [reduce using rule 68 (variable_access)]
    ELEGIR         reduce using rule 40 (expression)
    ELEGIR         [reduce using rule 68 (variable_access)]
    CASO           reduce using rule 40 (expression)
    CASO           [reduce using rule 68 (variable_access)]
    DEFECTO        reduce using rule 40 (expression)
    DEFECTO        [reduce using rule 68 (variable_access)]
    ATRIBUTO       reduce using rule 68 (variable_access)
    EXPONENTE      reduce using rule 40 (expression)
    EXPONENTE      [reduce using rule 68 (variable_access)]
    PARA           reduce using rule 40 (expression)
    PARA           [reduce using rule 68 (variable_access)]
    IR             reduce using rule 40 (expression)
    IR             [reduce using rule 68 (variable_access)]
    MAYOR_QUE      reduce using rule 40 (expression)
    MAYOR_QUE      [reduce using rule 68 (variable_access)]
    MENOR_QUE      reduce using rule 40 (expression)
    MENOR_QUE      [reduce using rule 68 (variable_access)]
    MAYOR_IGUAL    reduce using rule 40 (expression)
    MAYOR_IGUAL    [reduce using rule 68 (variable_access)]
    MENOR_IGUAL    reduce using rule 40 (expression)
    MENOR_IGUAL    [reduce using rule 68 (variable_access)]
    IGUAL_LOGICO   reduce using rule 40 (expression)
    IGUAL_LOGICO   [reduce using rule 68 (variable_access)]
    DIFERENTE      reduce using rule 40 (expression)
    DIFERENTE      [reduce using rule 68 (variable_access)]
    Y_LOGICO       reduce using rule 40 (expression)
    Y_LOGICO       [reduce using rule 68 (variable_access)]
    O_LOGICO       reduce using rule 40 (expression)
    O_LOGICO       [reduce using rule 68 (variable_access)]
    INCREMENTO     reduce using rule 68 (variable_access)
    DECREMENTO     reduce using rule 68 (variable_access)
    CONCATENAR     reduce using rule 40 (expression)
    CONCATENAR     [reduce using rule 68 (variable_access)]
    REGEX          reduce using rule 40 (expression)
    REGEX          [reduce using rule 68 (variable_access)]
    GLOBAL         reduce using rule 40 (expression)
    GLOBAL         [reduce using rule 68 (variable_access)]
    CLASE          reduce using rule 40 (expression)
    CLASE          [reduce using rule 68 (variable_access)]
    '='            reduce using rule 40 (expression)
    '='            [reduce using rule 68 (variable_access)]
    '+'            reduce using rule 40 (expression)
    '+'            [reduce using rule 68 (variable_access)]
    '-'            reduce using rule 40 (expression)
    '-'            [reduce using rule 68 (variable_access)]
    '*'            reduce using rule 40 (expression)
    '*'            [reduce using rule 68 (variable_access)]
    '/'            reduce using rule 40 (expression)
    '/'            [reduce using rule 68 (variable_access)]
    '%'            reduce using rule 40 (expression)
    '%'            [reduce using rule 68 (variable_access)]
    '^'            reduce using rule 40 (expression)
    '^'            [reduce using rule 68 (variable_access)]
    '?'            reduce using rule 40 (expression)
    '?'            [reduce using rule 68 (variable_access)]
    ':'            reduce using rule 40 (expression)
    ':'            [reduce using rule 68 (variable_access)]
    '('            reduce using rule 68 (variable_access)
    ')'            reduce using rule 40 (expression)
    ')'            [reduce using rule 68 (variable_access)]
    '['            reduce using rule 68 (variable_access)
    ']'            reduce using rule 40 (expression)
    ']'            [reduce using rule 68 (variable_access)]
    ';'            reduce using rule 40 (expression)
    ';'            [reduce using rule 68 (variable_access)]
    ','            reduce using rule 40 (expression)
    ','            [reduce using rule 68 (variable_access)]
    '}'            reduce using rule 40 (expression)
    '}'            [reduce using rule 68 (variable_access)]
    $default       reduce using rule 40 (expression)

    reduce/reduce conflict on tokens $end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, EXPONENTE, PARA, IR, MAYOR_QUE, MENOR_QUE, MAYOR_IGUAL, MENOR_IGUAL, IGUAL_LOGICO, DIFERENTE, Y_LOGICO, O_LOGICO, CONCATENAR, REGEX, GLOBAL, CLASE, '=', '+', '-', '*', '/', '%', '^', '?', ':', ')', ']', ';', ',', '}':
       40 expression: function_call •
       68 variable_access: function_call •
      Example: function_call •
      First reduce derivation
        expression
        ↳ 40: function_call •
      Second reduce derivation
        expression
        ↳ 43: variable_access
              ↳ 68: function_call •



State 67

   41 expression: list_new •

    $default  reduce using rule 41 (expression)


State 68

   42 expression: dict_new •

    $default  reduce using rule 42 (expression)


State 69

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression
   50 statement_list: • statement statement_list
   51               | • statement
   52               | • error statement_list
   53 statement: • declaration
   54          | • global_declaration
   55          | • selection_statement
   56          | • iteration_statement
   57          | • jump_statement
   58          | • function_definition
   59          | • function_call
   60          | • incdec_statement
   61          | • jump_loop
   62          | • goto_etiqueta
   63          | • clase_declaracion
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   71 global_declaration: • GLOBAL declaration
   72                   | • GLOBAL function_definition
   73 declaration: • variable_access '=' expression
   74            | • variable_access CONCATENAR_IGUAL expression
   75            | • variable_access MAS_IGUAL expression
   76            | • variable_access MENOS_IGUAL expression
   77            | • variable_access POR_IGUAL expression
   78            | • variable_access ENTRE_IGUAL expression
   79            | • variable_access MODULO_IGUAL expression
   80            | • parameter_list '=' argument_expression_list
   81            | • variable_access '[' expression ']' '=' expression
   89 selection_statement: • SI expression statement_list FIN
   90                    | • SI expression statement_list SINO statement_list FIN
   91                    | • SI expression statement_list osi_statements FIN
   92                    | • ELEGIR expression labeled_statements FIN
   98 iteration_statement: • MIENTRAS expression statement_list FIN
   98                    | MIENTRAS expression • statement_list FIN
   99                    | • REPETIR statement_list HASTA expression
  100                    | • DESDE '(' declaration ';' expression ';' statement ')' statement_list FIN
  101                    | • PARA IDENTIFICADOR EN RANGO '(' expression ')' statement_list FIN
  102                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ')' statement_list FIN
  103                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ',' expression ')' statement_list FIN
  104 goto_etiqueta: • IDENTIFICADOR ':'
  105 jump_statement: • RETORNO expression
  106               | • RETORNO argument_expression_list
  107               | • IR IDENTIFICADOR
  108 jump_loop: • ROMPER
  109          | • CONTINUAR
  110 function_definition: • FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  116 parameter_list: ε •  ['=', ',']
  117               | • IDENTIFICADOR
  118               | • VAR_ARGS
  119               | • parameter_list ',' IDENTIFICADOR
  120               | • parameter_list ',' VAR_ARGS
  146 clase_declaracion: • CLASE IDENTIFICADOR clase_sentencias FIN

    error          shift, and go to state 1
    IDENTIFICADOR  shift, and go to state 2
    VAR_ARGS       shift, and go to state 3
    SI             shift, and go to state 4
    MIENTRAS       shift, and go to state 5
    REPETIR        shift, and go to state 6
    ROMPER         shift, and go to state 7
    CONTINUAR      shift, and go to state 8
    FUNCION        shift, and go to state 9
    DESDE          shift, and go to state 10
    RETORNO        shift, and go to state 11
    ELEGIR         shift, and go to state 12
    EXPONENTE      shift, and go to state 110
    PARA           shift, and go to state 13
    IR             shift, and go to state 14
    MAYOR_QUE      shift, and go to state 111
    MENOR_QUE      shift, and go to state 112
    MAYOR_IGUAL    shift, and go to state 113
    MENOR_IGUAL    shift, and go to state 114
    IGUAL_LOGICO   shift, and go to state 115
    DIFERENTE      shift, and go to state 116
    Y_LOGICO       shift, and go to state 117
    O_LOGICO       shift, and go to state 118
    CONCATENAR     shift, and go to state 119
    REGEX          shift, and go to state 120
    GLOBAL         shift, and go to state 15
    CLASE          shift, and go to state 16
    '+'            shift, and go to state 121
    '-'            shift, and go to state 122
    '*'            shift, and go to state 123
    '/'            shift, and go to state 124
    '%'            shift, and go to state 125
    '^'            shift, and go to state 126
    '?'            shift, and go to state 127

    '='  reduce using rule 116 (parameter_list)
    ','  reduce using rule 116 (parameter_list)

    statement_list       go to state 130
    statement            go to state 19
    incdec_statement     go to state 20
    variable_access      go to state 21
    field_designator     go to state 22
    global_declaration   go to state 23
    declaration          go to state 24
    selection_statement  go to state 25
    iteration_statement  go to state 26
    goto_etiqueta        go to state 27
    jump_statement       go to state 28
    jump_loop            go to state 29
    function_definition  go to state 30
    function_call        go to state 31
    parameter_list       go to state 32
    clase_declaracion    go to state 33


State 70

   99 iteration_statement: REPETIR statement_list • HASTA expression

    HASTA  shift, and go to state 131


State 71

  110 function_definition: FUNCION IDENTIFICADOR • '(' parameter_list ')' statement_list FIN

    '('  shift, and go to state 132


State 72

   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   73 declaration: • variable_access '=' expression
   74            | • variable_access CONCATENAR_IGUAL expression
   75            | • variable_access MAS_IGUAL expression
   76            | • variable_access MENOS_IGUAL expression
   77            | • variable_access POR_IGUAL expression
   78            | • variable_access ENTRE_IGUAL expression
   79            | • variable_access MODULO_IGUAL expression
   80            | • parameter_list '=' argument_expression_list
   81            | • variable_access '[' expression ']' '=' expression
  100 iteration_statement: DESDE '(' • declaration ';' expression ';' statement ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  116 parameter_list: ε •  ['=', ',']
  117               | • IDENTIFICADOR
  118               | • VAR_ARGS
  119               | • parameter_list ',' IDENTIFICADOR
  120               | • parameter_list ',' VAR_ARGS

    IDENTIFICADOR  shift, and go to state 78
    VAR_ARGS       shift, and go to state 3

    $default  reduce using rule 116 (parameter_list)

    variable_access   go to state 79
    field_designator  go to state 22
    declaration       go to state 133
    function_call     go to state 82
    parameter_list    go to state 32


State 73

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression
  105 jump_statement: RETORNO expression •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, PARA, IR, GLOBAL, CLASE, '=', ')', ',']
  114 argument_expression_list: expression •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, PARA, IR, GLOBAL, CLASE, '=', ')', ',']
  115                         | expression • ',' argument_expression_list

    EXPONENTE     shift, and go to state 110
    MAYOR_QUE     shift, and go to state 111
    MENOR_QUE     shift, and go to state 112
    MAYOR_IGUAL   shift, and go to state 113
    MENOR_IGUAL   shift, and go to state 114
    IGUAL_LOGICO  shift, and go to state 115
    DIFERENTE     shift, and go to state 116
    Y_LOGICO      shift, and go to state 117
    O_LOGICO      shift, and go to state 118
    CONCATENAR    shift, and go to state 119
    REGEX         shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '%'           shift, and go to state 125
    '^'           shift, and go to state 126
    '?'           shift, and go to state 127
    ','           shift, and go to state 134

    $end           reduce using rule 105 (jump_statement)
    $end           [reduce using rule 114 (argument_expression_list)]
    error          reduce using rule 105 (jump_statement)
    error          [reduce using rule 114 (argument_expression_list)]
    IDENTIFICADOR  reduce using rule 105 (jump_statement)
    IDENTIFICADOR  [reduce using rule 114 (argument_expression_list)]
    VAR_ARGS       reduce using rule 105 (jump_statement)
    VAR_ARGS       [reduce using rule 114 (argument_expression_list)]
    SI             reduce using rule 105 (jump_statement)
    SI             [reduce using rule 114 (argument_expression_list)]
    O_SI           reduce using rule 105 (jump_statement)
    O_SI           [reduce using rule 114 (argument_expression_list)]
    FIN            reduce using rule 105 (jump_statement)
    FIN            [reduce using rule 114 (argument_expression_list)]
    SINO           reduce using rule 105 (jump_statement)
    SINO           [reduce using rule 114 (argument_expression_list)]
    MIENTRAS       reduce using rule 105 (jump_statement)
    MIENTRAS       [reduce using rule 114 (argument_expression_list)]
    REPETIR        reduce using rule 105 (jump_statement)
    REPETIR        [reduce using rule 114 (argument_expression_list)]
    ROMPER         reduce using rule 105 (jump_statement)
    ROMPER         [reduce using rule 114 (argument_expression_list)]
    CONTINUAR      reduce using rule 105 (jump_statement)
    CONTINUAR      [reduce using rule 114 (argument_expression_list)]
    HASTA          reduce using rule 105 (jump_statement)
    HASTA          [reduce using rule 114 (argument_expression_list)]
    FUNCION        reduce using rule 105 (jump_statement)
    FUNCION        [reduce using rule 114 (argument_expression_list)]
    DESDE          reduce using rule 105 (jump_statement)
    DESDE          [reduce using rule 114 (argument_expression_list)]
    RETORNO        reduce using rule 105 (jump_statement)
    RETORNO        [reduce using rule 114 (argument_expression_list)]
    ELEGIR         reduce using rule 105 (jump_statement)
    ELEGIR         [reduce using rule 114 (argument_expression_list)]
    CASO           reduce using rule 105 (jump_statement)
    CASO           [reduce using rule 114 (argument_expression_list)]
    DEFECTO        reduce using rule 105 (jump_statement)
    DEFECTO        [reduce using rule 114 (argument_expression_list)]
    PARA           reduce using rule 105 (jump_statement)
    PARA           [reduce using rule 114 (argument_expression_list)]
    IR             reduce using rule 105 (jump_statement)
    IR             [reduce using rule 114 (argument_expression_list)]
    GLOBAL         reduce using rule 105 (jump_statement)
    GLOBAL         [reduce using rule 114 (argument_expression_list)]
    CLASE          reduce using rule 105 (jump_statement)
    CLASE          [reduce using rule 114 (argument_expression_list)]
    '='            reduce using rule 105 (jump_statement)
    '='            [reduce using rule 114 (argument_expression_list)]
    ')'            reduce using rule 105 (jump_statement)
    ')'            [reduce using rule 114 (argument_expression_list)]
    ','            [reduce using rule 105 (jump_statement)]
    ','            [reduce using rule 114 (argument_expression_list)]
    $default       reduce using rule 105 (jump_statement)

    shift/reduce conflict on token ',':
      105 jump_statement: RETORNO expression •
      115 argument_expression_list: expression • ',' argument_expression_list
      First example: statement_list
      Shift derivation
        statement_list
        ↳ 50: statement_list
      Second example: ',' statement_list
      Reduce derivation
        statement_list
        ↳ 50: ',' statement_list
                  ↳ 50: statement_list

    reduce/reduce conflict on tokens $end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, PARA, IR, GLOBAL, CLASE, '=', ')', ',':
      105 jump_statement: RETORNO expression •
      114 argument_expression_list: expression •
      Example: RETORNO expression •
      First reduce derivation
        jump_statement
        ↳ 105: RETORNO expression •
      Second reduce derivation
        jump_statement
        ↳ 106: RETORNO argument_expression_list
                       ↳ 114: expression •

    shift/reduce conflict on token ',':
      114 argument_expression_list: expression •
      115 argument_expression_list: expression • ',' argument_expression_list
      First example: statement_list
      Shift derivation
        statement_list
        ↳ 50: statement_list
      Second example: ',' statement_list
      Reduce derivation
        statement_list
        ↳ 50: ',' statement_list
                  ↳ 50: statement_list



State 74

  106 jump_statement: RETORNO argument_expression_list •

    $default  reduce using rule 106 (jump_statement)


State 75

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression
   82 labeled_statements: • labeled_statement_case labeled_statements
   83                   | • labeled_statement_case
   84                   | • labeled_statement_default
   85 labeled_statement_case: • CASO labeled_statement_case_case statement_list
   88 labeled_statement_default: • DEFECTO ':' statement_list
   92 selection_statement: ELEGIR expression • labeled_statements FIN

    CASO          shift, and go to state 135
    DEFECTO       shift, and go to state 136
    EXPONENTE     shift, and go to state 110
    MAYOR_QUE     shift, and go to state 111
    MENOR_QUE     shift, and go to state 112
    MAYOR_IGUAL   shift, and go to state 113
    MENOR_IGUAL   shift, and go to state 114
    IGUAL_LOGICO  shift, and go to state 115
    DIFERENTE     shift, and go to state 116
    Y_LOGICO      shift, and go to state 117
    O_LOGICO      shift, and go to state 118
    CONCATENAR    shift, and go to state 119
    REGEX         shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '%'           shift, and go to state 125
    '^'           shift, and go to state 126
    '?'           shift, and go to state 127

    labeled_statements         go to state 137
    labeled_statement_case     go to state 138
    labeled_statement_default  go to state 139


State 76

  101 iteration_statement: PARA IDENTIFICADOR • EN RANGO '(' expression ')' statement_list FIN
  102                    | PARA IDENTIFICADOR • EN RANGO '(' expression ',' expression ')' statement_list FIN
  103                    | PARA IDENTIFICADOR • EN RANGO '(' expression ',' expression ',' expression ')' statement_list FIN

    EN  shift, and go to state 140


State 77

  107 jump_statement: IR IDENTIFICADOR •

    $default  reduce using rule 107 (jump_statement)


State 78

   66 variable_access: IDENTIFICADOR •  [ATRIBUTO, CONCATENAR_IGUAL, MAS_IGUAL, MENOS_IGUAL, POR_IGUAL, ENTRE_IGUAL, MODULO_IGUAL, '=', '(', '[']
  117 parameter_list: IDENTIFICADOR •  ['=', ',']

    '='       reduce using rule 66 (variable_access)
    '='       [reduce using rule 117 (parameter_list)]
    ','       reduce using rule 117 (parameter_list)
    $default  reduce using rule 66 (variable_access)

    reduce/reduce conflict on token '=':
       66 variable_access: IDENTIFICADOR •
      117 parameter_list: IDENTIFICADOR •
      Example: IDENTIFICADOR • '=' expression
      First reduce derivation
        declaration
        ↳ 73: variable_access       '=' expression
              ↳ 66: IDENTIFICADOR •
      Second reduce derivation
        declaration
        ↳ 80: parameter_list         '=' argument_expression_list
              ↳ 117: IDENTIFICADOR •     ↳ 114: expression



State 79

   69 field_designator: variable_access • ATRIBUTO IDENTIFICADOR
   70                 | variable_access • '[' expression ']'
   73 declaration: variable_access • '=' expression
   74            | variable_access • CONCATENAR_IGUAL expression
   75            | variable_access • MAS_IGUAL expression
   76            | variable_access • MENOS_IGUAL expression
   77            | variable_access • POR_IGUAL expression
   78            | variable_access • ENTRE_IGUAL expression
   79            | variable_access • MODULO_IGUAL expression
   81            | variable_access • '[' expression ']' '=' expression
  112 function_call: variable_access • '(' argument_expression_list ')'

    ATRIBUTO          shift, and go to state 86
    CONCATENAR_IGUAL  shift, and go to state 89
    MAS_IGUAL         shift, and go to state 90
    MENOS_IGUAL       shift, and go to state 91
    POR_IGUAL         shift, and go to state 92
    ENTRE_IGUAL       shift, and go to state 93
    MODULO_IGUAL      shift, and go to state 94
    '='               shift, and go to state 95
    '('               shift, and go to state 96
    '['               shift, and go to state 97


State 80

   71 global_declaration: GLOBAL declaration •

    $default  reduce using rule 71 (global_declaration)


State 81

   72 global_declaration: GLOBAL function_definition •

    $default  reduce using rule 72 (global_declaration)


State 82

   68 variable_access: function_call •

    $default  reduce using rule 68 (variable_access)


State 83

  131 clase_propiedad: • IDENTIFICADOR '=' expression
  132 clase_propiedades: • clase_propiedad clase_propiedades
  133                  | • clase_propiedad
  134                  | • error statement_list
  135 clase_funcion: • FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN
  136 clase_funciones: • clase_funcion clase_funciones
  137                | • clase_funcion
  138                | • error statement_list
  139 clase_sentencia: • clase_propiedades
  140                | • clase_funciones
  141                | • RETORNO expression
  142                | • RETORNO argument_expression_list
  143 clase_sentencias: • clase_sentencia clase_sentencias
  144                 | • clase_sentencia
  145                 | • error statement_list
  146 clase_declaracion: CLASE IDENTIFICADOR • clase_sentencias FIN

    error          shift, and go to state 141
    IDENTIFICADOR  shift, and go to state 142
    FUNCION        shift, and go to state 143
    RETORNO        shift, and go to state 144

    clase_propiedad    go to state 145
    clase_propiedades  go to state 146
    clase_funcion      go to state 147
    clase_funciones    go to state 148
    clase_sentencia    go to state 149
    clase_sentencias   go to state 150


State 84

    0 $accept: program $end •

    $default  accept


State 85

   50 statement_list: statement statement_list •

    $default  reduce using rule 50 (statement_list)


State 86

   69 field_designator: variable_access ATRIBUTO • IDENTIFICADOR

    IDENTIFICADOR  shift, and go to state 151


State 87

   64 incdec_statement: variable_access INCREMENTO •

    $default  reduce using rule 64 (incdec_statement)


State 88

   65 incdec_statement: variable_access DECREMENTO •

    $default  reduce using rule 65 (incdec_statement)


State 89

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   74 declaration: variable_access CONCATENAR_IGUAL • expression
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 152
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 90

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   75 declaration: variable_access MAS_IGUAL • expression
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 153
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 91

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   76 declaration: variable_access MENOS_IGUAL • expression
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 154
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 92

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   77 declaration: variable_access POR_IGUAL • expression
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 155
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 93

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   78 declaration: variable_access ENTRE_IGUAL • expression
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 156
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 94

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   79 declaration: variable_access MODULO_IGUAL • expression
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 157
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 95

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   73 declaration: variable_access '=' • expression
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 158
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 96

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  112              | variable_access '(' • argument_expression_list ')'
  113 argument_expression_list: ε •  [')']
  114                         | • expression
  115                         | • expression ',' argument_expression_list
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    $default  reduce using rule 113 (argument_expression_list)

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 159
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    argument_expression_list   go to state 160
    list_new                   go to state 67
    dict_new                   go to state 68


State 97

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   70                 | variable_access '[' • expression ']'
   81 declaration: variable_access '[' • expression ']' '=' expression
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 161
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 98

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   80 declaration: parameter_list '=' • argument_expression_list
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  113 argument_expression_list: ε •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, PARA, IR, GLOBAL, CLASE, '=', ')', ';', ',']
  114                         | • expression
  115                         | • expression ',' argument_expression_list
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    IDENTIFICADOR  [reduce using rule 113 (argument_expression_list)]
    VAR_ARGS       [reduce using rule 113 (argument_expression_list)]
    FUNCION        [reduce using rule 113 (argument_expression_list)]
    $default       reduce using rule 113 (argument_expression_list)

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 159
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    argument_expression_list   go to state 162
    list_new                   go to state 67
    dict_new                   go to state 68

    shift/reduce conflict on token IDENTIFICADOR:
      113 argument_expression_list: ε •
        3 primary_expression: • IDENTIFICADOR
      First example: statement_list
      Shift derivation
        statement_list
        ↳ 50: statement_list
      Second example: IDENTIFICADOR
      Reduce derivation
        statement_list
        ↳ 50: IDENTIFICADOR

    shift/reduce conflict on token VAR_ARGS:
      113 argument_expression_list: ε •
       47 expression: • VAR_ARGS
      First example: statement_list
      Shift derivation
        statement_list
        ↳ 50: statement_list
      Second example: VAR_ARGS
      Reduce derivation
        statement_list
        ↳ 50: VAR_ARGS

    shift/reduce conflict on token IDENTIFICADOR:
      113 argument_expression_list: ε •
       66 variable_access: • IDENTIFICADOR
      First example: statement_list
      Shift derivation
        statement_list
        ↳ 50: statement_list
      Second example: IDENTIFICADOR
      Reduce derivation
        statement_list
        ↳ 50: IDENTIFICADOR

    shift/reduce conflict on token FUNCION:
      113 argument_expression_list: ε •
      111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
      First example: parameter_list '=' • FUNCION '(' parameter_list ')' statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                     $end
             ↳ 49: statement_list
                   ↳ 50: declaration                                                                                      statement_list
                         ↳ 80: parameter_list '=' argument_expression_list
                                                  ↳ 114: expression
                                                         ↳ 44: function_anonymous
                                                               ↳ 111: • FUNCION '(' parameter_list ')' statement_list FIN
      Second example: parameter_list '=' • FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                                               $end
             ↳ 49: statement_list
                   ↳ 50: statement                                               statement_list
                         ↳ 53: declaration                                       ↳ 50: statement                                                                    statement_list
                               ↳ 80: parameter_list '=' argument_expression_list       ↳ 58: function_definition
                                                        ↳ 113: ε •                           ↳ 110: FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN



State 99

  119 parameter_list: parameter_list ',' • IDENTIFICADOR
  120               | parameter_list ',' • VAR_ARGS

    IDENTIFICADOR  shift, and go to state 163
    VAR_ARGS       shift, and go to state 164


State 100

  111 function_anonymous: FUNCION '(' • parameter_list ')' statement_list FIN
  116 parameter_list: ε •  [')', ',']
  117               | • IDENTIFICADOR
  118               | • VAR_ARGS
  119               | • parameter_list ',' IDENTIFICADOR
  120               | • parameter_list ',' VAR_ARGS

    IDENTIFICADOR  shift, and go to state 165
    VAR_ARGS       shift, and go to state 3

    $default  reduce using rule 116 (parameter_list)

    parameter_list  go to state 166


State 101

    8 unary_expression: '+' expression •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, PARA, IR, MAYOR_QUE, MENOR_QUE, MAYOR_IGUAL, MENOR_IGUAL, IGUAL_LOGICO, DIFERENTE, Y_LOGICO, O_LOGICO, CONCATENAR, REGEX, GLOBAL, CLASE, '=', '+', '-', '*', '/', '%', '?', ':', ')', ']', ';', ',', '}']
    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression

    EXPONENTE  shift, and go to state 110
    '^'        shift, and go to state 126
    '?'        shift, and go to state 127

    '?'       [reduce using rule 8 (unary_expression)]
    $default  reduce using rule 8 (unary_expression)

    Conflict between rule 8 and token EXPONENTE resolved as shift ('*' < EXPONENTE).
    Conflict between rule 8 and token MAYOR_QUE resolved as reduce (MAYOR_QUE < '*').
    Conflict between rule 8 and token MENOR_QUE resolved as reduce (MENOR_QUE < '*').
    Conflict between rule 8 and token MAYOR_IGUAL resolved as reduce (MAYOR_IGUAL < '*').
    Conflict between rule 8 and token MENOR_IGUAL resolved as reduce (MENOR_IGUAL < '*').
    Conflict between rule 8 and token IGUAL_LOGICO resolved as reduce (IGUAL_LOGICO < '*').
    Conflict between rule 8 and token DIFERENTE resolved as reduce (DIFERENTE < '*').
    Conflict between rule 8 and token Y_LOGICO resolved as reduce (Y_LOGICO < '*').
    Conflict between rule 8 and token O_LOGICO resolved as reduce (O_LOGICO < '*').
    Conflict between rule 8 and token CONCATENAR resolved as reduce (CONCATENAR < '*').
    Conflict between rule 8 and token REGEX resolved as reduce (REGEX < '*').
    Conflict between rule 8 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 8 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 8 and token '*' resolved as reduce (%left '*').
    Conflict between rule 8 and token '/' resolved as reduce (%left '/').
    Conflict between rule 8 and token '%' resolved as reduce (%left '%').
    Conflict between rule 8 and token '^' resolved as shift ('*' < '^').

    shift/reduce conflict on token '?':
        8 unary_expression: '+' expression •
       26 ternary_expression: expression • '?' expression ':' expression
      Example: '+' expression • '?' expression ':' expression
      Shift derivation
        expression
        ↳ 31: unary_expression
              ↳ 8: '+' expression
                       ↳ 45: ternary_expression
                             ↳ 26: expression • '?' expression ':' expression
      Reduce derivation
        expression
        ↳ 45: ternary_expression
              ↳ 26: expression                  '?' expression ':' expression
                    ↳ 31: unary_expression
                          ↳ 8: '+' expression •



State 102

    7 unary_expression: '-' expression •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, PARA, IR, MAYOR_QUE, MENOR_QUE, MAYOR_IGUAL, MENOR_IGUAL, IGUAL_LOGICO, DIFERENTE, Y_LOGICO, O_LOGICO, CONCATENAR, REGEX, GLOBAL, CLASE, '=', '+', '-', '*', '/', '%', '?', ':', ')', ']', ';', ',', '}']
    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression

    EXPONENTE  shift, and go to state 110
    '^'        shift, and go to state 126
    '?'        shift, and go to state 127

    '?'       [reduce using rule 7 (unary_expression)]
    $default  reduce using rule 7 (unary_expression)

    Conflict between rule 7 and token EXPONENTE resolved as shift ('*' < EXPONENTE).
    Conflict between rule 7 and token MAYOR_QUE resolved as reduce (MAYOR_QUE < '*').
    Conflict between rule 7 and token MENOR_QUE resolved as reduce (MENOR_QUE < '*').
    Conflict between rule 7 and token MAYOR_IGUAL resolved as reduce (MAYOR_IGUAL < '*').
    Conflict between rule 7 and token MENOR_IGUAL resolved as reduce (MENOR_IGUAL < '*').
    Conflict between rule 7 and token IGUAL_LOGICO resolved as reduce (IGUAL_LOGICO < '*').
    Conflict between rule 7 and token DIFERENTE resolved as reduce (DIFERENTE < '*').
    Conflict between rule 7 and token Y_LOGICO resolved as reduce (Y_LOGICO < '*').
    Conflict between rule 7 and token O_LOGICO resolved as reduce (O_LOGICO < '*').
    Conflict between rule 7 and token CONCATENAR resolved as reduce (CONCATENAR < '*').
    Conflict between rule 7 and token REGEX resolved as reduce (REGEX < '*').
    Conflict between rule 7 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 7 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 7 and token '*' resolved as reduce (%left '*').
    Conflict between rule 7 and token '/' resolved as reduce (%left '/').
    Conflict between rule 7 and token '%' resolved as reduce (%left '%').
    Conflict between rule 7 and token '^' resolved as shift ('*' < '^').

    shift/reduce conflict on token '?':
        7 unary_expression: '-' expression •
       26 ternary_expression: expression • '?' expression ':' expression
      Example: '-' expression • '?' expression ':' expression
      Shift derivation
        expression
        ↳ 31: unary_expression
              ↳ 7: '-' expression
                       ↳ 45: ternary_expression
                             ↳ 26: expression • '?' expression ':' expression
      Reduce derivation
        expression
        ↳ 45: ternary_expression
              ↳ 26: expression                  '?' expression ':' expression
                    ↳ 31: unary_expression
                          ↳ 7: '-' expression •



State 103

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   23 logical_not_expression: '!' expression •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, PARA, IR, MAYOR_QUE, MENOR_QUE, MAYOR_IGUAL, MENOR_IGUAL, IGUAL_LOGICO, DIFERENTE, Y_LOGICO, O_LOGICO, CONCATENAR, REGEX, GLOBAL, CLASE, '=', '+', '-', '*', '/', '%', '?', ':', ')', ']', ';', ',', '}']
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression

    EXPONENTE  shift, and go to state 110
    '^'        shift, and go to state 126
    '?'        shift, and go to state 127

    '?'       [reduce using rule 23 (logical_not_expression)]
    $default  reduce using rule 23 (logical_not_expression)

    Conflict between rule 23 and token EXPONENTE resolved as shift ('*' < EXPONENTE).
    Conflict between rule 23 and token MAYOR_QUE resolved as reduce (MAYOR_QUE < '*').
    Conflict between rule 23 and token MENOR_QUE resolved as reduce (MENOR_QUE < '*').
    Conflict between rule 23 and token MAYOR_IGUAL resolved as reduce (MAYOR_IGUAL < '*').
    Conflict between rule 23 and token MENOR_IGUAL resolved as reduce (MENOR_IGUAL < '*').
    Conflict between rule 23 and token IGUAL_LOGICO resolved as reduce (IGUAL_LOGICO < '*').
    Conflict between rule 23 and token DIFERENTE resolved as reduce (DIFERENTE < '*').
    Conflict between rule 23 and token Y_LOGICO resolved as reduce (Y_LOGICO < '*').
    Conflict between rule 23 and token O_LOGICO resolved as reduce (O_LOGICO < '*').
    Conflict between rule 23 and token CONCATENAR resolved as reduce (CONCATENAR < '*').
    Conflict between rule 23 and token REGEX resolved as reduce (REGEX < '*').
    Conflict between rule 23 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 23 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 23 and token '*' resolved as reduce (%left '*').
    Conflict between rule 23 and token '/' resolved as reduce (%left '/').
    Conflict between rule 23 and token '%' resolved as reduce (%left '%').
    Conflict between rule 23 and token '^' resolved as shift ('*' < '^').

    shift/reduce conflict on token '?':
       23 logical_not_expression: '!' expression •
       26 ternary_expression: expression • '?' expression ':' expression
      Example: '!' expression • '?' expression ':' expression
      Shift derivation
        expression
        ↳ 36: logical_not_expression
              ↳ 23: '!' expression
                        ↳ 45: ternary_expression
                              ↳ 26: expression • '?' expression ':' expression
      Reduce derivation
        expression
        ↳ 45: ternary_expression
              ↳ 26: expression                   '?' expression ':' expression
                    ↳ 36: logical_not_expression
                          ↳ 23: '!' expression •



State 104

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression
   28 expression: '(' expression • ')'

    EXPONENTE     shift, and go to state 110
    MAYOR_QUE     shift, and go to state 111
    MENOR_QUE     shift, and go to state 112
    MAYOR_IGUAL   shift, and go to state 113
    MENOR_IGUAL   shift, and go to state 114
    IGUAL_LOGICO  shift, and go to state 115
    DIFERENTE     shift, and go to state 116
    Y_LOGICO      shift, and go to state 117
    O_LOGICO      shift, and go to state 118
    CONCATENAR    shift, and go to state 119
    REGEX         shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '%'           shift, and go to state 125
    '^'           shift, and go to state 126
    '?'           shift, and go to state 127
    ')'           shift, and go to state 167


State 105

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression
  123 list_items: expression •  [']']
  124           | expression • ',' list_items

    EXPONENTE     shift, and go to state 110
    MAYOR_QUE     shift, and go to state 111
    MENOR_QUE     shift, and go to state 112
    MAYOR_IGUAL   shift, and go to state 113
    MENOR_IGUAL   shift, and go to state 114
    IGUAL_LOGICO  shift, and go to state 115
    DIFERENTE     shift, and go to state 116
    Y_LOGICO      shift, and go to state 117
    O_LOGICO      shift, and go to state 118
    CONCATENAR    shift, and go to state 119
    REGEX         shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '%'           shift, and go to state 125
    '^'           shift, and go to state 126
    '?'           shift, and go to state 127
    ','           shift, and go to state 168

    $default  reduce using rule 123 (list_items)


State 106

  121 list_new: '[' list_items • ']'

    ']'  shift, and go to state 169


State 107

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression
  130 dict_item: expression • ':' expression

    EXPONENTE     shift, and go to state 110
    MAYOR_QUE     shift, and go to state 111
    MENOR_QUE     shift, and go to state 112
    MAYOR_IGUAL   shift, and go to state 113
    MENOR_IGUAL   shift, and go to state 114
    IGUAL_LOGICO  shift, and go to state 115
    DIFERENTE     shift, and go to state 116
    Y_LOGICO      shift, and go to state 117
    O_LOGICO      shift, and go to state 118
    CONCATENAR    shift, and go to state 119
    REGEX         shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '%'           shift, and go to state 125
    '^'           shift, and go to state 126
    '?'           shift, and go to state 127
    ':'           shift, and go to state 170


State 108

  125 dict_new: '{' dict_items • '}'
  128 dict_items: dict_items • ',' dict_item

    ','  shift, and go to state 171
    '}'  shift, and go to state 172


State 109

  127 dict_items: dict_item •

    $default  reduce using rule 127 (dict_items)


State 110

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   10                          | expression EXPONENTE • expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 173
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 111

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   16                      | expression MAYOR_QUE • expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 174
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 112

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   17                      | expression MENOR_QUE • expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 175
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 113

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   18                      | expression MAYOR_IGUAL • expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 176
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 114

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   19                      | expression MENOR_IGUAL • expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 177
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 115

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   21                    | expression IGUAL_LOGICO • expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 178
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 116

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   20                    | expression DIFERENTE • expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 179
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 117

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   24                       | expression Y_LOGICO • expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 180
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 118

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   25                      | expression O_LOGICO • expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 181
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 119

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   27                  | expression CONCATENAR • expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 182
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 120

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   22                    | expression REGEX • expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 183
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 121

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   15                    | expression '+' • expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 184
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 122

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   14                    | expression '-' • expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 185
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 123

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   11                          | expression '*' • expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 186
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 124

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   12                          | expression '/' • expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 187
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 125

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   13                          | expression '%' • expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 188
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 126

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
    9                          | expression '^' • expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 189
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 127

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   26                   | expression '?' • expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 190
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 128

   89 selection_statement: SI expression statement_list • FIN
   90                    | SI expression statement_list • SINO statement_list FIN
   91                    | SI expression statement_list • osi_statements FIN
   93 osi_statements: • osi_statement
   94               | • osi_statements osi_statement
   95 osi_statement: • O_SI expression statement_list
   96              | • O_SI expression statement_list SINO statement_list
   97              | • O_SI expression statement_list osi_statements

    O_SI  shift, and go to state 191
    FIN   shift, and go to state 192
    SINO  shift, and go to state 193

    osi_statements  go to state 194
    osi_statement   go to state 195


State 129

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   70                 | variable_access '[' • expression ']'
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 196
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 130

   98 iteration_statement: MIENTRAS expression statement_list • FIN

    FIN  shift, and go to state 197


State 131

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   99 iteration_statement: REPETIR statement_list HASTA • expression
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 198
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 132

  110 function_definition: FUNCION IDENTIFICADOR '(' • parameter_list ')' statement_list FIN
  116 parameter_list: ε •  [')', ',']
  117               | • IDENTIFICADOR
  118               | • VAR_ARGS
  119               | • parameter_list ',' IDENTIFICADOR
  120               | • parameter_list ',' VAR_ARGS

    IDENTIFICADOR  shift, and go to state 165
    VAR_ARGS       shift, and go to state 3

    $default  reduce using rule 116 (parameter_list)

    parameter_list  go to state 199


State 133

  100 iteration_statement: DESDE '(' declaration • ';' expression ';' statement ')' statement_list FIN

    ';'  shift, and go to state 200


State 134

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  113 argument_expression_list: ε •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, PARA, IR, GLOBAL, CLASE, '=', ')', ';', ',']
  114                         | • expression
  115                         | • expression ',' argument_expression_list
  115                         | expression ',' • argument_expression_list
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    IDENTIFICADOR  [reduce using rule 113 (argument_expression_list)]
    VAR_ARGS       [reduce using rule 113 (argument_expression_list)]
    FUNCION        [reduce using rule 113 (argument_expression_list)]
    $default       reduce using rule 113 (argument_expression_list)

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 159
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    argument_expression_list   go to state 201
    list_new                   go to state 67
    dict_new                   go to state 68

    shift/reduce conflict on token IDENTIFICADOR:
      113 argument_expression_list: ε •
        3 primary_expression: • IDENTIFICADOR
      First example: expression ',' • IDENTIFICADOR argument_expression_list statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                  $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                     statement_list
                         ↳ 57: jump_statement
                               ↳ 106: argument_expression_list                                argument_expression_list
                                      ↳ 115: expression ',' argument_expression_list
                                                            ↳ 114: expression
                                                                   ↳ 30: primary_expression
                                                                         ↳ 3: • IDENTIFICADOR
      Second example: RETORNO expression ',' • IDENTIFICADOR ':' statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                             $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                           statement_list
                         ↳ 57: jump_statement                                                ↳ 50: statement                      statement_list
                               ↳ 106: RETORNO argument_expression_list                             ↳ 62: goto_etiqueta
                                              ↳ 115: expression ',' argument_expression_list             ↳ 104: IDENTIFICADOR ':'
                                                                    ↳ 113: ε •

    shift/reduce conflict on token VAR_ARGS:
      113 argument_expression_list: ε •
       47 expression: • VAR_ARGS
      First example: expression ',' • VAR_ARGS argument_expression_list statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                         $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                            statement_list
                         ↳ 57: jump_statement
                               ↳ 106: argument_expression_list                       argument_expression_list
                                      ↳ 115: expression ',' argument_expression_list
                                                            ↳ 114: expression
                                                                   ↳ 47: • VAR_ARGS
      Second example: RETORNO expression ',' • VAR_ARGS '=' argument_expression_list statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                                       $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                           statement_list
                         ↳ 57: jump_statement                                                ↳ 50: statement                                                statement_list
                               ↳ 106: RETORNO argument_expression_list                             ↳ 53: declaration
                                              ↳ 115: expression ',' argument_expression_list             ↳ 80: parameter_list  '=' argument_expression_list
                                                                    ↳ 113: ε •                                 ↳ 118: VAR_ARGS

    shift/reduce conflict on token IDENTIFICADOR:
      113 argument_expression_list: ε •
       66 variable_access: • IDENTIFICADOR
      First example: expression ',' • IDENTIFICADOR argument_expression_list statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                   $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                      statement_list
                         ↳ 57: jump_statement
                               ↳ 106: argument_expression_list                                 argument_expression_list
                                      ↳ 115: expression ',' argument_expression_list
                                                            ↳ 114: expression
                                                                   ↳ 43: variable_access
                                                                         ↳ 66: • IDENTIFICADOR
      Second example: RETORNO expression ',' • IDENTIFICADOR ':' statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                             $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                           statement_list
                         ↳ 57: jump_statement                                                ↳ 50: statement                      statement_list
                               ↳ 106: RETORNO argument_expression_list                             ↳ 62: goto_etiqueta
                                              ↳ 115: expression ',' argument_expression_list             ↳ 104: IDENTIFICADOR ':'
                                                                    ↳ 113: ε •

    shift/reduce conflict on token FUNCION:
      113 argument_expression_list: ε •
      111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
      First example: expression ',' • FUNCION '(' parameter_list ')' statement_list FIN argument_expression_list statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                        $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                           statement_list
                         ↳ 57: jump_statement
                               ↳ 106: argument_expression_list                                                                      argument_expression_list
                                      ↳ 115: expression ',' argument_expression_list
                                                            ↳ 114: expression
                                                                   ↳ 44: function_anonymous
                                                                         ↳ 111: • FUNCION '(' parameter_list ')' statement_list FIN
      Second example: RETORNO expression ',' • FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                                                           $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                           statement_list
                         ↳ 57: jump_statement                                                ↳ 50: statement                                                                    statement_list
                               ↳ 106: RETORNO argument_expression_list                             ↳ 58: function_definition
                                              ↳ 115: expression ',' argument_expression_list             ↳ 110: FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN
                                                                    ↳ 113: ε •



State 135

    1 constant_expression: • NUMERICO
    2                    | • CADENA
   85 labeled_statement_case: CASO • labeled_statement_case_case statement_list
   86 labeled_statement_case_case: • constant_expression ':'
   87                            | • constant_expression ':' CASO labeled_statement_case_case

    NUMERICO  shift, and go to state 36
    CADENA    shift, and go to state 37

    constant_expression          go to state 202
    labeled_statement_case_case  go to state 203


State 136

   88 labeled_statement_default: DEFECTO • ':' statement_list

    ':'  shift, and go to state 204


State 137

   92 selection_statement: ELEGIR expression labeled_statements • FIN

    FIN  shift, and go to state 205


State 138

   82 labeled_statements: • labeled_statement_case labeled_statements
   82                   | labeled_statement_case • labeled_statements
   83                   | • labeled_statement_case
   83                   | labeled_statement_case •  [FIN]
   84                   | • labeled_statement_default
   85 labeled_statement_case: • CASO labeled_statement_case_case statement_list
   88 labeled_statement_default: • DEFECTO ':' statement_list

    CASO     shift, and go to state 135
    DEFECTO  shift, and go to state 136

    $default  reduce using rule 83 (labeled_statements)

    labeled_statements         go to state 206
    labeled_statement_case     go to state 138
    labeled_statement_default  go to state 139


State 139

   84 labeled_statements: labeled_statement_default •

    $default  reduce using rule 84 (labeled_statements)


State 140

  101 iteration_statement: PARA IDENTIFICADOR EN • RANGO '(' expression ')' statement_list FIN
  102                    | PARA IDENTIFICADOR EN • RANGO '(' expression ',' expression ')' statement_list FIN
  103                    | PARA IDENTIFICADOR EN • RANGO '(' expression ',' expression ',' expression ')' statement_list FIN

    RANGO  shift, and go to state 207


State 141

   50 statement_list: • statement statement_list
   51               | • statement
   52               | • error statement_list
   53 statement: • declaration
   54          | • global_declaration
   55          | • selection_statement
   56          | • iteration_statement
   57          | • jump_statement
   58          | • function_definition
   59          | • function_call
   60          | • incdec_statement
   61          | • jump_loop
   62          | • goto_etiqueta
   63          | • clase_declaracion
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   71 global_declaration: • GLOBAL declaration
   72                   | • GLOBAL function_definition
   73 declaration: • variable_access '=' expression
   74            | • variable_access CONCATENAR_IGUAL expression
   75            | • variable_access MAS_IGUAL expression
   76            | • variable_access MENOS_IGUAL expression
   77            | • variable_access POR_IGUAL expression
   78            | • variable_access ENTRE_IGUAL expression
   79            | • variable_access MODULO_IGUAL expression
   80            | • parameter_list '=' argument_expression_list
   81            | • variable_access '[' expression ']' '=' expression
   89 selection_statement: • SI expression statement_list FIN
   90                    | • SI expression statement_list SINO statement_list FIN
   91                    | • SI expression statement_list osi_statements FIN
   92                    | • ELEGIR expression labeled_statements FIN
   98 iteration_statement: • MIENTRAS expression statement_list FIN
   99                    | • REPETIR statement_list HASTA expression
  100                    | • DESDE '(' declaration ';' expression ';' statement ')' statement_list FIN
  101                    | • PARA IDENTIFICADOR EN RANGO '(' expression ')' statement_list FIN
  102                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ')' statement_list FIN
  103                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ',' expression ')' statement_list FIN
  104 goto_etiqueta: • IDENTIFICADOR ':'
  105 jump_statement: • RETORNO expression
  106               | • RETORNO argument_expression_list
  107               | • IR IDENTIFICADOR
  108 jump_loop: • ROMPER
  109          | • CONTINUAR
  110 function_definition: • FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  116 parameter_list: ε •  ['=', ',']
  117               | • IDENTIFICADOR
  118               | • VAR_ARGS
  119               | • parameter_list ',' IDENTIFICADOR
  120               | • parameter_list ',' VAR_ARGS
  134 clase_propiedades: error • statement_list
  138 clase_funciones: error • statement_list
  145 clase_sentencias: error • statement_list
  146 clase_declaracion: • CLASE IDENTIFICADOR clase_sentencias FIN

    error          shift, and go to state 1
    IDENTIFICADOR  shift, and go to state 2
    VAR_ARGS       shift, and go to state 3
    SI             shift, and go to state 4
    MIENTRAS       shift, and go to state 5
    REPETIR        shift, and go to state 6
    ROMPER         shift, and go to state 7
    CONTINUAR      shift, and go to state 8
    FUNCION        shift, and go to state 9
    DESDE          shift, and go to state 10
    RETORNO        shift, and go to state 11
    ELEGIR         shift, and go to state 12
    PARA           shift, and go to state 13
    IR             shift, and go to state 14
    GLOBAL         shift, and go to state 15
    CLASE          shift, and go to state 16

    '='  reduce using rule 116 (parameter_list)
    ','  reduce using rule 116 (parameter_list)

    statement_list       go to state 208
    statement            go to state 19
    incdec_statement     go to state 20
    variable_access      go to state 21
    field_designator     go to state 22
    global_declaration   go to state 23
    declaration          go to state 24
    selection_statement  go to state 25
    iteration_statement  go to state 26
    goto_etiqueta        go to state 27
    jump_statement       go to state 28
    jump_loop            go to state 29
    function_definition  go to state 30
    function_call        go to state 31
    parameter_list       go to state 32
    clase_declaracion    go to state 33


State 142

  131 clase_propiedad: IDENTIFICADOR • '=' expression

    '='  shift, and go to state 209


State 143

  135 clase_funcion: FUNCION • IDENTIFICADOR '(' parameter_list ')' statement_list FIN

    IDENTIFICADOR  shift, and go to state 210


State 144

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  113 argument_expression_list: ε •  [error, IDENTIFICADOR, FIN, FUNCION, RETORNO]
  114                         | • expression
  115                         | • expression ',' argument_expression_list
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'
  141 clase_sentencia: RETORNO • expression
  142                | RETORNO • argument_expression_list

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    IDENTIFICADOR  [reduce using rule 113 (argument_expression_list)]
    FUNCION        [reduce using rule 113 (argument_expression_list)]
    $default       reduce using rule 113 (argument_expression_list)

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 211
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    argument_expression_list   go to state 212
    list_new                   go to state 67
    dict_new                   go to state 68

    shift/reduce conflict on token IDENTIFICADOR:
      113 argument_expression_list: ε •
        3 primary_expression: • IDENTIFICADOR
      First example: CLASE IDENTIFICADOR RETORNO • IDENTIFICADOR clase_sentencias FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                     $end
             ↳ 49: statement_list
                   ↳ 50: clase_declaracion                                                                                statement_list
                         ↳ 146: CLASE IDENTIFICADOR clase_sentencias                                                  FIN
                                                    ↳ 143: clase_sentencia                           clase_sentencias
                                                           ↳ 141: RETORNO expression
                                                                          ↳ 30: primary_expression
                                                                                ↳ 3: • IDENTIFICADOR
      Second example: CLASE IDENTIFICADOR RETORNO • IDENTIFICADOR '=' expression clase_propiedades clase_sentencias FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                                                                                    $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                                                       statement_list
                         ↳ 63: clase_declaracion
                               ↳ 146: CLASE IDENTIFICADOR clase_sentencias                                                                                                                           FIN
                                                          ↳ 143: clase_sentencia                         clase_sentencias
                                                                 ↳ 142: RETORNO argument_expression_list ↳ 143: clase_sentencia                                                     clase_sentencias
                                                                                ↳ 113: ε •                      ↳ 139: clase_propiedades
                                                                                                                       ↳ 132: clase_propiedad                     clase_propiedades
                                                                                                                              ↳ 131: IDENTIFICADOR '=' expression

    shift/reduce conflict on token IDENTIFICADOR:
      113 argument_expression_list: ε •
       66 variable_access: • IDENTIFICADOR
      First example: CLASE IDENTIFICADOR RETORNO • IDENTIFICADOR clase_sentencias FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                      $end
             ↳ 49: statement_list
                   ↳ 50: clase_declaracion                                                                                 statement_list
                         ↳ 146: CLASE IDENTIFICADOR clase_sentencias                                                   FIN
                                                    ↳ 143: clase_sentencia                            clase_sentencias
                                                           ↳ 141: RETORNO expression
                                                                          ↳ 43: variable_access
                                                                                ↳ 66: • IDENTIFICADOR
      Second example: CLASE IDENTIFICADOR RETORNO • IDENTIFICADOR '=' expression clase_propiedades clase_sentencias FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                                                                                    $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                                                       statement_list
                         ↳ 63: clase_declaracion
                               ↳ 146: CLASE IDENTIFICADOR clase_sentencias                                                                                                                           FIN
                                                          ↳ 143: clase_sentencia                         clase_sentencias
                                                                 ↳ 142: RETORNO argument_expression_list ↳ 143: clase_sentencia                                                     clase_sentencias
                                                                                ↳ 113: ε •                      ↳ 139: clase_propiedades
                                                                                                                       ↳ 132: clase_propiedad                     clase_propiedades
                                                                                                                              ↳ 131: IDENTIFICADOR '=' expression

    shift/reduce conflict on token FUNCION:
      113 argument_expression_list: ε •
      111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
      First example: CLASE IDENTIFICADOR RETORNO • FUNCION '(' parameter_list ')' statement_list FIN clase_sentencias FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                           $end
             ↳ 49: statement_list
                   ↳ 50: clase_declaracion                                                                                                                      statement_list
                         ↳ 146: CLASE IDENTIFICADOR clase_sentencias                                                                                        FIN
                                                    ↳ 143: clase_sentencia                                                                 clase_sentencias
                                                           ↳ 141: RETORNO expression
                                                                          ↳ 44: function_anonymous
                                                                                ↳ 111: • FUNCION '(' parameter_list ')' statement_list FIN
      Second example: CLASE IDENTIFICADOR RETORNO • FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN clase_funciones clase_sentencias FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                                                                                                                     $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                                                                                        statement_list
                         ↳ 63: clase_declaracion
                               ↳ 146: CLASE IDENTIFICADOR clase_sentencias                                                                                                                                                            FIN
                                                          ↳ 143: clase_sentencia                         clase_sentencias
                                                                 ↳ 142: RETORNO argument_expression_list ↳ 143: clase_sentencia                                                                                      clase_sentencias
                                                                                ↳ 113: ε •                      ↳ 140: clase_funciones
                                                                                                                       ↳ 136: clase_funcion                                                          clase_funciones
                                                                                                                              ↳ 135: FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN



State 145

  131 clase_propiedad: • IDENTIFICADOR '=' expression
  132 clase_propiedades: • clase_propiedad clase_propiedades
  132                  | clase_propiedad • clase_propiedades
  133                  | • clase_propiedad
  133                  | clase_propiedad •  [error, IDENTIFICADOR, FIN, FUNCION, RETORNO]
  134                  | • error statement_list

    error          shift, and go to state 213
    IDENTIFICADOR  shift, and go to state 142

    error          [reduce using rule 133 (clase_propiedades)]
    IDENTIFICADOR  [reduce using rule 133 (clase_propiedades)]
    FIN            reduce using rule 133 (clase_propiedades)
    FUNCION        reduce using rule 133 (clase_propiedades)
    RETORNO        reduce using rule 133 (clase_propiedades)

    clase_propiedad    go to state 145
    clase_propiedades  go to state 214

    shift/reduce conflict on token IDENTIFICADOR:
      133 clase_propiedades: clase_propiedad •
      131 clase_propiedad: • IDENTIFICADOR '=' expression
      First example: CLASE IDENTIFICADOR clase_propiedad • IDENTIFICADOR '=' expression clase_propiedades clase_sentencias FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                        $end
             ↳ 49: statement_list
                   ↳ 50: clase_declaracion                                                                                                                                   statement_list
                         ↳ 146: CLASE IDENTIFICADOR clase_sentencias                                                                                                     FIN
                                                    ↳ 143: clase_sentencia                                                                              clase_sentencias
                                                           ↳ 139: clase_propiedades
                                                                  ↳ 132: clase_propiedad clase_propiedades
                                                                                         ↳ 132: clase_propiedad                       clase_propiedades
                                                                                                ↳ 131: • IDENTIFICADOR '=' expression
      Second example: CLASE IDENTIFICADOR clase_propiedad • IDENTIFICADOR '=' expression clase_propiedades clase_sentencias FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                                                                            $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                                               statement_list
                         ↳ 63: clase_declaracion
                               ↳ 146: CLASE IDENTIFICADOR clase_sentencias                                                                                                                   FIN
                                                          ↳ 143: clase_sentencia                 clase_sentencias
                                                                 ↳ 139: clase_propiedades        ↳ 143: clase_sentencia                                                     clase_sentencias
                                                                        ↳ 133: clase_propiedad •        ↳ 139: clase_propiedades
                                                                                                               ↳ 132: clase_propiedad                     clase_propiedades
                                                                                                                      ↳ 131: IDENTIFICADOR '=' expression

    shift/reduce conflict on token error:
      133 clase_propiedades: clase_propiedad •
      134 clase_propiedades: • error statement_list
      First example: CLASE IDENTIFICADOR clase_propiedad • error statement_list clase_sentencias FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                       $end
             ↳ 49: statement_list
                   ↳ 50: clase_declaracion                                                                                                  statement_list
                         ↳ 146: CLASE IDENTIFICADOR clase_sentencias                                                                    FIN
                                                    ↳ 143: clase_sentencia                                             clase_sentencias
                                                           ↳ 139: clase_propiedades
                                                                  ↳ 132: clase_propiedad clase_propiedades
                                                                                         ↳ 134: • error statement_list
      Second example: CLASE IDENTIFICADOR clase_propiedad • error statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                            $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                               statement_list
                         ↳ 63: clase_declaracion
                               ↳ 146: CLASE IDENTIFICADOR clase_sentencias                                                   FIN
                                                          ↳ 143: clase_sentencia                 clase_sentencias
                                                                 ↳ 139: clase_propiedades        ↳ 145: error statement_list
                                                                        ↳ 133: clase_propiedad •



State 146

  139 clase_sentencia: clase_propiedades •

    $default  reduce using rule 139 (clase_sentencia)


State 147

  135 clase_funcion: • FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN
  136 clase_funciones: • clase_funcion clase_funciones
  136                | clase_funcion • clase_funciones
  137                | • clase_funcion
  137                | clase_funcion •  [error, IDENTIFICADOR, FIN, FUNCION, RETORNO]
  138                | • error statement_list

    error    shift, and go to state 215
    FUNCION  shift, and go to state 143

    error          [reduce using rule 137 (clase_funciones)]
    IDENTIFICADOR  reduce using rule 137 (clase_funciones)
    FIN            reduce using rule 137 (clase_funciones)
    FUNCION        [reduce using rule 137 (clase_funciones)]
    RETORNO        reduce using rule 137 (clase_funciones)

    clase_funcion    go to state 147
    clase_funciones  go to state 216

    shift/reduce conflict on token FUNCION:
      137 clase_funciones: clase_funcion •
      135 clase_funcion: • FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN
      First example: CLASE IDENTIFICADOR clase_funcion • FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN clase_funciones clase_sentencias FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                                                       $end
             ↳ 49: statement_list
                   ↳ 50: clase_declaracion                                                                                                                                                                  statement_list
                         ↳ 146: CLASE IDENTIFICADOR clase_sentencias                                                                                                                                    FIN
                                                    ↳ 143: clase_sentencia                                                                                                             clase_sentencias
                                                           ↳ 140: clase_funciones
                                                                  ↳ 136: clase_funcion clase_funciones
                                                                                       ↳ 136: clase_funcion                                                            clase_funciones
                                                                                              ↳ 135: • FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN
      Second example: CLASE IDENTIFICADOR clase_funcion • FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN clase_funciones clase_sentencias FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                                                                                                           $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                                                                              statement_list
                         ↳ 63: clase_declaracion
                               ↳ 146: CLASE IDENTIFICADOR clase_sentencias                                                                                                                                                  FIN
                                                          ↳ 143: clase_sentencia               clase_sentencias
                                                                 ↳ 140: clase_funciones        ↳ 143: clase_sentencia                                                                                      clase_sentencias
                                                                        ↳ 137: clase_funcion •        ↳ 140: clase_funciones
                                                                                                             ↳ 136: clase_funcion                                                          clase_funciones
                                                                                                                    ↳ 135: FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN

    shift/reduce conflict on token error:
      137 clase_funciones: clase_funcion •
      138 clase_funciones: • error statement_list
      First example: CLASE IDENTIFICADOR clase_funcion • error statement_list clase_sentencias FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                     $end
             ↳ 49: statement_list
                   ↳ 50: clase_declaracion                                                                                                statement_list
                         ↳ 146: CLASE IDENTIFICADOR clase_sentencias                                                                  FIN
                                                    ↳ 143: clase_sentencia                                           clase_sentencias
                                                           ↳ 140: clase_funciones
                                                                  ↳ 136: clase_funcion clase_funciones
                                                                                       ↳ 138: • error statement_list
      Second example: CLASE IDENTIFICADOR clase_funcion • error statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                          $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                             statement_list
                         ↳ 63: clase_declaracion
                               ↳ 146: CLASE IDENTIFICADOR clase_sentencias                                                 FIN
                                                          ↳ 143: clase_sentencia               clase_sentencias
                                                                 ↳ 140: clase_funciones        ↳ 145: error statement_list
                                                                        ↳ 137: clase_funcion •



State 148

  140 clase_sentencia: clase_funciones •

    $default  reduce using rule 140 (clase_sentencia)


State 149

  131 clase_propiedad: • IDENTIFICADOR '=' expression
  132 clase_propiedades: • clase_propiedad clase_propiedades
  133                  | • clase_propiedad
  134                  | • error statement_list
  135 clase_funcion: • FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN
  136 clase_funciones: • clase_funcion clase_funciones
  137                | • clase_funcion
  138                | • error statement_list
  139 clase_sentencia: • clase_propiedades
  140                | • clase_funciones
  141                | • RETORNO expression
  142                | • RETORNO argument_expression_list
  143 clase_sentencias: • clase_sentencia clase_sentencias
  143                 | clase_sentencia • clase_sentencias
  144                 | • clase_sentencia
  144                 | clase_sentencia •  [FIN]
  145                 | • error statement_list

    error          shift, and go to state 141
    IDENTIFICADOR  shift, and go to state 142
    FUNCION        shift, and go to state 143
    RETORNO        shift, and go to state 144

    FIN  reduce using rule 144 (clase_sentencias)

    clase_propiedad    go to state 145
    clase_propiedades  go to state 146
    clase_funcion      go to state 147
    clase_funciones    go to state 148
    clase_sentencia    go to state 149
    clase_sentencias   go to state 217


State 150

  146 clase_declaracion: CLASE IDENTIFICADOR clase_sentencias • FIN

    FIN  shift, and go to state 218


State 151

   69 field_designator: variable_access ATRIBUTO IDENTIFICADOR •

    $default  reduce using rule 69 (field_designator)


State 152

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression
   74 declaration: variable_access CONCATENAR_IGUAL expression •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, PARA, IR, GLOBAL, CLASE, '=', ')', ';', ',']

    EXPONENTE     shift, and go to state 110
    MAYOR_QUE     shift, and go to state 111
    MENOR_QUE     shift, and go to state 112
    MAYOR_IGUAL   shift, and go to state 113
    MENOR_IGUAL   shift, and go to state 114
    IGUAL_LOGICO  shift, and go to state 115
    DIFERENTE     shift, and go to state 116
    Y_LOGICO      shift, and go to state 117
    O_LOGICO      shift, and go to state 118
    CONCATENAR    shift, and go to state 119
    REGEX         shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '%'           shift, and go to state 125
    '^'           shift, and go to state 126
    '?'           shift, and go to state 127

    $default  reduce using rule 74 (declaration)


State 153

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression
   75 declaration: variable_access MAS_IGUAL expression •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, PARA, IR, GLOBAL, CLASE, '=', ')', ';', ',']

    EXPONENTE     shift, and go to state 110
    MAYOR_QUE     shift, and go to state 111
    MENOR_QUE     shift, and go to state 112
    MAYOR_IGUAL   shift, and go to state 113
    MENOR_IGUAL   shift, and go to state 114
    IGUAL_LOGICO  shift, and go to state 115
    DIFERENTE     shift, and go to state 116
    Y_LOGICO      shift, and go to state 117
    O_LOGICO      shift, and go to state 118
    CONCATENAR    shift, and go to state 119
    REGEX         shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '%'           shift, and go to state 125
    '^'           shift, and go to state 126
    '?'           shift, and go to state 127

    $default  reduce using rule 75 (declaration)


State 154

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression
   76 declaration: variable_access MENOS_IGUAL expression •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, PARA, IR, GLOBAL, CLASE, '=', ')', ';', ',']

    EXPONENTE     shift, and go to state 110
    MAYOR_QUE     shift, and go to state 111
    MENOR_QUE     shift, and go to state 112
    MAYOR_IGUAL   shift, and go to state 113
    MENOR_IGUAL   shift, and go to state 114
    IGUAL_LOGICO  shift, and go to state 115
    DIFERENTE     shift, and go to state 116
    Y_LOGICO      shift, and go to state 117
    O_LOGICO      shift, and go to state 118
    CONCATENAR    shift, and go to state 119
    REGEX         shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '%'           shift, and go to state 125
    '^'           shift, and go to state 126
    '?'           shift, and go to state 127

    $default  reduce using rule 76 (declaration)


State 155

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression
   77 declaration: variable_access POR_IGUAL expression •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, PARA, IR, GLOBAL, CLASE, '=', ')', ';', ',']

    EXPONENTE     shift, and go to state 110
    MAYOR_QUE     shift, and go to state 111
    MENOR_QUE     shift, and go to state 112
    MAYOR_IGUAL   shift, and go to state 113
    MENOR_IGUAL   shift, and go to state 114
    IGUAL_LOGICO  shift, and go to state 115
    DIFERENTE     shift, and go to state 116
    Y_LOGICO      shift, and go to state 117
    O_LOGICO      shift, and go to state 118
    CONCATENAR    shift, and go to state 119
    REGEX         shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '%'           shift, and go to state 125
    '^'           shift, and go to state 126
    '?'           shift, and go to state 127

    $default  reduce using rule 77 (declaration)


State 156

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression
   78 declaration: variable_access ENTRE_IGUAL expression •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, PARA, IR, GLOBAL, CLASE, '=', ')', ';', ',']

    EXPONENTE     shift, and go to state 110
    MAYOR_QUE     shift, and go to state 111
    MENOR_QUE     shift, and go to state 112
    MAYOR_IGUAL   shift, and go to state 113
    MENOR_IGUAL   shift, and go to state 114
    IGUAL_LOGICO  shift, and go to state 115
    DIFERENTE     shift, and go to state 116
    Y_LOGICO      shift, and go to state 117
    O_LOGICO      shift, and go to state 118
    CONCATENAR    shift, and go to state 119
    REGEX         shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '%'           shift, and go to state 125
    '^'           shift, and go to state 126
    '?'           shift, and go to state 127

    $default  reduce using rule 78 (declaration)


State 157

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression
   79 declaration: variable_access MODULO_IGUAL expression •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, PARA, IR, GLOBAL, CLASE, '=', ')', ';', ',']

    EXPONENTE     shift, and go to state 110
    MAYOR_QUE     shift, and go to state 111
    MENOR_QUE     shift, and go to state 112
    MAYOR_IGUAL   shift, and go to state 113
    MENOR_IGUAL   shift, and go to state 114
    IGUAL_LOGICO  shift, and go to state 115
    DIFERENTE     shift, and go to state 116
    Y_LOGICO      shift, and go to state 117
    O_LOGICO      shift, and go to state 118
    CONCATENAR    shift, and go to state 119
    REGEX         shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '%'           shift, and go to state 125
    '^'           shift, and go to state 126
    '?'           shift, and go to state 127

    $default  reduce using rule 79 (declaration)


State 158

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression
   73 declaration: variable_access '=' expression •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, PARA, IR, GLOBAL, CLASE, '=', ')', ';', ',']

    EXPONENTE     shift, and go to state 110
    MAYOR_QUE     shift, and go to state 111
    MENOR_QUE     shift, and go to state 112
    MAYOR_IGUAL   shift, and go to state 113
    MENOR_IGUAL   shift, and go to state 114
    IGUAL_LOGICO  shift, and go to state 115
    DIFERENTE     shift, and go to state 116
    Y_LOGICO      shift, and go to state 117
    O_LOGICO      shift, and go to state 118
    CONCATENAR    shift, and go to state 119
    REGEX         shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '%'           shift, and go to state 125
    '^'           shift, and go to state 126
    '?'           shift, and go to state 127

    $default  reduce using rule 73 (declaration)


State 159

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression
  114 argument_expression_list: expression •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, PARA, IR, GLOBAL, CLASE, '=', ')', ';', ',']
  115                         | expression • ',' argument_expression_list

    EXPONENTE     shift, and go to state 110
    MAYOR_QUE     shift, and go to state 111
    MENOR_QUE     shift, and go to state 112
    MAYOR_IGUAL   shift, and go to state 113
    MENOR_IGUAL   shift, and go to state 114
    IGUAL_LOGICO  shift, and go to state 115
    DIFERENTE     shift, and go to state 116
    Y_LOGICO      shift, and go to state 117
    O_LOGICO      shift, and go to state 118
    CONCATENAR    shift, and go to state 119
    REGEX         shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '%'           shift, and go to state 125
    '^'           shift, and go to state 126
    '?'           shift, and go to state 127
    ','           shift, and go to state 134

    ','       [reduce using rule 114 (argument_expression_list)]
    $default  reduce using rule 114 (argument_expression_list)

    shift/reduce conflict on token ',':
      114 argument_expression_list: expression •
      115 argument_expression_list: expression • ',' argument_expression_list
      First example: parameter_list '=' expression • ',' argument_expression_list statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                              $end
             ↳ 49: statement_list
                   ↳ 50: declaration                                                               statement_list
                         ↳ 80: parameter_list '=' argument_expression_list
                                                  ↳ 115: expression • ',' argument_expression_list
      Second example: parameter_list '=' expression • parameter_list ',' ',' IDENTIFICADOR '=' argument_expression_list statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                                                       $end
             ↳ 49: statement_list
                   ↳ 50: statement                                               statement_list
                         ↳ 53: declaration                                       ↳ 50: statement                                                                            statement_list
                               ↳ 80: parameter_list '=' argument_expression_list       ↳ 53: declaration
                                                        ↳ 114: expression •                  ↳ 80: parameter_list                              '=' argument_expression_list
                                                                                                   ↳ 119: parameter_list ',' ',' IDENTIFICADOR



State 160

  112 function_call: variable_access '(' argument_expression_list • ')'

    ')'  shift, and go to state 219


State 161

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression
   70 field_designator: variable_access '[' expression • ']'
   81 declaration: variable_access '[' expression • ']' '=' expression

    EXPONENTE     shift, and go to state 110
    MAYOR_QUE     shift, and go to state 111
    MENOR_QUE     shift, and go to state 112
    MAYOR_IGUAL   shift, and go to state 113
    MENOR_IGUAL   shift, and go to state 114
    IGUAL_LOGICO  shift, and go to state 115
    DIFERENTE     shift, and go to state 116
    Y_LOGICO      shift, and go to state 117
    O_LOGICO      shift, and go to state 118
    CONCATENAR    shift, and go to state 119
    REGEX         shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '%'           shift, and go to state 125
    '^'           shift, and go to state 126
    '?'           shift, and go to state 127
    ']'           shift, and go to state 220


State 162

   80 declaration: parameter_list '=' argument_expression_list •

    $default  reduce using rule 80 (declaration)


State 163

  119 parameter_list: parameter_list ',' IDENTIFICADOR •

    $default  reduce using rule 119 (parameter_list)


State 164

  120 parameter_list: parameter_list ',' VAR_ARGS •

    $default  reduce using rule 120 (parameter_list)


State 165

  117 parameter_list: IDENTIFICADOR •

    $default  reduce using rule 117 (parameter_list)


State 166

  111 function_anonymous: FUNCION '(' parameter_list • ')' statement_list FIN
  119 parameter_list: parameter_list • ',' IDENTIFICADOR
  120               | parameter_list • ',' VAR_ARGS

    ')'  shift, and go to state 221
    ','  shift, and go to state 99


State 167

   28 expression: '(' expression ')' •

    $default  reduce using rule 28 (expression)


State 168

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  122 list_items: ε •  [']']
  123           | • expression
  124           | • expression ',' list_items
  124           | expression ',' • list_items
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    $default  reduce using rule 122 (list_items)

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 105
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    list_items                 go to state 222
    dict_new                   go to state 68


State 169

  121 list_new: '[' list_items ']' •

    $default  reduce using rule 121 (list_new)


State 170

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'
  130 dict_item: expression ':' • expression

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 223
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 171

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'
  128 dict_items: dict_items ',' • dict_item
  129 dict_item: ε •  [',', '}']
  130          | • expression ':' expression

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    $default  reduce using rule 129 (dict_item)

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 107
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68
    dict_item                  go to state 224


State 172

  125 dict_new: '{' dict_items '}' •

    $default  reduce using rule 125 (dict_new)


State 173

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   10                          | expression EXPONENTE expression •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, EXPONENTE, PARA, IR, MAYOR_QUE, MENOR_QUE, MAYOR_IGUAL, MENOR_IGUAL, IGUAL_LOGICO, DIFERENTE, Y_LOGICO, O_LOGICO, CONCATENAR, REGEX, GLOBAL, CLASE, '=', '+', '-', '*', '/', '%', '^', '?', ':', ')', ']', ';', ',', '}']
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression

    '?'  shift, and go to state 127

    '?'       [reduce using rule 10 (multiplicative_expression)]
    $default  reduce using rule 10 (multiplicative_expression)

    Conflict between rule 10 and token EXPONENTE resolved as reduce (%left EXPONENTE).
    Conflict between rule 10 and token MAYOR_QUE resolved as reduce (MAYOR_QUE < EXPONENTE).
    Conflict between rule 10 and token MENOR_QUE resolved as reduce (MENOR_QUE < EXPONENTE).
    Conflict between rule 10 and token MAYOR_IGUAL resolved as reduce (MAYOR_IGUAL < EXPONENTE).
    Conflict between rule 10 and token MENOR_IGUAL resolved as reduce (MENOR_IGUAL < EXPONENTE).
    Conflict between rule 10 and token IGUAL_LOGICO resolved as reduce (IGUAL_LOGICO < EXPONENTE).
    Conflict between rule 10 and token DIFERENTE resolved as reduce (DIFERENTE < EXPONENTE).
    Conflict between rule 10 and token Y_LOGICO resolved as reduce (Y_LOGICO < EXPONENTE).
    Conflict between rule 10 and token O_LOGICO resolved as reduce (O_LOGICO < EXPONENTE).
    Conflict between rule 10 and token CONCATENAR resolved as reduce (CONCATENAR < EXPONENTE).
    Conflict between rule 10 and token REGEX resolved as reduce (REGEX < EXPONENTE).
    Conflict between rule 10 and token '+' resolved as reduce ('+' < EXPONENTE).
    Conflict between rule 10 and token '-' resolved as reduce ('-' < EXPONENTE).
    Conflict between rule 10 and token '*' resolved as reduce ('*' < EXPONENTE).
    Conflict between rule 10 and token '/' resolved as reduce ('/' < EXPONENTE).
    Conflict between rule 10 and token '%' resolved as reduce ('%' < EXPONENTE).
    Conflict between rule 10 and token '^' resolved as reduce ('^' < EXPONENTE).

    shift/reduce conflict on token '?':
       10 multiplicative_expression: expression EXPONENTE expression •
       26 ternary_expression: expression • '?' expression ':' expression
      First example: SI expression EXPONENTE expression • '?' expression ':' expression '?' expression ':' expression statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                                  $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                                     statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                                                  statement_list FIN
                                        ↳ 45: ternary_expression
                                              ↳ 26: multiplicative_expression                                                         '?' expression ':' expression
                                                    ↳ 10: expression EXPONENTE expression
                                                                               ↳ 45: ternary_expression
                                                                                     ↳ 26: expression • '?' expression ':' expression
      Second example: SI expression EXPONENTE expression • '?' expression ':' expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                              $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                 statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                              statement_list FIN
                                        ↳ 45: ternary_expression
                                              ↳ 26: expression                                    '?' expression ':' expression
                                                    ↳ 32: multiplicative_expression
                                                          ↳ 10: expression EXPONENTE expression •



State 174

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   16                      | expression MAYOR_QUE expression •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, PARA, IR, MAYOR_QUE, MENOR_QUE, MAYOR_IGUAL, MENOR_IGUAL, IGUAL_LOGICO, DIFERENTE, Y_LOGICO, O_LOGICO, CONCATENAR, REGEX, GLOBAL, CLASE, '=', '?', ':', ')', ']', ';', ',', '}']
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression

    EXPONENTE  shift, and go to state 110
    '+'        shift, and go to state 121
    '-'        shift, and go to state 122
    '*'        shift, and go to state 123
    '/'        shift, and go to state 124
    '%'        shift, and go to state 125
    '^'        shift, and go to state 126
    '?'        shift, and go to state 127

    '?'       [reduce using rule 16 (relational_expression)]
    $default  reduce using rule 16 (relational_expression)

    Conflict between rule 16 and token EXPONENTE resolved as shift (MAYOR_QUE < EXPONENTE).
    Conflict between rule 16 and token MAYOR_QUE resolved as reduce (%left MAYOR_QUE).
    Conflict between rule 16 and token MENOR_QUE resolved as reduce (%left MENOR_QUE).
    Conflict between rule 16 and token MAYOR_IGUAL resolved as reduce (%left MAYOR_IGUAL).
    Conflict between rule 16 and token MENOR_IGUAL resolved as reduce (%left MENOR_IGUAL).
    Conflict between rule 16 and token IGUAL_LOGICO resolved as reduce (%left IGUAL_LOGICO).
    Conflict between rule 16 and token DIFERENTE resolved as reduce (%left DIFERENTE).
    Conflict between rule 16 and token Y_LOGICO resolved as reduce (Y_LOGICO < MAYOR_QUE).
    Conflict between rule 16 and token O_LOGICO resolved as reduce (O_LOGICO < MAYOR_QUE).
    Conflict between rule 16 and token CONCATENAR resolved as reduce (CONCATENAR < MAYOR_QUE).
    Conflict between rule 16 and token REGEX resolved as reduce (%left REGEX).
    Conflict between rule 16 and token '+' resolved as shift (MAYOR_QUE < '+').
    Conflict between rule 16 and token '-' resolved as shift (MAYOR_QUE < '-').
    Conflict between rule 16 and token '*' resolved as shift (MAYOR_QUE < '*').
    Conflict between rule 16 and token '/' resolved as shift (MAYOR_QUE < '/').
    Conflict between rule 16 and token '%' resolved as shift (MAYOR_QUE < '%').
    Conflict between rule 16 and token '^' resolved as shift (MAYOR_QUE < '^').

    shift/reduce conflict on token '?':
       16 relational_expression: expression MAYOR_QUE expression •
       26 ternary_expression: expression • '?' expression ':' expression
      First example: SI expression MAYOR_QUE expression • '?' expression ':' expression '?' expression ':' expression statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                                  $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                                     statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                                                  statement_list FIN
                                        ↳ 45: ternary_expression
                                              ↳ 26: relational_expression                                                             '?' expression ':' expression
                                                    ↳ 16: expression MAYOR_QUE expression
                                                                               ↳ 45: ternary_expression
                                                                                     ↳ 26: expression • '?' expression ':' expression
      Second example: SI expression MAYOR_QUE expression • '?' expression ':' expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                              $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                 statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                              statement_list FIN
                                        ↳ 45: ternary_expression
                                              ↳ 26: expression                                    '?' expression ':' expression
                                                    ↳ 34: relational_expression
                                                          ↳ 16: expression MAYOR_QUE expression •



State 175

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   17                      | expression MENOR_QUE expression •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, PARA, IR, MAYOR_QUE, MENOR_QUE, MAYOR_IGUAL, MENOR_IGUAL, IGUAL_LOGICO, DIFERENTE, Y_LOGICO, O_LOGICO, CONCATENAR, REGEX, GLOBAL, CLASE, '=', '?', ':', ')', ']', ';', ',', '}']
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression

    EXPONENTE  shift, and go to state 110
    '+'        shift, and go to state 121
    '-'        shift, and go to state 122
    '*'        shift, and go to state 123
    '/'        shift, and go to state 124
    '%'        shift, and go to state 125
    '^'        shift, and go to state 126
    '?'        shift, and go to state 127

    '?'       [reduce using rule 17 (relational_expression)]
    $default  reduce using rule 17 (relational_expression)

    Conflict between rule 17 and token EXPONENTE resolved as shift (MENOR_QUE < EXPONENTE).
    Conflict between rule 17 and token MAYOR_QUE resolved as reduce (%left MAYOR_QUE).
    Conflict between rule 17 and token MENOR_QUE resolved as reduce (%left MENOR_QUE).
    Conflict between rule 17 and token MAYOR_IGUAL resolved as reduce (%left MAYOR_IGUAL).
    Conflict between rule 17 and token MENOR_IGUAL resolved as reduce (%left MENOR_IGUAL).
    Conflict between rule 17 and token IGUAL_LOGICO resolved as reduce (%left IGUAL_LOGICO).
    Conflict between rule 17 and token DIFERENTE resolved as reduce (%left DIFERENTE).
    Conflict between rule 17 and token Y_LOGICO resolved as reduce (Y_LOGICO < MENOR_QUE).
    Conflict between rule 17 and token O_LOGICO resolved as reduce (O_LOGICO < MENOR_QUE).
    Conflict between rule 17 and token CONCATENAR resolved as reduce (CONCATENAR < MENOR_QUE).
    Conflict between rule 17 and token REGEX resolved as reduce (%left REGEX).
    Conflict between rule 17 and token '+' resolved as shift (MENOR_QUE < '+').
    Conflict between rule 17 and token '-' resolved as shift (MENOR_QUE < '-').
    Conflict between rule 17 and token '*' resolved as shift (MENOR_QUE < '*').
    Conflict between rule 17 and token '/' resolved as shift (MENOR_QUE < '/').
    Conflict between rule 17 and token '%' resolved as shift (MENOR_QUE < '%').
    Conflict between rule 17 and token '^' resolved as shift (MENOR_QUE < '^').

    shift/reduce conflict on token '?':
       17 relational_expression: expression MENOR_QUE expression •
       26 ternary_expression: expression • '?' expression ':' expression
      First example: SI expression MENOR_QUE expression • '?' expression ':' expression '?' expression ':' expression statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                                  $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                                     statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                                                  statement_list FIN
                                        ↳ 45: ternary_expression
                                              ↳ 26: relational_expression                                                             '?' expression ':' expression
                                                    ↳ 17: expression MENOR_QUE expression
                                                                               ↳ 45: ternary_expression
                                                                                     ↳ 26: expression • '?' expression ':' expression
      Second example: SI expression MENOR_QUE expression • '?' expression ':' expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                              $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                 statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                              statement_list FIN
                                        ↳ 45: ternary_expression
                                              ↳ 26: expression                                    '?' expression ':' expression
                                                    ↳ 34: relational_expression
                                                          ↳ 17: expression MENOR_QUE expression •



State 176

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   18                      | expression MAYOR_IGUAL expression •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, PARA, IR, MAYOR_QUE, MENOR_QUE, MAYOR_IGUAL, MENOR_IGUAL, IGUAL_LOGICO, DIFERENTE, Y_LOGICO, O_LOGICO, CONCATENAR, REGEX, GLOBAL, CLASE, '=', '?', ':', ')', ']', ';', ',', '}']
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression

    EXPONENTE  shift, and go to state 110
    '+'        shift, and go to state 121
    '-'        shift, and go to state 122
    '*'        shift, and go to state 123
    '/'        shift, and go to state 124
    '%'        shift, and go to state 125
    '^'        shift, and go to state 126
    '?'        shift, and go to state 127

    '?'       [reduce using rule 18 (relational_expression)]
    $default  reduce using rule 18 (relational_expression)

    Conflict between rule 18 and token EXPONENTE resolved as shift (MAYOR_IGUAL < EXPONENTE).
    Conflict between rule 18 and token MAYOR_QUE resolved as reduce (%left MAYOR_QUE).
    Conflict between rule 18 and token MENOR_QUE resolved as reduce (%left MENOR_QUE).
    Conflict between rule 18 and token MAYOR_IGUAL resolved as reduce (%left MAYOR_IGUAL).
    Conflict between rule 18 and token MENOR_IGUAL resolved as reduce (%left MENOR_IGUAL).
    Conflict between rule 18 and token IGUAL_LOGICO resolved as reduce (%left IGUAL_LOGICO).
    Conflict between rule 18 and token DIFERENTE resolved as reduce (%left DIFERENTE).
    Conflict between rule 18 and token Y_LOGICO resolved as reduce (Y_LOGICO < MAYOR_IGUAL).
    Conflict between rule 18 and token O_LOGICO resolved as reduce (O_LOGICO < MAYOR_IGUAL).
    Conflict between rule 18 and token CONCATENAR resolved as reduce (CONCATENAR < MAYOR_IGUAL).
    Conflict between rule 18 and token REGEX resolved as reduce (%left REGEX).
    Conflict between rule 18 and token '+' resolved as shift (MAYOR_IGUAL < '+').
    Conflict between rule 18 and token '-' resolved as shift (MAYOR_IGUAL < '-').
    Conflict between rule 18 and token '*' resolved as shift (MAYOR_IGUAL < '*').
    Conflict between rule 18 and token '/' resolved as shift (MAYOR_IGUAL < '/').
    Conflict between rule 18 and token '%' resolved as shift (MAYOR_IGUAL < '%').
    Conflict between rule 18 and token '^' resolved as shift (MAYOR_IGUAL < '^').

    shift/reduce conflict on token '?':
       18 relational_expression: expression MAYOR_IGUAL expression •
       26 ternary_expression: expression • '?' expression ':' expression
      First example: SI expression MAYOR_IGUAL expression • '?' expression ':' expression '?' expression ':' expression statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                                    $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                                       statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                                                    statement_list FIN
                                        ↳ 45: ternary_expression
                                              ↳ 26: relational_expression                                                               '?' expression ':' expression
                                                    ↳ 18: expression MAYOR_IGUAL expression
                                                                                 ↳ 45: ternary_expression
                                                                                       ↳ 26: expression • '?' expression ':' expression
      Second example: SI expression MAYOR_IGUAL expression • '?' expression ':' expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                                $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                   statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                statement_list FIN
                                        ↳ 45: ternary_expression
                                              ↳ 26: expression                                      '?' expression ':' expression
                                                    ↳ 34: relational_expression
                                                          ↳ 18: expression MAYOR_IGUAL expression •



State 177

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   19                      | expression MENOR_IGUAL expression •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, PARA, IR, MAYOR_QUE, MENOR_QUE, MAYOR_IGUAL, MENOR_IGUAL, IGUAL_LOGICO, DIFERENTE, Y_LOGICO, O_LOGICO, CONCATENAR, REGEX, GLOBAL, CLASE, '=', '?', ':', ')', ']', ';', ',', '}']
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression

    EXPONENTE  shift, and go to state 110
    '+'        shift, and go to state 121
    '-'        shift, and go to state 122
    '*'        shift, and go to state 123
    '/'        shift, and go to state 124
    '%'        shift, and go to state 125
    '^'        shift, and go to state 126
    '?'        shift, and go to state 127

    '?'       [reduce using rule 19 (relational_expression)]
    $default  reduce using rule 19 (relational_expression)

    Conflict between rule 19 and token EXPONENTE resolved as shift (MENOR_IGUAL < EXPONENTE).
    Conflict between rule 19 and token MAYOR_QUE resolved as reduce (%left MAYOR_QUE).
    Conflict between rule 19 and token MENOR_QUE resolved as reduce (%left MENOR_QUE).
    Conflict between rule 19 and token MAYOR_IGUAL resolved as reduce (%left MAYOR_IGUAL).
    Conflict between rule 19 and token MENOR_IGUAL resolved as reduce (%left MENOR_IGUAL).
    Conflict between rule 19 and token IGUAL_LOGICO resolved as reduce (%left IGUAL_LOGICO).
    Conflict between rule 19 and token DIFERENTE resolved as reduce (%left DIFERENTE).
    Conflict between rule 19 and token Y_LOGICO resolved as reduce (Y_LOGICO < MENOR_IGUAL).
    Conflict between rule 19 and token O_LOGICO resolved as reduce (O_LOGICO < MENOR_IGUAL).
    Conflict between rule 19 and token CONCATENAR resolved as reduce (CONCATENAR < MENOR_IGUAL).
    Conflict between rule 19 and token REGEX resolved as reduce (%left REGEX).
    Conflict between rule 19 and token '+' resolved as shift (MENOR_IGUAL < '+').
    Conflict between rule 19 and token '-' resolved as shift (MENOR_IGUAL < '-').
    Conflict between rule 19 and token '*' resolved as shift (MENOR_IGUAL < '*').
    Conflict between rule 19 and token '/' resolved as shift (MENOR_IGUAL < '/').
    Conflict between rule 19 and token '%' resolved as shift (MENOR_IGUAL < '%').
    Conflict between rule 19 and token '^' resolved as shift (MENOR_IGUAL < '^').

    shift/reduce conflict on token '?':
       19 relational_expression: expression MENOR_IGUAL expression •
       26 ternary_expression: expression • '?' expression ':' expression
      First example: SI expression MENOR_IGUAL expression • '?' expression ':' expression '?' expression ':' expression statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                                    $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                                       statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                                                    statement_list FIN
                                        ↳ 45: ternary_expression
                                              ↳ 26: relational_expression                                                               '?' expression ':' expression
                                                    ↳ 19: expression MENOR_IGUAL expression
                                                                                 ↳ 45: ternary_expression
                                                                                       ↳ 26: expression • '?' expression ':' expression
      Second example: SI expression MENOR_IGUAL expression • '?' expression ':' expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                                $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                   statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                statement_list FIN
                                        ↳ 45: ternary_expression
                                              ↳ 26: expression                                      '?' expression ':' expression
                                                    ↳ 34: relational_expression
                                                          ↳ 19: expression MENOR_IGUAL expression •



State 178

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   21                    | expression IGUAL_LOGICO expression •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, PARA, IR, MAYOR_QUE, MENOR_QUE, MAYOR_IGUAL, MENOR_IGUAL, IGUAL_LOGICO, DIFERENTE, Y_LOGICO, O_LOGICO, CONCATENAR, REGEX, GLOBAL, CLASE, '=', '?', ':', ')', ']', ';', ',', '}']
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression

    EXPONENTE  shift, and go to state 110
    '+'        shift, and go to state 121
    '-'        shift, and go to state 122
    '*'        shift, and go to state 123
    '/'        shift, and go to state 124
    '%'        shift, and go to state 125
    '^'        shift, and go to state 126
    '?'        shift, and go to state 127

    '?'       [reduce using rule 21 (equality_expression)]
    $default  reduce using rule 21 (equality_expression)

    Conflict between rule 21 and token EXPONENTE resolved as shift (IGUAL_LOGICO < EXPONENTE).
    Conflict between rule 21 and token MAYOR_QUE resolved as reduce (%left MAYOR_QUE).
    Conflict between rule 21 and token MENOR_QUE resolved as reduce (%left MENOR_QUE).
    Conflict between rule 21 and token MAYOR_IGUAL resolved as reduce (%left MAYOR_IGUAL).
    Conflict between rule 21 and token MENOR_IGUAL resolved as reduce (%left MENOR_IGUAL).
    Conflict between rule 21 and token IGUAL_LOGICO resolved as reduce (%left IGUAL_LOGICO).
    Conflict between rule 21 and token DIFERENTE resolved as reduce (%left DIFERENTE).
    Conflict between rule 21 and token Y_LOGICO resolved as reduce (Y_LOGICO < IGUAL_LOGICO).
    Conflict between rule 21 and token O_LOGICO resolved as reduce (O_LOGICO < IGUAL_LOGICO).
    Conflict between rule 21 and token CONCATENAR resolved as reduce (CONCATENAR < IGUAL_LOGICO).
    Conflict between rule 21 and token REGEX resolved as reduce (%left REGEX).
    Conflict between rule 21 and token '+' resolved as shift (IGUAL_LOGICO < '+').
    Conflict between rule 21 and token '-' resolved as shift (IGUAL_LOGICO < '-').
    Conflict between rule 21 and token '*' resolved as shift (IGUAL_LOGICO < '*').
    Conflict between rule 21 and token '/' resolved as shift (IGUAL_LOGICO < '/').
    Conflict between rule 21 and token '%' resolved as shift (IGUAL_LOGICO < '%').
    Conflict between rule 21 and token '^' resolved as shift (IGUAL_LOGICO < '^').

    shift/reduce conflict on token '?':
       21 equality_expression: expression IGUAL_LOGICO expression •
       26 ternary_expression: expression • '?' expression ':' expression
      First example: SI expression IGUAL_LOGICO expression • '?' expression ':' expression '?' expression ':' expression statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                                     $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                                        statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                                                     statement_list FIN
                                        ↳ 45: ternary_expression
                                              ↳ 26: equality_expression                                                                  '?' expression ':' expression
                                                    ↳ 21: expression IGUAL_LOGICO expression
                                                                                  ↳ 45: ternary_expression
                                                                                        ↳ 26: expression • '?' expression ':' expression
      Second example: SI expression IGUAL_LOGICO expression • '?' expression ':' expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                                 $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                    statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                 statement_list FIN
                                        ↳ 45: ternary_expression
                                              ↳ 26: expression                                       '?' expression ':' expression
                                                    ↳ 35: equality_expression
                                                          ↳ 21: expression IGUAL_LOGICO expression •



State 179

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   20                    | expression DIFERENTE expression •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, PARA, IR, MAYOR_QUE, MENOR_QUE, MAYOR_IGUAL, MENOR_IGUAL, IGUAL_LOGICO, DIFERENTE, Y_LOGICO, O_LOGICO, CONCATENAR, REGEX, GLOBAL, CLASE, '=', '?', ':', ')', ']', ';', ',', '}']
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression

    EXPONENTE  shift, and go to state 110
    '+'        shift, and go to state 121
    '-'        shift, and go to state 122
    '*'        shift, and go to state 123
    '/'        shift, and go to state 124
    '%'        shift, and go to state 125
    '^'        shift, and go to state 126
    '?'        shift, and go to state 127

    '?'       [reduce using rule 20 (equality_expression)]
    $default  reduce using rule 20 (equality_expression)

    Conflict between rule 20 and token EXPONENTE resolved as shift (DIFERENTE < EXPONENTE).
    Conflict between rule 20 and token MAYOR_QUE resolved as reduce (%left MAYOR_QUE).
    Conflict between rule 20 and token MENOR_QUE resolved as reduce (%left MENOR_QUE).
    Conflict between rule 20 and token MAYOR_IGUAL resolved as reduce (%left MAYOR_IGUAL).
    Conflict between rule 20 and token MENOR_IGUAL resolved as reduce (%left MENOR_IGUAL).
    Conflict between rule 20 and token IGUAL_LOGICO resolved as reduce (%left IGUAL_LOGICO).
    Conflict between rule 20 and token DIFERENTE resolved as reduce (%left DIFERENTE).
    Conflict between rule 20 and token Y_LOGICO resolved as reduce (Y_LOGICO < DIFERENTE).
    Conflict between rule 20 and token O_LOGICO resolved as reduce (O_LOGICO < DIFERENTE).
    Conflict between rule 20 and token CONCATENAR resolved as reduce (CONCATENAR < DIFERENTE).
    Conflict between rule 20 and token REGEX resolved as reduce (%left REGEX).
    Conflict between rule 20 and token '+' resolved as shift (DIFERENTE < '+').
    Conflict between rule 20 and token '-' resolved as shift (DIFERENTE < '-').
    Conflict between rule 20 and token '*' resolved as shift (DIFERENTE < '*').
    Conflict between rule 20 and token '/' resolved as shift (DIFERENTE < '/').
    Conflict between rule 20 and token '%' resolved as shift (DIFERENTE < '%').
    Conflict between rule 20 and token '^' resolved as shift (DIFERENTE < '^').

    shift/reduce conflict on token '?':
       20 equality_expression: expression DIFERENTE expression •
       26 ternary_expression: expression • '?' expression ':' expression
      First example: SI expression DIFERENTE expression • '?' expression ':' expression '?' expression ':' expression statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                                  $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                                     statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                                                  statement_list FIN
                                        ↳ 45: ternary_expression
                                              ↳ 26: equality_expression                                                               '?' expression ':' expression
                                                    ↳ 20: expression DIFERENTE expression
                                                                               ↳ 45: ternary_expression
                                                                                     ↳ 26: expression • '?' expression ':' expression
      Second example: SI expression DIFERENTE expression • '?' expression ':' expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                              $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                 statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                              statement_list FIN
                                        ↳ 45: ternary_expression
                                              ↳ 26: expression                                    '?' expression ':' expression
                                                    ↳ 35: equality_expression
                                                          ↳ 20: expression DIFERENTE expression •



State 180

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   24                       | expression Y_LOGICO expression •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, PARA, IR, Y_LOGICO, O_LOGICO, CONCATENAR, GLOBAL, CLASE, '=', '?', ':', ')', ']', ';', ',', '}']
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression

    EXPONENTE     shift, and go to state 110
    MAYOR_QUE     shift, and go to state 111
    MENOR_QUE     shift, and go to state 112
    MAYOR_IGUAL   shift, and go to state 113
    MENOR_IGUAL   shift, and go to state 114
    IGUAL_LOGICO  shift, and go to state 115
    DIFERENTE     shift, and go to state 116
    REGEX         shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '%'           shift, and go to state 125
    '^'           shift, and go to state 126
    '?'           shift, and go to state 127

    '?'       [reduce using rule 24 (logical_and_expression)]
    $default  reduce using rule 24 (logical_and_expression)

    Conflict between rule 24 and token EXPONENTE resolved as shift (Y_LOGICO < EXPONENTE).
    Conflict between rule 24 and token MAYOR_QUE resolved as shift (Y_LOGICO < MAYOR_QUE).
    Conflict between rule 24 and token MENOR_QUE resolved as shift (Y_LOGICO < MENOR_QUE).
    Conflict between rule 24 and token MAYOR_IGUAL resolved as shift (Y_LOGICO < MAYOR_IGUAL).
    Conflict between rule 24 and token MENOR_IGUAL resolved as shift (Y_LOGICO < MENOR_IGUAL).
    Conflict between rule 24 and token IGUAL_LOGICO resolved as shift (Y_LOGICO < IGUAL_LOGICO).
    Conflict between rule 24 and token DIFERENTE resolved as shift (Y_LOGICO < DIFERENTE).
    Conflict between rule 24 and token Y_LOGICO resolved as reduce (%left Y_LOGICO).
    Conflict between rule 24 and token O_LOGICO resolved as reduce (%left O_LOGICO).
    Conflict between rule 24 and token CONCATENAR resolved as reduce (CONCATENAR < Y_LOGICO).
    Conflict between rule 24 and token REGEX resolved as shift (Y_LOGICO < REGEX).
    Conflict between rule 24 and token '+' resolved as shift (Y_LOGICO < '+').
    Conflict between rule 24 and token '-' resolved as shift (Y_LOGICO < '-').
    Conflict between rule 24 and token '*' resolved as shift (Y_LOGICO < '*').
    Conflict between rule 24 and token '/' resolved as shift (Y_LOGICO < '/').
    Conflict between rule 24 and token '%' resolved as shift (Y_LOGICO < '%').
    Conflict between rule 24 and token '^' resolved as shift (Y_LOGICO < '^').

    shift/reduce conflict on token '?':
       24 logical_and_expression: expression Y_LOGICO expression •
       26 ternary_expression: expression • '?' expression ':' expression
      First example: SI expression Y_LOGICO expression • '?' expression ':' expression '?' expression ':' expression statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                                 $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                                    statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                                                 statement_list FIN
                                        ↳ 45: ternary_expression
                                              ↳ 26: logical_and_expression                                                           '?' expression ':' expression
                                                    ↳ 24: expression Y_LOGICO expression
                                                                              ↳ 45: ternary_expression
                                                                                    ↳ 26: expression • '?' expression ':' expression
      Second example: SI expression Y_LOGICO expression • '?' expression ':' expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                             $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                             statement_list FIN
                                        ↳ 45: ternary_expression
                                              ↳ 26: expression                                   '?' expression ':' expression
                                                    ↳ 37: logical_and_expression
                                                          ↳ 24: expression Y_LOGICO expression •



State 181

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   25                      | expression O_LOGICO expression •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, PARA, IR, Y_LOGICO, O_LOGICO, CONCATENAR, GLOBAL, CLASE, '=', '?', ':', ')', ']', ';', ',', '}']
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression

    EXPONENTE     shift, and go to state 110
    MAYOR_QUE     shift, and go to state 111
    MENOR_QUE     shift, and go to state 112
    MAYOR_IGUAL   shift, and go to state 113
    MENOR_IGUAL   shift, and go to state 114
    IGUAL_LOGICO  shift, and go to state 115
    DIFERENTE     shift, and go to state 116
    REGEX         shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '%'           shift, and go to state 125
    '^'           shift, and go to state 126
    '?'           shift, and go to state 127

    '?'       [reduce using rule 25 (logical_or_expression)]
    $default  reduce using rule 25 (logical_or_expression)

    Conflict between rule 25 and token EXPONENTE resolved as shift (O_LOGICO < EXPONENTE).
    Conflict between rule 25 and token MAYOR_QUE resolved as shift (O_LOGICO < MAYOR_QUE).
    Conflict between rule 25 and token MENOR_QUE resolved as shift (O_LOGICO < MENOR_QUE).
    Conflict between rule 25 and token MAYOR_IGUAL resolved as shift (O_LOGICO < MAYOR_IGUAL).
    Conflict between rule 25 and token MENOR_IGUAL resolved as shift (O_LOGICO < MENOR_IGUAL).
    Conflict between rule 25 and token IGUAL_LOGICO resolved as shift (O_LOGICO < IGUAL_LOGICO).
    Conflict between rule 25 and token DIFERENTE resolved as shift (O_LOGICO < DIFERENTE).
    Conflict between rule 25 and token Y_LOGICO resolved as reduce (%left Y_LOGICO).
    Conflict between rule 25 and token O_LOGICO resolved as reduce (%left O_LOGICO).
    Conflict between rule 25 and token CONCATENAR resolved as reduce (CONCATENAR < O_LOGICO).
    Conflict between rule 25 and token REGEX resolved as shift (O_LOGICO < REGEX).
    Conflict between rule 25 and token '+' resolved as shift (O_LOGICO < '+').
    Conflict between rule 25 and token '-' resolved as shift (O_LOGICO < '-').
    Conflict between rule 25 and token '*' resolved as shift (O_LOGICO < '*').
    Conflict between rule 25 and token '/' resolved as shift (O_LOGICO < '/').
    Conflict between rule 25 and token '%' resolved as shift (O_LOGICO < '%').
    Conflict between rule 25 and token '^' resolved as shift (O_LOGICO < '^').

    shift/reduce conflict on token '?':
       25 logical_or_expression: expression O_LOGICO expression •
       26 ternary_expression: expression • '?' expression ':' expression
      First example: SI expression O_LOGICO expression • '?' expression ':' expression '?' expression ':' expression statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                                 $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                                    statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                                                 statement_list FIN
                                        ↳ 45: ternary_expression
                                              ↳ 26: logical_or_expression                                                            '?' expression ':' expression
                                                    ↳ 25: expression O_LOGICO expression
                                                                              ↳ 45: ternary_expression
                                                                                    ↳ 26: expression • '?' expression ':' expression
      Second example: SI expression O_LOGICO expression • '?' expression ':' expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                             $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                             statement_list FIN
                                        ↳ 45: ternary_expression
                                              ↳ 26: expression                                   '?' expression ':' expression
                                                    ↳ 38: logical_or_expression
                                                          ↳ 25: expression O_LOGICO expression •



State 182

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression
   27                  | expression CONCATENAR expression •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, PARA, IR, GLOBAL, CLASE, '=', '?', ':', ')', ']', ';', ',', '}']

    EXPONENTE     shift, and go to state 110
    MAYOR_QUE     shift, and go to state 111
    MENOR_QUE     shift, and go to state 112
    MAYOR_IGUAL   shift, and go to state 113
    MENOR_IGUAL   shift, and go to state 114
    IGUAL_LOGICO  shift, and go to state 115
    DIFERENTE     shift, and go to state 116
    Y_LOGICO      shift, and go to state 117
    O_LOGICO      shift, and go to state 118
    CONCATENAR    shift, and go to state 119
    REGEX         shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '%'           shift, and go to state 125
    '^'           shift, and go to state 126
    '?'           shift, and go to state 127

    '?'       [reduce using rule 27 (concat_expression)]
    $default  reduce using rule 27 (concat_expression)

    Conflict between rule 27 and token EXPONENTE resolved as shift (CONCATENAR < EXPONENTE).
    Conflict between rule 27 and token MAYOR_QUE resolved as shift (CONCATENAR < MAYOR_QUE).
    Conflict between rule 27 and token MENOR_QUE resolved as shift (CONCATENAR < MENOR_QUE).
    Conflict between rule 27 and token MAYOR_IGUAL resolved as shift (CONCATENAR < MAYOR_IGUAL).
    Conflict between rule 27 and token MENOR_IGUAL resolved as shift (CONCATENAR < MENOR_IGUAL).
    Conflict between rule 27 and token IGUAL_LOGICO resolved as shift (CONCATENAR < IGUAL_LOGICO).
    Conflict between rule 27 and token DIFERENTE resolved as shift (CONCATENAR < DIFERENTE).
    Conflict between rule 27 and token Y_LOGICO resolved as shift (CONCATENAR < Y_LOGICO).
    Conflict between rule 27 and token O_LOGICO resolved as shift (CONCATENAR < O_LOGICO).
    Conflict between rule 27 and token CONCATENAR resolved as shift (%right CONCATENAR).
    Conflict between rule 27 and token REGEX resolved as shift (CONCATENAR < REGEX).
    Conflict between rule 27 and token '+' resolved as shift (CONCATENAR < '+').
    Conflict between rule 27 and token '-' resolved as shift (CONCATENAR < '-').
    Conflict between rule 27 and token '*' resolved as shift (CONCATENAR < '*').
    Conflict between rule 27 and token '/' resolved as shift (CONCATENAR < '/').
    Conflict between rule 27 and token '%' resolved as shift (CONCATENAR < '%').
    Conflict between rule 27 and token '^' resolved as shift (CONCATENAR < '^').

    shift/reduce conflict on token '?':
       27 concat_expression: expression CONCATENAR expression •
       26 ternary_expression: expression • '?' expression ':' expression
      First example: SI expression CONCATENAR expression • '?' expression ':' expression '?' expression ':' expression statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                                   $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                                      statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                                                   statement_list FIN
                                        ↳ 45: ternary_expression
                                              ↳ 26: concat_expression                                                                  '?' expression ':' expression
                                                    ↳ 27: expression CONCATENAR expression
                                                                                ↳ 45: ternary_expression
                                                                                      ↳ 26: expression • '?' expression ':' expression
      Second example: SI expression CONCATENAR expression • '?' expression ':' expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                               $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                  statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                               statement_list FIN
                                        ↳ 45: ternary_expression
                                              ↳ 26: expression                                     '?' expression ':' expression
                                                    ↳ 39: concat_expression
                                                          ↳ 27: expression CONCATENAR expression •



State 183

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   22                    | expression REGEX expression •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, PARA, IR, MAYOR_QUE, MENOR_QUE, MAYOR_IGUAL, MENOR_IGUAL, IGUAL_LOGICO, DIFERENTE, Y_LOGICO, O_LOGICO, CONCATENAR, REGEX, GLOBAL, CLASE, '=', '?', ':', ')', ']', ';', ',', '}']
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression

    EXPONENTE  shift, and go to state 110
    '+'        shift, and go to state 121
    '-'        shift, and go to state 122
    '*'        shift, and go to state 123
    '/'        shift, and go to state 124
    '%'        shift, and go to state 125
    '^'        shift, and go to state 126
    '?'        shift, and go to state 127

    '?'       [reduce using rule 22 (equality_expression)]
    $default  reduce using rule 22 (equality_expression)

    Conflict between rule 22 and token EXPONENTE resolved as shift (REGEX < EXPONENTE).
    Conflict between rule 22 and token MAYOR_QUE resolved as reduce (%left MAYOR_QUE).
    Conflict between rule 22 and token MENOR_QUE resolved as reduce (%left MENOR_QUE).
    Conflict between rule 22 and token MAYOR_IGUAL resolved as reduce (%left MAYOR_IGUAL).
    Conflict between rule 22 and token MENOR_IGUAL resolved as reduce (%left MENOR_IGUAL).
    Conflict between rule 22 and token IGUAL_LOGICO resolved as reduce (%left IGUAL_LOGICO).
    Conflict between rule 22 and token DIFERENTE resolved as reduce (%left DIFERENTE).
    Conflict between rule 22 and token Y_LOGICO resolved as reduce (Y_LOGICO < REGEX).
    Conflict between rule 22 and token O_LOGICO resolved as reduce (O_LOGICO < REGEX).
    Conflict between rule 22 and token CONCATENAR resolved as reduce (CONCATENAR < REGEX).
    Conflict between rule 22 and token REGEX resolved as reduce (%left REGEX).
    Conflict between rule 22 and token '+' resolved as shift (REGEX < '+').
    Conflict between rule 22 and token '-' resolved as shift (REGEX < '-').
    Conflict between rule 22 and token '*' resolved as shift (REGEX < '*').
    Conflict between rule 22 and token '/' resolved as shift (REGEX < '/').
    Conflict between rule 22 and token '%' resolved as shift (REGEX < '%').
    Conflict between rule 22 and token '^' resolved as shift (REGEX < '^').

    shift/reduce conflict on token '?':
       22 equality_expression: expression REGEX expression •
       26 ternary_expression: expression • '?' expression ':' expression
      First example: SI expression REGEX expression • '?' expression ':' expression '?' expression ':' expression statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                              $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                                 statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                                              statement_list FIN
                                        ↳ 45: ternary_expression
                                              ↳ 26: equality_expression                                                           '?' expression ':' expression
                                                    ↳ 22: expression REGEX expression
                                                                           ↳ 45: ternary_expression
                                                                                 ↳ 26: expression • '?' expression ':' expression
      Second example: SI expression REGEX expression • '?' expression ':' expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                          $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                             statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                          statement_list FIN
                                        ↳ 45: ternary_expression
                                              ↳ 26: expression                                '?' expression ':' expression
                                                    ↳ 35: equality_expression
                                                          ↳ 22: expression REGEX expression •



State 184

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   15                    | expression '+' expression •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, PARA, IR, MAYOR_QUE, MENOR_QUE, MAYOR_IGUAL, MENOR_IGUAL, IGUAL_LOGICO, DIFERENTE, Y_LOGICO, O_LOGICO, CONCATENAR, REGEX, GLOBAL, CLASE, '=', '+', '-', '?', ':', ')', ']', ';', ',', '}']
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression

    EXPONENTE  shift, and go to state 110
    '*'        shift, and go to state 123
    '/'        shift, and go to state 124
    '%'        shift, and go to state 125
    '^'        shift, and go to state 126
    '?'        shift, and go to state 127

    '?'       [reduce using rule 15 (additive_expression)]
    $default  reduce using rule 15 (additive_expression)

    Conflict between rule 15 and token EXPONENTE resolved as shift ('+' < EXPONENTE).
    Conflict between rule 15 and token MAYOR_QUE resolved as reduce (MAYOR_QUE < '+').
    Conflict between rule 15 and token MENOR_QUE resolved as reduce (MENOR_QUE < '+').
    Conflict between rule 15 and token MAYOR_IGUAL resolved as reduce (MAYOR_IGUAL < '+').
    Conflict between rule 15 and token MENOR_IGUAL resolved as reduce (MENOR_IGUAL < '+').
    Conflict between rule 15 and token IGUAL_LOGICO resolved as reduce (IGUAL_LOGICO < '+').
    Conflict between rule 15 and token DIFERENTE resolved as reduce (DIFERENTE < '+').
    Conflict between rule 15 and token Y_LOGICO resolved as reduce (Y_LOGICO < '+').
    Conflict between rule 15 and token O_LOGICO resolved as reduce (O_LOGICO < '+').
    Conflict between rule 15 and token CONCATENAR resolved as reduce (CONCATENAR < '+').
    Conflict between rule 15 and token REGEX resolved as reduce (REGEX < '+').
    Conflict between rule 15 and token '+' resolved as reduce (%left '+').
    Conflict between rule 15 and token '-' resolved as reduce (%left '-').
    Conflict between rule 15 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 15 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 15 and token '%' resolved as shift ('+' < '%').
    Conflict between rule 15 and token '^' resolved as shift ('+' < '^').

    shift/reduce conflict on token '?':
       15 additive_expression: expression '+' expression •
       26 ternary_expression: expression • '?' expression ':' expression
      First example: SI expression '+' expression • '?' expression ':' expression '?' expression ':' expression statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                            $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                               statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                                            statement_list FIN
                                        ↳ 45: ternary_expression
                                              ↳ 26: additive_expression                                                         '?' expression ':' expression
                                                    ↳ 15: expression '+' expression
                                                                         ↳ 45: ternary_expression
                                                                               ↳ 26: expression • '?' expression ':' expression
      Second example: SI expression '+' expression • '?' expression ':' expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                        $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                           statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                        statement_list FIN
                                        ↳ 45: ternary_expression
                                              ↳ 26: expression                              '?' expression ':' expression
                                                    ↳ 33: additive_expression
                                                          ↳ 15: expression '+' expression •



State 185

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   14                    | expression '-' expression •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, PARA, IR, MAYOR_QUE, MENOR_QUE, MAYOR_IGUAL, MENOR_IGUAL, IGUAL_LOGICO, DIFERENTE, Y_LOGICO, O_LOGICO, CONCATENAR, REGEX, GLOBAL, CLASE, '=', '+', '-', '?', ':', ')', ']', ';', ',', '}']
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression

    EXPONENTE  shift, and go to state 110
    '*'        shift, and go to state 123
    '/'        shift, and go to state 124
    '%'        shift, and go to state 125
    '^'        shift, and go to state 126
    '?'        shift, and go to state 127

    '?'       [reduce using rule 14 (additive_expression)]
    $default  reduce using rule 14 (additive_expression)

    Conflict between rule 14 and token EXPONENTE resolved as shift ('-' < EXPONENTE).
    Conflict between rule 14 and token MAYOR_QUE resolved as reduce (MAYOR_QUE < '-').
    Conflict between rule 14 and token MENOR_QUE resolved as reduce (MENOR_QUE < '-').
    Conflict between rule 14 and token MAYOR_IGUAL resolved as reduce (MAYOR_IGUAL < '-').
    Conflict between rule 14 and token MENOR_IGUAL resolved as reduce (MENOR_IGUAL < '-').
    Conflict between rule 14 and token IGUAL_LOGICO resolved as reduce (IGUAL_LOGICO < '-').
    Conflict between rule 14 and token DIFERENTE resolved as reduce (DIFERENTE < '-').
    Conflict between rule 14 and token Y_LOGICO resolved as reduce (Y_LOGICO < '-').
    Conflict between rule 14 and token O_LOGICO resolved as reduce (O_LOGICO < '-').
    Conflict between rule 14 and token CONCATENAR resolved as reduce (CONCATENAR < '-').
    Conflict between rule 14 and token REGEX resolved as reduce (REGEX < '-').
    Conflict between rule 14 and token '+' resolved as reduce (%left '+').
    Conflict between rule 14 and token '-' resolved as reduce (%left '-').
    Conflict between rule 14 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 14 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 14 and token '%' resolved as shift ('-' < '%').
    Conflict between rule 14 and token '^' resolved as shift ('-' < '^').

    shift/reduce conflict on token '?':
       14 additive_expression: expression '-' expression •
       26 ternary_expression: expression • '?' expression ':' expression
      First example: SI expression '-' expression • '?' expression ':' expression '?' expression ':' expression statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                            $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                               statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                                            statement_list FIN
                                        ↳ 45: ternary_expression
                                              ↳ 26: additive_expression                                                         '?' expression ':' expression
                                                    ↳ 14: expression '-' expression
                                                                         ↳ 45: ternary_expression
                                                                               ↳ 26: expression • '?' expression ':' expression
      Second example: SI expression '-' expression • '?' expression ':' expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                        $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                           statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                        statement_list FIN
                                        ↳ 45: ternary_expression
                                              ↳ 26: expression                              '?' expression ':' expression
                                                    ↳ 33: additive_expression
                                                          ↳ 14: expression '-' expression •



State 186

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   11                          | expression '*' expression •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, PARA, IR, MAYOR_QUE, MENOR_QUE, MAYOR_IGUAL, MENOR_IGUAL, IGUAL_LOGICO, DIFERENTE, Y_LOGICO, O_LOGICO, CONCATENAR, REGEX, GLOBAL, CLASE, '=', '+', '-', '*', '/', '%', '?', ':', ')', ']', ';', ',', '}']
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression

    EXPONENTE  shift, and go to state 110
    '^'        shift, and go to state 126
    '?'        shift, and go to state 127

    '?'       [reduce using rule 11 (multiplicative_expression)]
    $default  reduce using rule 11 (multiplicative_expression)

    Conflict between rule 11 and token EXPONENTE resolved as shift ('*' < EXPONENTE).
    Conflict between rule 11 and token MAYOR_QUE resolved as reduce (MAYOR_QUE < '*').
    Conflict between rule 11 and token MENOR_QUE resolved as reduce (MENOR_QUE < '*').
    Conflict between rule 11 and token MAYOR_IGUAL resolved as reduce (MAYOR_IGUAL < '*').
    Conflict between rule 11 and token MENOR_IGUAL resolved as reduce (MENOR_IGUAL < '*').
    Conflict between rule 11 and token IGUAL_LOGICO resolved as reduce (IGUAL_LOGICO < '*').
    Conflict between rule 11 and token DIFERENTE resolved as reduce (DIFERENTE < '*').
    Conflict between rule 11 and token Y_LOGICO resolved as reduce (Y_LOGICO < '*').
    Conflict between rule 11 and token O_LOGICO resolved as reduce (O_LOGICO < '*').
    Conflict between rule 11 and token CONCATENAR resolved as reduce (CONCATENAR < '*').
    Conflict between rule 11 and token REGEX resolved as reduce (REGEX < '*').
    Conflict between rule 11 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 11 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 11 and token '*' resolved as reduce (%left '*').
    Conflict between rule 11 and token '/' resolved as reduce (%left '/').
    Conflict between rule 11 and token '%' resolved as reduce (%left '%').
    Conflict between rule 11 and token '^' resolved as shift ('*' < '^').

    shift/reduce conflict on token '?':
       11 multiplicative_expression: expression '*' expression •
       26 ternary_expression: expression • '?' expression ':' expression
      First example: SI expression '*' expression • '?' expression ':' expression '?' expression ':' expression statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                            $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                               statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                                            statement_list FIN
                                        ↳ 45: ternary_expression
                                              ↳ 26: multiplicative_expression                                                   '?' expression ':' expression
                                                    ↳ 11: expression '*' expression
                                                                         ↳ 45: ternary_expression
                                                                               ↳ 26: expression • '?' expression ':' expression
      Second example: SI expression '*' expression • '?' expression ':' expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                        $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                           statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                        statement_list FIN
                                        ↳ 45: ternary_expression
                                              ↳ 26: expression                              '?' expression ':' expression
                                                    ↳ 32: multiplicative_expression
                                                          ↳ 11: expression '*' expression •



State 187

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   12                          | expression '/' expression •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, PARA, IR, MAYOR_QUE, MENOR_QUE, MAYOR_IGUAL, MENOR_IGUAL, IGUAL_LOGICO, DIFERENTE, Y_LOGICO, O_LOGICO, CONCATENAR, REGEX, GLOBAL, CLASE, '=', '+', '-', '*', '/', '%', '?', ':', ')', ']', ';', ',', '}']
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression

    EXPONENTE  shift, and go to state 110
    '^'        shift, and go to state 126
    '?'        shift, and go to state 127

    '?'       [reduce using rule 12 (multiplicative_expression)]
    $default  reduce using rule 12 (multiplicative_expression)

    Conflict between rule 12 and token EXPONENTE resolved as shift ('/' < EXPONENTE).
    Conflict between rule 12 and token MAYOR_QUE resolved as reduce (MAYOR_QUE < '/').
    Conflict between rule 12 and token MENOR_QUE resolved as reduce (MENOR_QUE < '/').
    Conflict between rule 12 and token MAYOR_IGUAL resolved as reduce (MAYOR_IGUAL < '/').
    Conflict between rule 12 and token MENOR_IGUAL resolved as reduce (MENOR_IGUAL < '/').
    Conflict between rule 12 and token IGUAL_LOGICO resolved as reduce (IGUAL_LOGICO < '/').
    Conflict between rule 12 and token DIFERENTE resolved as reduce (DIFERENTE < '/').
    Conflict between rule 12 and token Y_LOGICO resolved as reduce (Y_LOGICO < '/').
    Conflict between rule 12 and token O_LOGICO resolved as reduce (O_LOGICO < '/').
    Conflict between rule 12 and token CONCATENAR resolved as reduce (CONCATENAR < '/').
    Conflict between rule 12 and token REGEX resolved as reduce (REGEX < '/').
    Conflict between rule 12 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 12 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 12 and token '*' resolved as reduce (%left '*').
    Conflict between rule 12 and token '/' resolved as reduce (%left '/').
    Conflict between rule 12 and token '%' resolved as reduce (%left '%').
    Conflict between rule 12 and token '^' resolved as shift ('/' < '^').

    shift/reduce conflict on token '?':
       12 multiplicative_expression: expression '/' expression •
       26 ternary_expression: expression • '?' expression ':' expression
      First example: SI expression '/' expression • '?' expression ':' expression '?' expression ':' expression statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                            $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                               statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                                            statement_list FIN
                                        ↳ 45: ternary_expression
                                              ↳ 26: multiplicative_expression                                                   '?' expression ':' expression
                                                    ↳ 12: expression '/' expression
                                                                         ↳ 45: ternary_expression
                                                                               ↳ 26: expression • '?' expression ':' expression
      Second example: SI expression '/' expression • '?' expression ':' expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                        $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                           statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                        statement_list FIN
                                        ↳ 45: ternary_expression
                                              ↳ 26: expression                              '?' expression ':' expression
                                                    ↳ 32: multiplicative_expression
                                                          ↳ 12: expression '/' expression •



State 188

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   13                          | expression '%' expression •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, PARA, IR, MAYOR_QUE, MENOR_QUE, MAYOR_IGUAL, MENOR_IGUAL, IGUAL_LOGICO, DIFERENTE, Y_LOGICO, O_LOGICO, CONCATENAR, REGEX, GLOBAL, CLASE, '=', '+', '-', '*', '/', '%', '?', ':', ')', ']', ';', ',', '}']
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression

    EXPONENTE  shift, and go to state 110
    '^'        shift, and go to state 126
    '?'        shift, and go to state 127

    '?'       [reduce using rule 13 (multiplicative_expression)]
    $default  reduce using rule 13 (multiplicative_expression)

    Conflict between rule 13 and token EXPONENTE resolved as shift ('*' < EXPONENTE).
    Conflict between rule 13 and token MAYOR_QUE resolved as reduce (MAYOR_QUE < '*').
    Conflict between rule 13 and token MENOR_QUE resolved as reduce (MENOR_QUE < '*').
    Conflict between rule 13 and token MAYOR_IGUAL resolved as reduce (MAYOR_IGUAL < '*').
    Conflict between rule 13 and token MENOR_IGUAL resolved as reduce (MENOR_IGUAL < '*').
    Conflict between rule 13 and token IGUAL_LOGICO resolved as reduce (IGUAL_LOGICO < '*').
    Conflict between rule 13 and token DIFERENTE resolved as reduce (DIFERENTE < '*').
    Conflict between rule 13 and token Y_LOGICO resolved as reduce (Y_LOGICO < '*').
    Conflict between rule 13 and token O_LOGICO resolved as reduce (O_LOGICO < '*').
    Conflict between rule 13 and token CONCATENAR resolved as reduce (CONCATENAR < '*').
    Conflict between rule 13 and token REGEX resolved as reduce (REGEX < '*').
    Conflict between rule 13 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 13 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 13 and token '*' resolved as reduce (%left '*').
    Conflict between rule 13 and token '/' resolved as reduce (%left '/').
    Conflict between rule 13 and token '%' resolved as reduce (%left '%').
    Conflict between rule 13 and token '^' resolved as shift ('*' < '^').

    shift/reduce conflict on token '?':
       13 multiplicative_expression: expression '%' expression •
       26 ternary_expression: expression • '?' expression ':' expression
      First example: SI expression '%' expression • '?' expression ':' expression '?' expression ':' expression statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                            $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                               statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                                            statement_list FIN
                                        ↳ 45: ternary_expression
                                              ↳ 26: multiplicative_expression                                                   '?' expression ':' expression
                                                    ↳ 13: expression '%' expression
                                                                         ↳ 45: ternary_expression
                                                                               ↳ 26: expression • '?' expression ':' expression
      Second example: SI expression '%' expression • '?' expression ':' expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                        $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                           statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                        statement_list FIN
                                        ↳ 45: ternary_expression
                                              ↳ 26: expression                              '?' expression ':' expression
                                                    ↳ 32: multiplicative_expression
                                                          ↳ 13: expression '%' expression •



State 189

    9 multiplicative_expression: expression • '^' expression
    9                          | expression '^' expression •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, PARA, IR, MAYOR_QUE, MENOR_QUE, MAYOR_IGUAL, MENOR_IGUAL, IGUAL_LOGICO, DIFERENTE, Y_LOGICO, O_LOGICO, CONCATENAR, REGEX, GLOBAL, CLASE, '=', '+', '-', '*', '/', '%', '^', '?', ':', ')', ']', ';', ',', '}']
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression

    EXPONENTE  shift, and go to state 110
    '?'        shift, and go to state 127

    '?'       [reduce using rule 9 (multiplicative_expression)]
    $default  reduce using rule 9 (multiplicative_expression)

    Conflict between rule 9 and token EXPONENTE resolved as shift ('^' < EXPONENTE).
    Conflict between rule 9 and token MAYOR_QUE resolved as reduce (MAYOR_QUE < '^').
    Conflict between rule 9 and token MENOR_QUE resolved as reduce (MENOR_QUE < '^').
    Conflict between rule 9 and token MAYOR_IGUAL resolved as reduce (MAYOR_IGUAL < '^').
    Conflict between rule 9 and token MENOR_IGUAL resolved as reduce (MENOR_IGUAL < '^').
    Conflict between rule 9 and token IGUAL_LOGICO resolved as reduce (IGUAL_LOGICO < '^').
    Conflict between rule 9 and token DIFERENTE resolved as reduce (DIFERENTE < '^').
    Conflict between rule 9 and token Y_LOGICO resolved as reduce (Y_LOGICO < '^').
    Conflict between rule 9 and token O_LOGICO resolved as reduce (O_LOGICO < '^').
    Conflict between rule 9 and token CONCATENAR resolved as reduce (CONCATENAR < '^').
    Conflict between rule 9 and token REGEX resolved as reduce (REGEX < '^').
    Conflict between rule 9 and token '+' resolved as reduce ('+' < '^').
    Conflict between rule 9 and token '-' resolved as reduce ('-' < '^').
    Conflict between rule 9 and token '*' resolved as reduce ('*' < '^').
    Conflict between rule 9 and token '/' resolved as reduce ('/' < '^').
    Conflict between rule 9 and token '%' resolved as reduce ('%' < '^').
    Conflict between rule 9 and token '^' resolved as reduce (%left '^').

    shift/reduce conflict on token '?':
        9 multiplicative_expression: expression '^' expression •
       26 ternary_expression: expression • '?' expression ':' expression
      First example: SI expression '^' expression • '?' expression ':' expression '?' expression ':' expression statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                           $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                              statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                                           statement_list FIN
                                        ↳ 45: ternary_expression
                                              ↳ 26: multiplicative_expression                                                  '?' expression ':' expression
                                                    ↳ 9: expression '^' expression
                                                                        ↳ 45: ternary_expression
                                                                              ↳ 26: expression • '?' expression ':' expression
      Second example: SI expression '^' expression • '?' expression ':' expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                       $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                          statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                       statement_list FIN
                                        ↳ 45: ternary_expression
                                              ↳ 26: expression                             '?' expression ':' expression
                                                    ↳ 32: multiplicative_expression
                                                          ↳ 9: expression '^' expression •



State 190

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   26                   | expression '?' expression • ':' expression
   27 concat_expression: expression • CONCATENAR expression

    EXPONENTE     shift, and go to state 110
    MAYOR_QUE     shift, and go to state 111
    MENOR_QUE     shift, and go to state 112
    MAYOR_IGUAL   shift, and go to state 113
    MENOR_IGUAL   shift, and go to state 114
    IGUAL_LOGICO  shift, and go to state 115
    DIFERENTE     shift, and go to state 116
    Y_LOGICO      shift, and go to state 117
    O_LOGICO      shift, and go to state 118
    CONCATENAR    shift, and go to state 119
    REGEX         shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '%'           shift, and go to state 125
    '^'           shift, and go to state 126
    '?'           shift, and go to state 127
    ':'           shift, and go to state 225


State 191

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   95 osi_statement: O_SI • expression statement_list
   96              | O_SI • expression statement_list SINO statement_list
   97              | O_SI • expression statement_list osi_statements
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 226
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 192

   89 selection_statement: SI expression statement_list FIN •

    $default  reduce using rule 89 (selection_statement)


State 193

   50 statement_list: • statement statement_list
   51               | • statement
   52               | • error statement_list
   53 statement: • declaration
   54          | • global_declaration
   55          | • selection_statement
   56          | • iteration_statement
   57          | • jump_statement
   58          | • function_definition
   59          | • function_call
   60          | • incdec_statement
   61          | • jump_loop
   62          | • goto_etiqueta
   63          | • clase_declaracion
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   71 global_declaration: • GLOBAL declaration
   72                   | • GLOBAL function_definition
   73 declaration: • variable_access '=' expression
   74            | • variable_access CONCATENAR_IGUAL expression
   75            | • variable_access MAS_IGUAL expression
   76            | • variable_access MENOS_IGUAL expression
   77            | • variable_access POR_IGUAL expression
   78            | • variable_access ENTRE_IGUAL expression
   79            | • variable_access MODULO_IGUAL expression
   80            | • parameter_list '=' argument_expression_list
   81            | • variable_access '[' expression ']' '=' expression
   89 selection_statement: • SI expression statement_list FIN
   90                    | • SI expression statement_list SINO statement_list FIN
   90                    | SI expression statement_list SINO • statement_list FIN
   91                    | • SI expression statement_list osi_statements FIN
   92                    | • ELEGIR expression labeled_statements FIN
   98 iteration_statement: • MIENTRAS expression statement_list FIN
   99                    | • REPETIR statement_list HASTA expression
  100                    | • DESDE '(' declaration ';' expression ';' statement ')' statement_list FIN
  101                    | • PARA IDENTIFICADOR EN RANGO '(' expression ')' statement_list FIN
  102                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ')' statement_list FIN
  103                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ',' expression ')' statement_list FIN
  104 goto_etiqueta: • IDENTIFICADOR ':'
  105 jump_statement: • RETORNO expression
  106               | • RETORNO argument_expression_list
  107               | • IR IDENTIFICADOR
  108 jump_loop: • ROMPER
  109          | • CONTINUAR
  110 function_definition: • FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  116 parameter_list: ε •  ['=', ',']
  117               | • IDENTIFICADOR
  118               | • VAR_ARGS
  119               | • parameter_list ',' IDENTIFICADOR
  120               | • parameter_list ',' VAR_ARGS
  146 clase_declaracion: • CLASE IDENTIFICADOR clase_sentencias FIN

    error          shift, and go to state 1
    IDENTIFICADOR  shift, and go to state 2
    VAR_ARGS       shift, and go to state 3
    SI             shift, and go to state 4
    MIENTRAS       shift, and go to state 5
    REPETIR        shift, and go to state 6
    ROMPER         shift, and go to state 7
    CONTINUAR      shift, and go to state 8
    FUNCION        shift, and go to state 9
    DESDE          shift, and go to state 10
    RETORNO        shift, and go to state 11
    ELEGIR         shift, and go to state 12
    PARA           shift, and go to state 13
    IR             shift, and go to state 14
    GLOBAL         shift, and go to state 15
    CLASE          shift, and go to state 16

    '='  reduce using rule 116 (parameter_list)
    ','  reduce using rule 116 (parameter_list)

    statement_list       go to state 227
    statement            go to state 19
    incdec_statement     go to state 20
    variable_access      go to state 21
    field_designator     go to state 22
    global_declaration   go to state 23
    declaration          go to state 24
    selection_statement  go to state 25
    iteration_statement  go to state 26
    goto_etiqueta        go to state 27
    jump_statement       go to state 28
    jump_loop            go to state 29
    function_definition  go to state 30
    function_call        go to state 31
    parameter_list       go to state 32
    clase_declaracion    go to state 33


State 194

   91 selection_statement: SI expression statement_list osi_statements • FIN
   94 osi_statements: osi_statements • osi_statement
   95 osi_statement: • O_SI expression statement_list
   96              | • O_SI expression statement_list SINO statement_list
   97              | • O_SI expression statement_list osi_statements

    O_SI  shift, and go to state 191
    FIN   shift, and go to state 228

    osi_statement  go to state 229


State 195

   93 osi_statements: osi_statement •

    $default  reduce using rule 93 (osi_statements)


State 196

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression
   70 field_designator: variable_access '[' expression • ']'

    EXPONENTE     shift, and go to state 110
    MAYOR_QUE     shift, and go to state 111
    MENOR_QUE     shift, and go to state 112
    MAYOR_IGUAL   shift, and go to state 113
    MENOR_IGUAL   shift, and go to state 114
    IGUAL_LOGICO  shift, and go to state 115
    DIFERENTE     shift, and go to state 116
    Y_LOGICO      shift, and go to state 117
    O_LOGICO      shift, and go to state 118
    CONCATENAR    shift, and go to state 119
    REGEX         shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '%'           shift, and go to state 125
    '^'           shift, and go to state 126
    '?'           shift, and go to state 127
    ']'           shift, and go to state 230


State 197

   98 iteration_statement: MIENTRAS expression statement_list FIN •

    $default  reduce using rule 98 (iteration_statement)


State 198

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression
   99 iteration_statement: REPETIR statement_list HASTA expression •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, PARA, IR, GLOBAL, CLASE, '=', ')', ',']

    EXPONENTE     shift, and go to state 110
    MAYOR_QUE     shift, and go to state 111
    MENOR_QUE     shift, and go to state 112
    MAYOR_IGUAL   shift, and go to state 113
    MENOR_IGUAL   shift, and go to state 114
    IGUAL_LOGICO  shift, and go to state 115
    DIFERENTE     shift, and go to state 116
    Y_LOGICO      shift, and go to state 117
    O_LOGICO      shift, and go to state 118
    CONCATENAR    shift, and go to state 119
    REGEX         shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '%'           shift, and go to state 125
    '^'           shift, and go to state 126
    '?'           shift, and go to state 127

    $default  reduce using rule 99 (iteration_statement)


State 199

  110 function_definition: FUNCION IDENTIFICADOR '(' parameter_list • ')' statement_list FIN
  119 parameter_list: parameter_list • ',' IDENTIFICADOR
  120               | parameter_list • ',' VAR_ARGS

    ')'  shift, and go to state 231
    ','  shift, and go to state 99


State 200

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
  100 iteration_statement: DESDE '(' declaration ';' • expression ';' statement ')' statement_list FIN
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 232
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 201

  115 argument_expression_list: expression ',' argument_expression_list •

    $default  reduce using rule 115 (argument_expression_list)


State 202

   86 labeled_statement_case_case: constant_expression • ':'
   87                            | constant_expression • ':' CASO labeled_statement_case_case

    ':'  shift, and go to state 233


State 203

   50 statement_list: • statement statement_list
   51               | • statement
   52               | • error statement_list
   53 statement: • declaration
   54          | • global_declaration
   55          | • selection_statement
   56          | • iteration_statement
   57          | • jump_statement
   58          | • function_definition
   59          | • function_call
   60          | • incdec_statement
   61          | • jump_loop
   62          | • goto_etiqueta
   63          | • clase_declaracion
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   71 global_declaration: • GLOBAL declaration
   72                   | • GLOBAL function_definition
   73 declaration: • variable_access '=' expression
   74            | • variable_access CONCATENAR_IGUAL expression
   75            | • variable_access MAS_IGUAL expression
   76            | • variable_access MENOS_IGUAL expression
   77            | • variable_access POR_IGUAL expression
   78            | • variable_access ENTRE_IGUAL expression
   79            | • variable_access MODULO_IGUAL expression
   80            | • parameter_list '=' argument_expression_list
   81            | • variable_access '[' expression ']' '=' expression
   85 labeled_statement_case: CASO labeled_statement_case_case • statement_list
   89 selection_statement: • SI expression statement_list FIN
   90                    | • SI expression statement_list SINO statement_list FIN
   91                    | • SI expression statement_list osi_statements FIN
   92                    | • ELEGIR expression labeled_statements FIN
   98 iteration_statement: • MIENTRAS expression statement_list FIN
   99                    | • REPETIR statement_list HASTA expression
  100                    | • DESDE '(' declaration ';' expression ';' statement ')' statement_list FIN
  101                    | • PARA IDENTIFICADOR EN RANGO '(' expression ')' statement_list FIN
  102                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ')' statement_list FIN
  103                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ',' expression ')' statement_list FIN
  104 goto_etiqueta: • IDENTIFICADOR ':'
  105 jump_statement: • RETORNO expression
  106               | • RETORNO argument_expression_list
  107               | • IR IDENTIFICADOR
  108 jump_loop: • ROMPER
  109          | • CONTINUAR
  110 function_definition: • FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  116 parameter_list: ε •  ['=', ',']
  117               | • IDENTIFICADOR
  118               | • VAR_ARGS
  119               | • parameter_list ',' IDENTIFICADOR
  120               | • parameter_list ',' VAR_ARGS
  146 clase_declaracion: • CLASE IDENTIFICADOR clase_sentencias FIN

    error          shift, and go to state 1
    IDENTIFICADOR  shift, and go to state 2
    VAR_ARGS       shift, and go to state 3
    SI             shift, and go to state 4
    MIENTRAS       shift, and go to state 5
    REPETIR        shift, and go to state 6
    ROMPER         shift, and go to state 7
    CONTINUAR      shift, and go to state 8
    FUNCION        shift, and go to state 9
    DESDE          shift, and go to state 10
    RETORNO        shift, and go to state 11
    ELEGIR         shift, and go to state 12
    PARA           shift, and go to state 13
    IR             shift, and go to state 14
    GLOBAL         shift, and go to state 15
    CLASE          shift, and go to state 16

    '='  reduce using rule 116 (parameter_list)
    ','  reduce using rule 116 (parameter_list)

    statement_list       go to state 234
    statement            go to state 19
    incdec_statement     go to state 20
    variable_access      go to state 21
    field_designator     go to state 22
    global_declaration   go to state 23
    declaration          go to state 24
    selection_statement  go to state 25
    iteration_statement  go to state 26
    goto_etiqueta        go to state 27
    jump_statement       go to state 28
    jump_loop            go to state 29
    function_definition  go to state 30
    function_call        go to state 31
    parameter_list       go to state 32
    clase_declaracion    go to state 33


State 204

   50 statement_list: • statement statement_list
   51               | • statement
   52               | • error statement_list
   53 statement: • declaration
   54          | • global_declaration
   55          | • selection_statement
   56          | • iteration_statement
   57          | • jump_statement
   58          | • function_definition
   59          | • function_call
   60          | • incdec_statement
   61          | • jump_loop
   62          | • goto_etiqueta
   63          | • clase_declaracion
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   71 global_declaration: • GLOBAL declaration
   72                   | • GLOBAL function_definition
   73 declaration: • variable_access '=' expression
   74            | • variable_access CONCATENAR_IGUAL expression
   75            | • variable_access MAS_IGUAL expression
   76            | • variable_access MENOS_IGUAL expression
   77            | • variable_access POR_IGUAL expression
   78            | • variable_access ENTRE_IGUAL expression
   79            | • variable_access MODULO_IGUAL expression
   80            | • parameter_list '=' argument_expression_list
   81            | • variable_access '[' expression ']' '=' expression
   88 labeled_statement_default: DEFECTO ':' • statement_list
   89 selection_statement: • SI expression statement_list FIN
   90                    | • SI expression statement_list SINO statement_list FIN
   91                    | • SI expression statement_list osi_statements FIN
   92                    | • ELEGIR expression labeled_statements FIN
   98 iteration_statement: • MIENTRAS expression statement_list FIN
   99                    | • REPETIR statement_list HASTA expression
  100                    | • DESDE '(' declaration ';' expression ';' statement ')' statement_list FIN
  101                    | • PARA IDENTIFICADOR EN RANGO '(' expression ')' statement_list FIN
  102                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ')' statement_list FIN
  103                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ',' expression ')' statement_list FIN
  104 goto_etiqueta: • IDENTIFICADOR ':'
  105 jump_statement: • RETORNO expression
  106               | • RETORNO argument_expression_list
  107               | • IR IDENTIFICADOR
  108 jump_loop: • ROMPER
  109          | • CONTINUAR
  110 function_definition: • FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  116 parameter_list: ε •  ['=', ',']
  117               | • IDENTIFICADOR
  118               | • VAR_ARGS
  119               | • parameter_list ',' IDENTIFICADOR
  120               | • parameter_list ',' VAR_ARGS
  146 clase_declaracion: • CLASE IDENTIFICADOR clase_sentencias FIN

    error          shift, and go to state 1
    IDENTIFICADOR  shift, and go to state 2
    VAR_ARGS       shift, and go to state 3
    SI             shift, and go to state 4
    MIENTRAS       shift, and go to state 5
    REPETIR        shift, and go to state 6
    ROMPER         shift, and go to state 7
    CONTINUAR      shift, and go to state 8
    FUNCION        shift, and go to state 9
    DESDE          shift, and go to state 10
    RETORNO        shift, and go to state 11
    ELEGIR         shift, and go to state 12
    PARA           shift, and go to state 13
    IR             shift, and go to state 14
    GLOBAL         shift, and go to state 15
    CLASE          shift, and go to state 16

    '='  reduce using rule 116 (parameter_list)
    ','  reduce using rule 116 (parameter_list)

    statement_list       go to state 235
    statement            go to state 19
    incdec_statement     go to state 20
    variable_access      go to state 21
    field_designator     go to state 22
    global_declaration   go to state 23
    declaration          go to state 24
    selection_statement  go to state 25
    iteration_statement  go to state 26
    goto_etiqueta        go to state 27
    jump_statement       go to state 28
    jump_loop            go to state 29
    function_definition  go to state 30
    function_call        go to state 31
    parameter_list       go to state 32
    clase_declaracion    go to state 33


State 205

   92 selection_statement: ELEGIR expression labeled_statements FIN •

    $default  reduce using rule 92 (selection_statement)


State 206

   82 labeled_statements: labeled_statement_case labeled_statements •

    $default  reduce using rule 82 (labeled_statements)


State 207

  101 iteration_statement: PARA IDENTIFICADOR EN RANGO • '(' expression ')' statement_list FIN
  102                    | PARA IDENTIFICADOR EN RANGO • '(' expression ',' expression ')' statement_list FIN
  103                    | PARA IDENTIFICADOR EN RANGO • '(' expression ',' expression ',' expression ')' statement_list FIN

    '('  shift, and go to state 236


State 208

  134 clase_propiedades: error statement_list •  [error, IDENTIFICADOR, FIN, FUNCION, RETORNO]
  138 clase_funciones: error statement_list •  [error, IDENTIFICADOR, FIN, FUNCION, RETORNO]
  145 clase_sentencias: error statement_list •  [FIN]

    error          reduce using rule 134 (clase_propiedades)
    error          [reduce using rule 138 (clase_funciones)]
    IDENTIFICADOR  reduce using rule 134 (clase_propiedades)
    IDENTIFICADOR  [reduce using rule 138 (clase_funciones)]
    FIN            reduce using rule 134 (clase_propiedades)
    FIN            [reduce using rule 138 (clase_funciones)]
    FIN            [reduce using rule 145 (clase_sentencias)]
    FUNCION        reduce using rule 134 (clase_propiedades)
    FUNCION        [reduce using rule 138 (clase_funciones)]
    RETORNO        reduce using rule 134 (clase_propiedades)
    RETORNO        [reduce using rule 138 (clase_funciones)]
    $default       reduce using rule 134 (clase_propiedades)

    reduce/reduce conflict on tokens error, IDENTIFICADOR, FIN, FUNCION, RETORNO:
      134 clase_propiedades: error statement_list •
      138 clase_funciones: error statement_list •
      First example: CLASE IDENTIFICADOR error statement_list • error statement_list FIN statement_list $end
      First reduce derivation
        $accept
        ↳ 0: program                                                                                                                                 $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                    statement_list
                         ↳ 63: clase_declaracion
                               ↳ 146: CLASE IDENTIFICADOR clase_sentencias                                                        FIN
                                                          ↳ 143: clase_sentencia                      clase_sentencias
                                                                 ↳ 139: clase_propiedades             ↳ 145: error statement_list
                                                                        ↳ 134: error statement_list •
      Second example: CLASE IDENTIFICADOR error statement_list • error statement_list FIN statement_list $end
      Second reduce derivation
        $accept
        ↳ 0: program                                                                                                                                 $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                    statement_list
                         ↳ 63: clase_declaracion
                               ↳ 146: CLASE IDENTIFICADOR clase_sentencias                                                        FIN
                                                          ↳ 143: clase_sentencia                      clase_sentencias
                                                                 ↳ 140: clase_funciones               ↳ 145: error statement_list
                                                                        ↳ 138: error statement_list •

    reduce/reduce conflict on token FIN:
      134 clase_propiedades: error statement_list •
      145 clase_sentencias: error statement_list •
      First example: CLASE IDENTIFICADOR error statement_list • FIN statement_list $end
      First reduce derivation
        $accept
        ↳ 0: program                                                                                                     $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                        statement_list
                         ↳ 63: clase_declaracion
                               ↳ 146: CLASE IDENTIFICADOR clase_sentencias                            FIN
                                                          ↳ 144: clase_sentencia
                                                                 ↳ 139: clase_propiedades
                                                                        ↳ 134: error statement_list •
      Second example: CLASE IDENTIFICADOR error statement_list • FIN statement_list $end
      Second reduce derivation
        $accept
        ↳ 0: program                                                                                       $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                          statement_list
                         ↳ 63: clase_declaracion
                               ↳ 146: CLASE IDENTIFICADOR clase_sentencias              FIN
                                                          ↳ 145: error statement_list •

    reduce/reduce conflict on token FIN:
      138 clase_funciones: error statement_list •
      145 clase_sentencias: error statement_list •
      First example: CLASE IDENTIFICADOR error statement_list • FIN statement_list $end
      First reduce derivation
        $accept
        ↳ 0: program                                                                                                     $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                        statement_list
                         ↳ 63: clase_declaracion
                               ↳ 146: CLASE IDENTIFICADOR clase_sentencias                            FIN
                                                          ↳ 144: clase_sentencia
                                                                 ↳ 140: clase_funciones
                                                                        ↳ 138: error statement_list •
      Second example: CLASE IDENTIFICADOR error statement_list • FIN statement_list $end
      Second reduce derivation
        $accept
        ↳ 0: program                                                                                       $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                          statement_list
                         ↳ 63: clase_declaracion
                               ↳ 146: CLASE IDENTIFICADOR clase_sentencias              FIN
                                                          ↳ 145: error statement_list •



State 209

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'
  131 clase_propiedad: IDENTIFICADOR '=' • expression

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 237
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 210

  135 clase_funcion: FUNCION IDENTIFICADOR • '(' parameter_list ')' statement_list FIN

    '('  shift, and go to state 238


State 211

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression
  114 argument_expression_list: expression •  [error, IDENTIFICADOR, FIN, FUNCION, RETORNO]
  115                         | expression • ',' argument_expression_list
  141 clase_sentencia: RETORNO expression •  [error, IDENTIFICADOR, FIN, FUNCION, RETORNO]

    EXPONENTE     shift, and go to state 110
    MAYOR_QUE     shift, and go to state 111
    MENOR_QUE     shift, and go to state 112
    MAYOR_IGUAL   shift, and go to state 113
    MENOR_IGUAL   shift, and go to state 114
    IGUAL_LOGICO  shift, and go to state 115
    DIFERENTE     shift, and go to state 116
    Y_LOGICO      shift, and go to state 117
    O_LOGICO      shift, and go to state 118
    CONCATENAR    shift, and go to state 119
    REGEX         shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '%'           shift, and go to state 125
    '^'           shift, and go to state 126
    '?'           shift, and go to state 127
    ','           shift, and go to state 134

    error          reduce using rule 114 (argument_expression_list)
    error          [reduce using rule 141 (clase_sentencia)]
    IDENTIFICADOR  reduce using rule 114 (argument_expression_list)
    IDENTIFICADOR  [reduce using rule 141 (clase_sentencia)]
    FIN            reduce using rule 114 (argument_expression_list)
    FIN            [reduce using rule 141 (clase_sentencia)]
    FUNCION        reduce using rule 114 (argument_expression_list)
    FUNCION        [reduce using rule 141 (clase_sentencia)]
    RETORNO        reduce using rule 114 (argument_expression_list)
    RETORNO        [reduce using rule 141 (clase_sentencia)]
    $default       reduce using rule 114 (argument_expression_list)

    reduce/reduce conflict on tokens error, IDENTIFICADOR, FIN, FUNCION, RETORNO:
      114 argument_expression_list: expression •
      141 clase_sentencia: RETORNO expression •
      First example: CLASE IDENTIFICADOR RETORNO expression • error statement_list FIN statement_list $end
      First reduce derivation
        $accept
        ↳ 0: program                                                                                                                                    $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                       statement_list
                         ↳ 63: clase_declaracion
                               ↳ 146: CLASE IDENTIFICADOR clase_sentencias                                                           FIN
                                                          ↳ 143: clase_sentencia                         clase_sentencias
                                                                 ↳ 142: RETORNO argument_expression_list ↳ 145: error statement_list
                                                                                ↳ 114: expression •
      Second example: CLASE IDENTIFICADOR RETORNO expression • error statement_list FIN statement_list $end
      Second reduce derivation
        $accept
        ↳ 0: program                                                                                                                        $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                           statement_list
                         ↳ 63: clase_declaracion
                               ↳ 146: CLASE IDENTIFICADOR clase_sentencias                                               FIN
                                                          ↳ 143: clase_sentencia             clase_sentencias
                                                                 ↳ 141: RETORNO expression • ↳ 145: error statement_list



State 212

  142 clase_sentencia: RETORNO argument_expression_list •

    $default  reduce using rule 142 (clase_sentencia)


State 213

   50 statement_list: • statement statement_list
   51               | • statement
   52               | • error statement_list
   53 statement: • declaration
   54          | • global_declaration
   55          | • selection_statement
   56          | • iteration_statement
   57          | • jump_statement
   58          | • function_definition
   59          | • function_call
   60          | • incdec_statement
   61          | • jump_loop
   62          | • goto_etiqueta
   63          | • clase_declaracion
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   71 global_declaration: • GLOBAL declaration
   72                   | • GLOBAL function_definition
   73 declaration: • variable_access '=' expression
   74            | • variable_access CONCATENAR_IGUAL expression
   75            | • variable_access MAS_IGUAL expression
   76            | • variable_access MENOS_IGUAL expression
   77            | • variable_access POR_IGUAL expression
   78            | • variable_access ENTRE_IGUAL expression
   79            | • variable_access MODULO_IGUAL expression
   80            | • parameter_list '=' argument_expression_list
   81            | • variable_access '[' expression ']' '=' expression
   89 selection_statement: • SI expression statement_list FIN
   90                    | • SI expression statement_list SINO statement_list FIN
   91                    | • SI expression statement_list osi_statements FIN
   92                    | • ELEGIR expression labeled_statements FIN
   98 iteration_statement: • MIENTRAS expression statement_list FIN
   99                    | • REPETIR statement_list HASTA expression
  100                    | • DESDE '(' declaration ';' expression ';' statement ')' statement_list FIN
  101                    | • PARA IDENTIFICADOR EN RANGO '(' expression ')' statement_list FIN
  102                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ')' statement_list FIN
  103                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ',' expression ')' statement_list FIN
  104 goto_etiqueta: • IDENTIFICADOR ':'
  105 jump_statement: • RETORNO expression
  106               | • RETORNO argument_expression_list
  107               | • IR IDENTIFICADOR
  108 jump_loop: • ROMPER
  109          | • CONTINUAR
  110 function_definition: • FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  116 parameter_list: ε •  ['=', ',']
  117               | • IDENTIFICADOR
  118               | • VAR_ARGS
  119               | • parameter_list ',' IDENTIFICADOR
  120               | • parameter_list ',' VAR_ARGS
  134 clase_propiedades: error • statement_list
  146 clase_declaracion: • CLASE IDENTIFICADOR clase_sentencias FIN

    error          shift, and go to state 1
    IDENTIFICADOR  shift, and go to state 2
    VAR_ARGS       shift, and go to state 3
    SI             shift, and go to state 4
    MIENTRAS       shift, and go to state 5
    REPETIR        shift, and go to state 6
    ROMPER         shift, and go to state 7
    CONTINUAR      shift, and go to state 8
    FUNCION        shift, and go to state 9
    DESDE          shift, and go to state 10
    RETORNO        shift, and go to state 11
    ELEGIR         shift, and go to state 12
    PARA           shift, and go to state 13
    IR             shift, and go to state 14
    GLOBAL         shift, and go to state 15
    CLASE          shift, and go to state 16

    '='  reduce using rule 116 (parameter_list)
    ','  reduce using rule 116 (parameter_list)

    statement_list       go to state 239
    statement            go to state 19
    incdec_statement     go to state 20
    variable_access      go to state 21
    field_designator     go to state 22
    global_declaration   go to state 23
    declaration          go to state 24
    selection_statement  go to state 25
    iteration_statement  go to state 26
    goto_etiqueta        go to state 27
    jump_statement       go to state 28
    jump_loop            go to state 29
    function_definition  go to state 30
    function_call        go to state 31
    parameter_list       go to state 32
    clase_declaracion    go to state 33


State 214

  132 clase_propiedades: clase_propiedad clase_propiedades •

    $default  reduce using rule 132 (clase_propiedades)


State 215

   50 statement_list: • statement statement_list
   51               | • statement
   52               | • error statement_list
   53 statement: • declaration
   54          | • global_declaration
   55          | • selection_statement
   56          | • iteration_statement
   57          | • jump_statement
   58          | • function_definition
   59          | • function_call
   60          | • incdec_statement
   61          | • jump_loop
   62          | • goto_etiqueta
   63          | • clase_declaracion
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   71 global_declaration: • GLOBAL declaration
   72                   | • GLOBAL function_definition
   73 declaration: • variable_access '=' expression
   74            | • variable_access CONCATENAR_IGUAL expression
   75            | • variable_access MAS_IGUAL expression
   76            | • variable_access MENOS_IGUAL expression
   77            | • variable_access POR_IGUAL expression
   78            | • variable_access ENTRE_IGUAL expression
   79            | • variable_access MODULO_IGUAL expression
   80            | • parameter_list '=' argument_expression_list
   81            | • variable_access '[' expression ']' '=' expression
   89 selection_statement: • SI expression statement_list FIN
   90                    | • SI expression statement_list SINO statement_list FIN
   91                    | • SI expression statement_list osi_statements FIN
   92                    | • ELEGIR expression labeled_statements FIN
   98 iteration_statement: • MIENTRAS expression statement_list FIN
   99                    | • REPETIR statement_list HASTA expression
  100                    | • DESDE '(' declaration ';' expression ';' statement ')' statement_list FIN
  101                    | • PARA IDENTIFICADOR EN RANGO '(' expression ')' statement_list FIN
  102                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ')' statement_list FIN
  103                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ',' expression ')' statement_list FIN
  104 goto_etiqueta: • IDENTIFICADOR ':'
  105 jump_statement: • RETORNO expression
  106               | • RETORNO argument_expression_list
  107               | • IR IDENTIFICADOR
  108 jump_loop: • ROMPER
  109          | • CONTINUAR
  110 function_definition: • FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  116 parameter_list: ε •  ['=', ',']
  117               | • IDENTIFICADOR
  118               | • VAR_ARGS
  119               | • parameter_list ',' IDENTIFICADOR
  120               | • parameter_list ',' VAR_ARGS
  138 clase_funciones: error • statement_list
  146 clase_declaracion: • CLASE IDENTIFICADOR clase_sentencias FIN

    error          shift, and go to state 1
    IDENTIFICADOR  shift, and go to state 2
    VAR_ARGS       shift, and go to state 3
    SI             shift, and go to state 4
    MIENTRAS       shift, and go to state 5
    REPETIR        shift, and go to state 6
    ROMPER         shift, and go to state 7
    CONTINUAR      shift, and go to state 8
    FUNCION        shift, and go to state 9
    DESDE          shift, and go to state 10
    RETORNO        shift, and go to state 11
    ELEGIR         shift, and go to state 12
    PARA           shift, and go to state 13
    IR             shift, and go to state 14
    GLOBAL         shift, and go to state 15
    CLASE          shift, and go to state 16

    '='  reduce using rule 116 (parameter_list)
    ','  reduce using rule 116 (parameter_list)

    statement_list       go to state 240
    statement            go to state 19
    incdec_statement     go to state 20
    variable_access      go to state 21
    field_designator     go to state 22
    global_declaration   go to state 23
    declaration          go to state 24
    selection_statement  go to state 25
    iteration_statement  go to state 26
    goto_etiqueta        go to state 27
    jump_statement       go to state 28
    jump_loop            go to state 29
    function_definition  go to state 30
    function_call        go to state 31
    parameter_list       go to state 32
    clase_declaracion    go to state 33


State 216

  136 clase_funciones: clase_funcion clase_funciones •

    $default  reduce using rule 136 (clase_funciones)


State 217

  143 clase_sentencias: clase_sentencia clase_sentencias •

    $default  reduce using rule 143 (clase_sentencias)


State 218

  146 clase_declaracion: CLASE IDENTIFICADOR clase_sentencias FIN •

    $default  reduce using rule 146 (clase_declaracion)


State 219

  112 function_call: variable_access '(' argument_expression_list ')' •

    $default  reduce using rule 112 (function_call)


State 220

   70 field_designator: variable_access '[' expression ']' •  [ATRIBUTO, INCREMENTO, DECREMENTO, CONCATENAR_IGUAL, MAS_IGUAL, MENOS_IGUAL, POR_IGUAL, ENTRE_IGUAL, MODULO_IGUAL, '=', '(', '[']
   81 declaration: variable_access '[' expression ']' • '=' expression

    '='  shift, and go to state 241

    '='       [reduce using rule 70 (field_designator)]
    $default  reduce using rule 70 (field_designator)

    shift/reduce conflict on token '=':
       70 field_designator: variable_access '[' expression ']' •
       81 declaration: variable_access '[' expression ']' • '=' expression
      First example: variable_access '[' expression ']' • '=' expression statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                    $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                       statement_list
                         ↳ 53: declaration
                               ↳ 81: variable_access '[' expression ']' • '=' expression
      Second example: variable_access '[' expression ']' • '=' expression statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                   statement_list
                         ↳ 53: declaration
                               ↳ 73: variable_access                                  '=' expression
                                     ↳ 67: field_designator
                                           ↳ 70: variable_access '[' expression ']' •



State 221

   50 statement_list: • statement statement_list
   51               | • statement
   52               | • error statement_list
   53 statement: • declaration
   54          | • global_declaration
   55          | • selection_statement
   56          | • iteration_statement
   57          | • jump_statement
   58          | • function_definition
   59          | • function_call
   60          | • incdec_statement
   61          | • jump_loop
   62          | • goto_etiqueta
   63          | • clase_declaracion
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   71 global_declaration: • GLOBAL declaration
   72                   | • GLOBAL function_definition
   73 declaration: • variable_access '=' expression
   74            | • variable_access CONCATENAR_IGUAL expression
   75            | • variable_access MAS_IGUAL expression
   76            | • variable_access MENOS_IGUAL expression
   77            | • variable_access POR_IGUAL expression
   78            | • variable_access ENTRE_IGUAL expression
   79            | • variable_access MODULO_IGUAL expression
   80            | • parameter_list '=' argument_expression_list
   81            | • variable_access '[' expression ']' '=' expression
   89 selection_statement: • SI expression statement_list FIN
   90                    | • SI expression statement_list SINO statement_list FIN
   91                    | • SI expression statement_list osi_statements FIN
   92                    | • ELEGIR expression labeled_statements FIN
   98 iteration_statement: • MIENTRAS expression statement_list FIN
   99                    | • REPETIR statement_list HASTA expression
  100                    | • DESDE '(' declaration ';' expression ';' statement ')' statement_list FIN
  101                    | • PARA IDENTIFICADOR EN RANGO '(' expression ')' statement_list FIN
  102                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ')' statement_list FIN
  103                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ',' expression ')' statement_list FIN
  104 goto_etiqueta: • IDENTIFICADOR ':'
  105 jump_statement: • RETORNO expression
  106               | • RETORNO argument_expression_list
  107               | • IR IDENTIFICADOR
  108 jump_loop: • ROMPER
  109          | • CONTINUAR
  110 function_definition: • FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN
  111 function_anonymous: FUNCION '(' parameter_list ')' • statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  116 parameter_list: ε •  ['=', ',']
  117               | • IDENTIFICADOR
  118               | • VAR_ARGS
  119               | • parameter_list ',' IDENTIFICADOR
  120               | • parameter_list ',' VAR_ARGS
  146 clase_declaracion: • CLASE IDENTIFICADOR clase_sentencias FIN

    error          shift, and go to state 1
    IDENTIFICADOR  shift, and go to state 2
    VAR_ARGS       shift, and go to state 3
    SI             shift, and go to state 4
    MIENTRAS       shift, and go to state 5
    REPETIR        shift, and go to state 6
    ROMPER         shift, and go to state 7
    CONTINUAR      shift, and go to state 8
    FUNCION        shift, and go to state 9
    DESDE          shift, and go to state 10
    RETORNO        shift, and go to state 11
    ELEGIR         shift, and go to state 12
    PARA           shift, and go to state 13
    IR             shift, and go to state 14
    GLOBAL         shift, and go to state 15
    CLASE          shift, and go to state 16

    '='  reduce using rule 116 (parameter_list)
    ','  reduce using rule 116 (parameter_list)

    statement_list       go to state 242
    statement            go to state 19
    incdec_statement     go to state 20
    variable_access      go to state 21
    field_designator     go to state 22
    global_declaration   go to state 23
    declaration          go to state 24
    selection_statement  go to state 25
    iteration_statement  go to state 26
    goto_etiqueta        go to state 27
    jump_statement       go to state 28
    jump_loop            go to state 29
    function_definition  go to state 30
    function_call        go to state 31
    parameter_list       go to state 32
    clase_declaracion    go to state 33


State 222

  124 list_items: expression ',' list_items •

    $default  reduce using rule 124 (list_items)


State 223

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression
  130 dict_item: expression ':' expression •  [',', '}']

    EXPONENTE     shift, and go to state 110
    MAYOR_QUE     shift, and go to state 111
    MENOR_QUE     shift, and go to state 112
    MAYOR_IGUAL   shift, and go to state 113
    MENOR_IGUAL   shift, and go to state 114
    IGUAL_LOGICO  shift, and go to state 115
    DIFERENTE     shift, and go to state 116
    Y_LOGICO      shift, and go to state 117
    O_LOGICO      shift, and go to state 118
    CONCATENAR    shift, and go to state 119
    REGEX         shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '%'           shift, and go to state 125
    '^'           shift, and go to state 126
    '?'           shift, and go to state 127

    $default  reduce using rule 130 (dict_item)


State 224

  128 dict_items: dict_items ',' dict_item •

    $default  reduce using rule 128 (dict_items)


State 225

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   26                   | expression '?' expression ':' • expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 243
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 226

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression
   50 statement_list: • statement statement_list
   51               | • statement
   52               | • error statement_list
   53 statement: • declaration
   54          | • global_declaration
   55          | • selection_statement
   56          | • iteration_statement
   57          | • jump_statement
   58          | • function_definition
   59          | • function_call
   60          | • incdec_statement
   61          | • jump_loop
   62          | • goto_etiqueta
   63          | • clase_declaracion
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   71 global_declaration: • GLOBAL declaration
   72                   | • GLOBAL function_definition
   73 declaration: • variable_access '=' expression
   74            | • variable_access CONCATENAR_IGUAL expression
   75            | • variable_access MAS_IGUAL expression
   76            | • variable_access MENOS_IGUAL expression
   77            | • variable_access POR_IGUAL expression
   78            | • variable_access ENTRE_IGUAL expression
   79            | • variable_access MODULO_IGUAL expression
   80            | • parameter_list '=' argument_expression_list
   81            | • variable_access '[' expression ']' '=' expression
   89 selection_statement: • SI expression statement_list FIN
   90                    | • SI expression statement_list SINO statement_list FIN
   91                    | • SI expression statement_list osi_statements FIN
   92                    | • ELEGIR expression labeled_statements FIN
   95 osi_statement: O_SI expression • statement_list
   96              | O_SI expression • statement_list SINO statement_list
   97              | O_SI expression • statement_list osi_statements
   98 iteration_statement: • MIENTRAS expression statement_list FIN
   99                    | • REPETIR statement_list HASTA expression
  100                    | • DESDE '(' declaration ';' expression ';' statement ')' statement_list FIN
  101                    | • PARA IDENTIFICADOR EN RANGO '(' expression ')' statement_list FIN
  102                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ')' statement_list FIN
  103                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ',' expression ')' statement_list FIN
  104 goto_etiqueta: • IDENTIFICADOR ':'
  105 jump_statement: • RETORNO expression
  106               | • RETORNO argument_expression_list
  107               | • IR IDENTIFICADOR
  108 jump_loop: • ROMPER
  109          | • CONTINUAR
  110 function_definition: • FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  116 parameter_list: ε •  ['=', ',']
  117               | • IDENTIFICADOR
  118               | • VAR_ARGS
  119               | • parameter_list ',' IDENTIFICADOR
  120               | • parameter_list ',' VAR_ARGS
  146 clase_declaracion: • CLASE IDENTIFICADOR clase_sentencias FIN

    error          shift, and go to state 1
    IDENTIFICADOR  shift, and go to state 2
    VAR_ARGS       shift, and go to state 3
    SI             shift, and go to state 4
    MIENTRAS       shift, and go to state 5
    REPETIR        shift, and go to state 6
    ROMPER         shift, and go to state 7
    CONTINUAR      shift, and go to state 8
    FUNCION        shift, and go to state 9
    DESDE          shift, and go to state 10
    RETORNO        shift, and go to state 11
    ELEGIR         shift, and go to state 12
    EXPONENTE      shift, and go to state 110
    PARA           shift, and go to state 13
    IR             shift, and go to state 14
    MAYOR_QUE      shift, and go to state 111
    MENOR_QUE      shift, and go to state 112
    MAYOR_IGUAL    shift, and go to state 113
    MENOR_IGUAL    shift, and go to state 114
    IGUAL_LOGICO   shift, and go to state 115
    DIFERENTE      shift, and go to state 116
    Y_LOGICO       shift, and go to state 117
    O_LOGICO       shift, and go to state 118
    CONCATENAR     shift, and go to state 119
    REGEX          shift, and go to state 120
    GLOBAL         shift, and go to state 15
    CLASE          shift, and go to state 16
    '+'            shift, and go to state 121
    '-'            shift, and go to state 122
    '*'            shift, and go to state 123
    '/'            shift, and go to state 124
    '%'            shift, and go to state 125
    '^'            shift, and go to state 126
    '?'            shift, and go to state 127

    '='  reduce using rule 116 (parameter_list)
    ','  reduce using rule 116 (parameter_list)

    statement_list       go to state 244
    statement            go to state 19
    incdec_statement     go to state 20
    variable_access      go to state 21
    field_designator     go to state 22
    global_declaration   go to state 23
    declaration          go to state 24
    selection_statement  go to state 25
    iteration_statement  go to state 26
    goto_etiqueta        go to state 27
    jump_statement       go to state 28
    jump_loop            go to state 29
    function_definition  go to state 30
    function_call        go to state 31
    parameter_list       go to state 32
    clase_declaracion    go to state 33


State 227

   90 selection_statement: SI expression statement_list SINO statement_list • FIN

    FIN  shift, and go to state 245


State 228

   91 selection_statement: SI expression statement_list osi_statements FIN •

    $default  reduce using rule 91 (selection_statement)


State 229

   94 osi_statements: osi_statements osi_statement •

    $default  reduce using rule 94 (osi_statements)


State 230

   70 field_designator: variable_access '[' expression ']' •

    $default  reduce using rule 70 (field_designator)


State 231

   50 statement_list: • statement statement_list
   51               | • statement
   52               | • error statement_list
   53 statement: • declaration
   54          | • global_declaration
   55          | • selection_statement
   56          | • iteration_statement
   57          | • jump_statement
   58          | • function_definition
   59          | • function_call
   60          | • incdec_statement
   61          | • jump_loop
   62          | • goto_etiqueta
   63          | • clase_declaracion
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   71 global_declaration: • GLOBAL declaration
   72                   | • GLOBAL function_definition
   73 declaration: • variable_access '=' expression
   74            | • variable_access CONCATENAR_IGUAL expression
   75            | • variable_access MAS_IGUAL expression
   76            | • variable_access MENOS_IGUAL expression
   77            | • variable_access POR_IGUAL expression
   78            | • variable_access ENTRE_IGUAL expression
   79            | • variable_access MODULO_IGUAL expression
   80            | • parameter_list '=' argument_expression_list
   81            | • variable_access '[' expression ']' '=' expression
   89 selection_statement: • SI expression statement_list FIN
   90                    | • SI expression statement_list SINO statement_list FIN
   91                    | • SI expression statement_list osi_statements FIN
   92                    | • ELEGIR expression labeled_statements FIN
   98 iteration_statement: • MIENTRAS expression statement_list FIN
   99                    | • REPETIR statement_list HASTA expression
  100                    | • DESDE '(' declaration ';' expression ';' statement ')' statement_list FIN
  101                    | • PARA IDENTIFICADOR EN RANGO '(' expression ')' statement_list FIN
  102                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ')' statement_list FIN
  103                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ',' expression ')' statement_list FIN
  104 goto_etiqueta: • IDENTIFICADOR ':'
  105 jump_statement: • RETORNO expression
  106               | • RETORNO argument_expression_list
  107               | • IR IDENTIFICADOR
  108 jump_loop: • ROMPER
  109          | • CONTINUAR
  110 function_definition: • FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN
  110                    | FUNCION IDENTIFICADOR '(' parameter_list ')' • statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  116 parameter_list: ε •  ['=', ',']
  117               | • IDENTIFICADOR
  118               | • VAR_ARGS
  119               | • parameter_list ',' IDENTIFICADOR
  120               | • parameter_list ',' VAR_ARGS
  146 clase_declaracion: • CLASE IDENTIFICADOR clase_sentencias FIN

    error          shift, and go to state 1
    IDENTIFICADOR  shift, and go to state 2
    VAR_ARGS       shift, and go to state 3
    SI             shift, and go to state 4
    MIENTRAS       shift, and go to state 5
    REPETIR        shift, and go to state 6
    ROMPER         shift, and go to state 7
    CONTINUAR      shift, and go to state 8
    FUNCION        shift, and go to state 9
    DESDE          shift, and go to state 10
    RETORNO        shift, and go to state 11
    ELEGIR         shift, and go to state 12
    PARA           shift, and go to state 13
    IR             shift, and go to state 14
    GLOBAL         shift, and go to state 15
    CLASE          shift, and go to state 16

    '='  reduce using rule 116 (parameter_list)
    ','  reduce using rule 116 (parameter_list)

    statement_list       go to state 246
    statement            go to state 19
    incdec_statement     go to state 20
    variable_access      go to state 21
    field_designator     go to state 22
    global_declaration   go to state 23
    declaration          go to state 24
    selection_statement  go to state 25
    iteration_statement  go to state 26
    goto_etiqueta        go to state 27
    jump_statement       go to state 28
    jump_loop            go to state 29
    function_definition  go to state 30
    function_call        go to state 31
    parameter_list       go to state 32
    clase_declaracion    go to state 33


State 232

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression
  100 iteration_statement: DESDE '(' declaration ';' expression • ';' statement ')' statement_list FIN

    EXPONENTE     shift, and go to state 110
    MAYOR_QUE     shift, and go to state 111
    MENOR_QUE     shift, and go to state 112
    MAYOR_IGUAL   shift, and go to state 113
    MENOR_IGUAL   shift, and go to state 114
    IGUAL_LOGICO  shift, and go to state 115
    DIFERENTE     shift, and go to state 116
    Y_LOGICO      shift, and go to state 117
    O_LOGICO      shift, and go to state 118
    CONCATENAR    shift, and go to state 119
    REGEX         shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '%'           shift, and go to state 125
    '^'           shift, and go to state 126
    '?'           shift, and go to state 127
    ';'           shift, and go to state 247


State 233

   86 labeled_statement_case_case: constant_expression ':' •  [error, IDENTIFICADOR, VAR_ARGS, SI, MIENTRAS, REPETIR, ROMPER, CONTINUAR, FUNCION, DESDE, RETORNO, ELEGIR, PARA, IR, GLOBAL, CLASE, '=', ',']
   87                            | constant_expression ':' • CASO labeled_statement_case_case

    CASO  shift, and go to state 248

    $default  reduce using rule 86 (labeled_statement_case_case)


State 234

   85 labeled_statement_case: CASO labeled_statement_case_case statement_list •

    $default  reduce using rule 85 (labeled_statement_case)


State 235

   88 labeled_statement_default: DEFECTO ':' statement_list •

    $default  reduce using rule 88 (labeled_statement_default)


State 236

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
  101 iteration_statement: PARA IDENTIFICADOR EN RANGO '(' • expression ')' statement_list FIN
  102                    | PARA IDENTIFICADOR EN RANGO '(' • expression ',' expression ')' statement_list FIN
  103                    | PARA IDENTIFICADOR EN RANGO '(' • expression ',' expression ',' expression ')' statement_list FIN
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 249
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 237

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression
  131 clase_propiedad: IDENTIFICADOR '=' expression •  [error, IDENTIFICADOR, FIN, FUNCION, RETORNO]

    EXPONENTE     shift, and go to state 110
    MAYOR_QUE     shift, and go to state 111
    MENOR_QUE     shift, and go to state 112
    MAYOR_IGUAL   shift, and go to state 113
    MENOR_IGUAL   shift, and go to state 114
    IGUAL_LOGICO  shift, and go to state 115
    DIFERENTE     shift, and go to state 116
    Y_LOGICO      shift, and go to state 117
    O_LOGICO      shift, and go to state 118
    CONCATENAR    shift, and go to state 119
    REGEX         shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '%'           shift, and go to state 125
    '^'           shift, and go to state 126
    '?'           shift, and go to state 127

    $default  reduce using rule 131 (clase_propiedad)


State 238

  116 parameter_list: ε •  [')', ',']
  117               | • IDENTIFICADOR
  118               | • VAR_ARGS
  119               | • parameter_list ',' IDENTIFICADOR
  120               | • parameter_list ',' VAR_ARGS
  135 clase_funcion: FUNCION IDENTIFICADOR '(' • parameter_list ')' statement_list FIN

    IDENTIFICADOR  shift, and go to state 165
    VAR_ARGS       shift, and go to state 3

    $default  reduce using rule 116 (parameter_list)

    parameter_list  go to state 250


State 239

  134 clase_propiedades: error statement_list •

    $default  reduce using rule 134 (clase_propiedades)


State 240

  138 clase_funciones: error statement_list •

    $default  reduce using rule 138 (clase_funciones)


State 241

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   81 declaration: variable_access '[' expression ']' '=' • expression
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 251
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 242

  111 function_anonymous: FUNCION '(' parameter_list ')' statement_list • FIN

    FIN  shift, and go to state 252


State 243

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   26                   | expression '?' expression ':' expression •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, EXPONENTE, PARA, IR, MAYOR_QUE, MENOR_QUE, MAYOR_IGUAL, MENOR_IGUAL, IGUAL_LOGICO, DIFERENTE, Y_LOGICO, O_LOGICO, CONCATENAR, REGEX, GLOBAL, CLASE, '=', '+', '-', '*', '/', '%', '^', '?', ':', ')', ']', ';', ',', '}']
   27 concat_expression: expression • CONCATENAR expression

    EXPONENTE     shift, and go to state 110
    MAYOR_QUE     shift, and go to state 111
    MENOR_QUE     shift, and go to state 112
    MAYOR_IGUAL   shift, and go to state 113
    MENOR_IGUAL   shift, and go to state 114
    IGUAL_LOGICO  shift, and go to state 115
    DIFERENTE     shift, and go to state 116
    Y_LOGICO      shift, and go to state 117
    O_LOGICO      shift, and go to state 118
    CONCATENAR    shift, and go to state 119
    REGEX         shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '%'           shift, and go to state 125
    '^'           shift, and go to state 126
    '?'           shift, and go to state 127

    EXPONENTE     [reduce using rule 26 (ternary_expression)]
    MAYOR_QUE     [reduce using rule 26 (ternary_expression)]
    MENOR_QUE     [reduce using rule 26 (ternary_expression)]
    MAYOR_IGUAL   [reduce using rule 26 (ternary_expression)]
    MENOR_IGUAL   [reduce using rule 26 (ternary_expression)]
    IGUAL_LOGICO  [reduce using rule 26 (ternary_expression)]
    DIFERENTE     [reduce using rule 26 (ternary_expression)]
    Y_LOGICO      [reduce using rule 26 (ternary_expression)]
    O_LOGICO      [reduce using rule 26 (ternary_expression)]
    CONCATENAR    [reduce using rule 26 (ternary_expression)]
    REGEX         [reduce using rule 26 (ternary_expression)]
    '+'           [reduce using rule 26 (ternary_expression)]
    '-'           [reduce using rule 26 (ternary_expression)]
    '*'           [reduce using rule 26 (ternary_expression)]
    '/'           [reduce using rule 26 (ternary_expression)]
    '%'           [reduce using rule 26 (ternary_expression)]
    '^'           [reduce using rule 26 (ternary_expression)]
    '?'           [reduce using rule 26 (ternary_expression)]
    $default      reduce using rule 26 (ternary_expression)

    shift/reduce conflict on token '^':
       26 ternary_expression: expression '?' expression ':' expression •
        9 multiplicative_expression: expression • '^' expression
      First example: SI expression '?' expression ':' expression • '^' expression '^' expression statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                           $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                              statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                           statement_list FIN
                                        ↳ 32: multiplicative_expression
                                              ↳ 9: ternary_expression                                                         '^' expression
                                                   ↳ 26: expression '?' expression ':' expression
                                                                                       ↳ 32: multiplicative_expression
                                                                                             ↳ 9: expression • '^' expression
      Second example: SI expression '?' expression ':' expression • '^' expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                       $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                          statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                       statement_list FIN
                                        ↳ 32: multiplicative_expression
                                              ↳ 9: expression                                             '^' expression
                                                   ↳ 45: ternary_expression
                                                         ↳ 26: expression '?' expression ':' expression •

    shift/reduce conflict on token EXPONENTE:
       26 ternary_expression: expression '?' expression ':' expression •
       10 multiplicative_expression: expression • EXPONENTE expression
      First example: SI expression '?' expression ':' expression • EXPONENTE expression EXPONENTE expression statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                         $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                            statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                                         statement_list FIN
                                        ↳ 32: multiplicative_expression
                                              ↳ 10: ternary_expression                                                                EXPONENTE expression
                                                    ↳ 26: expression '?' expression ':' expression
                                                                                        ↳ 32: multiplicative_expression
                                                                                              ↳ 10: expression • EXPONENTE expression
      Second example: SI expression '?' expression ':' expression • EXPONENTE expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                              $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                 statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                              statement_list FIN
                                        ↳ 32: multiplicative_expression
                                              ↳ 10: expression                                             EXPONENTE expression
                                                    ↳ 45: ternary_expression
                                                          ↳ 26: expression '?' expression ':' expression •

    shift/reduce conflict on token '*':
       26 ternary_expression: expression '?' expression ':' expression •
       11 multiplicative_expression: expression • '*' expression
      First example: SI expression '?' expression ':' expression • '*' expression '*' expression statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                             $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                             statement_list FIN
                                        ↳ 32: multiplicative_expression
                                              ↳ 11: ternary_expression                                                          '*' expression
                                                    ↳ 26: expression '?' expression ':' expression
                                                                                        ↳ 32: multiplicative_expression
                                                                                              ↳ 11: expression • '*' expression
      Second example: SI expression '?' expression ':' expression • '*' expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                        $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                           statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                        statement_list FIN
                                        ↳ 32: multiplicative_expression
                                              ↳ 11: expression                                             '*' expression
                                                    ↳ 45: ternary_expression
                                                          ↳ 26: expression '?' expression ':' expression •

    shift/reduce conflict on token '/':
       26 ternary_expression: expression '?' expression ':' expression •
       12 multiplicative_expression: expression • '/' expression
      First example: SI expression '?' expression ':' expression • '/' expression '/' expression statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                             $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                             statement_list FIN
                                        ↳ 32: multiplicative_expression
                                              ↳ 12: ternary_expression                                                          '/' expression
                                                    ↳ 26: expression '?' expression ':' expression
                                                                                        ↳ 32: multiplicative_expression
                                                                                              ↳ 12: expression • '/' expression
      Second example: SI expression '?' expression ':' expression • '/' expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                        $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                           statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                        statement_list FIN
                                        ↳ 32: multiplicative_expression
                                              ↳ 12: expression                                             '/' expression
                                                    ↳ 45: ternary_expression
                                                          ↳ 26: expression '?' expression ':' expression •

    shift/reduce conflict on token '%':
       26 ternary_expression: expression '?' expression ':' expression •
       13 multiplicative_expression: expression • '%' expression
      First example: SI expression '?' expression ':' expression • '%' expression '%' expression statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                             $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                             statement_list FIN
                                        ↳ 32: multiplicative_expression
                                              ↳ 13: ternary_expression                                                          '%' expression
                                                    ↳ 26: expression '?' expression ':' expression
                                                                                        ↳ 32: multiplicative_expression
                                                                                              ↳ 13: expression • '%' expression
      Second example: SI expression '?' expression ':' expression • '%' expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                        $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                           statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                        statement_list FIN
                                        ↳ 32: multiplicative_expression
                                              ↳ 13: expression                                             '%' expression
                                                    ↳ 45: ternary_expression
                                                          ↳ 26: expression '?' expression ':' expression •

    shift/reduce conflict on token '-':
       26 ternary_expression: expression '?' expression ':' expression •
       14 additive_expression: expression • '-' expression
      First example: SI expression '?' expression ':' expression • '-' expression '-' expression statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                             $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                             statement_list FIN
                                        ↳ 33: additive_expression
                                              ↳ 14: ternary_expression                                                          '-' expression
                                                    ↳ 26: expression '?' expression ':' expression
                                                                                        ↳ 33: additive_expression
                                                                                              ↳ 14: expression • '-' expression
      Second example: SI expression '?' expression ':' expression • '-' expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                        $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                           statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                        statement_list FIN
                                        ↳ 33: additive_expression
                                              ↳ 14: expression                                             '-' expression
                                                    ↳ 45: ternary_expression
                                                          ↳ 26: expression '?' expression ':' expression •

    shift/reduce conflict on token '+':
       26 ternary_expression: expression '?' expression ':' expression •
       15 additive_expression: expression • '+' expression
      First example: SI expression '?' expression ':' expression • '+' expression '+' expression statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                             $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                             statement_list FIN
                                        ↳ 33: additive_expression
                                              ↳ 15: ternary_expression                                                          '+' expression
                                                    ↳ 26: expression '?' expression ':' expression
                                                                                        ↳ 33: additive_expression
                                                                                              ↳ 15: expression • '+' expression
      Second example: SI expression '?' expression ':' expression • '+' expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                        $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                           statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                        statement_list FIN
                                        ↳ 33: additive_expression
                                              ↳ 15: expression                                             '+' expression
                                                    ↳ 45: ternary_expression
                                                          ↳ 26: expression '?' expression ':' expression •

    shift/reduce conflict on token MAYOR_QUE:
       26 ternary_expression: expression '?' expression ':' expression •
       16 relational_expression: expression • MAYOR_QUE expression
      First example: SI expression '?' expression ':' expression • MAYOR_QUE expression MAYOR_QUE expression statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                         $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                            statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                                         statement_list FIN
                                        ↳ 34: relational_expression
                                              ↳ 16: ternary_expression                                                                MAYOR_QUE expression
                                                    ↳ 26: expression '?' expression ':' expression
                                                                                        ↳ 34: relational_expression
                                                                                              ↳ 16: expression • MAYOR_QUE expression
      Second example: SI expression '?' expression ':' expression • MAYOR_QUE expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                              $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                 statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                              statement_list FIN
                                        ↳ 34: relational_expression
                                              ↳ 16: expression                                             MAYOR_QUE expression
                                                    ↳ 45: ternary_expression
                                                          ↳ 26: expression '?' expression ':' expression •

    shift/reduce conflict on token MENOR_QUE:
       26 ternary_expression: expression '?' expression ':' expression •
       17 relational_expression: expression • MENOR_QUE expression
      First example: SI expression '?' expression ':' expression • MENOR_QUE expression MENOR_QUE expression statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                         $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                            statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                                         statement_list FIN
                                        ↳ 34: relational_expression
                                              ↳ 17: ternary_expression                                                                MENOR_QUE expression
                                                    ↳ 26: expression '?' expression ':' expression
                                                                                        ↳ 34: relational_expression
                                                                                              ↳ 17: expression • MENOR_QUE expression
      Second example: SI expression '?' expression ':' expression • MENOR_QUE expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                              $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                 statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                              statement_list FIN
                                        ↳ 34: relational_expression
                                              ↳ 17: expression                                             MENOR_QUE expression
                                                    ↳ 45: ternary_expression
                                                          ↳ 26: expression '?' expression ':' expression •

    shift/reduce conflict on token MAYOR_IGUAL:
       26 ternary_expression: expression '?' expression ':' expression •
       18 relational_expression: expression • MAYOR_IGUAL expression
      First example: SI expression '?' expression ':' expression • MAYOR_IGUAL expression MAYOR_IGUAL expression statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                             $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                                statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                                             statement_list FIN
                                        ↳ 34: relational_expression
                                              ↳ 18: ternary_expression                                                                  MAYOR_IGUAL expression
                                                    ↳ 26: expression '?' expression ':' expression
                                                                                        ↳ 34: relational_expression
                                                                                              ↳ 18: expression • MAYOR_IGUAL expression
      Second example: SI expression '?' expression ':' expression • MAYOR_IGUAL expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                                $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                   statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                statement_list FIN
                                        ↳ 34: relational_expression
                                              ↳ 18: expression                                             MAYOR_IGUAL expression
                                                    ↳ 45: ternary_expression
                                                          ↳ 26: expression '?' expression ':' expression •

    shift/reduce conflict on token MENOR_IGUAL:
       26 ternary_expression: expression '?' expression ':' expression •
       19 relational_expression: expression • MENOR_IGUAL expression
      First example: SI expression '?' expression ':' expression • MENOR_IGUAL expression MENOR_IGUAL expression statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                             $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                                statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                                             statement_list FIN
                                        ↳ 34: relational_expression
                                              ↳ 19: ternary_expression                                                                  MENOR_IGUAL expression
                                                    ↳ 26: expression '?' expression ':' expression
                                                                                        ↳ 34: relational_expression
                                                                                              ↳ 19: expression • MENOR_IGUAL expression
      Second example: SI expression '?' expression ':' expression • MENOR_IGUAL expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                                $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                   statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                statement_list FIN
                                        ↳ 34: relational_expression
                                              ↳ 19: expression                                             MENOR_IGUAL expression
                                                    ↳ 45: ternary_expression
                                                          ↳ 26: expression '?' expression ':' expression •

    shift/reduce conflict on token DIFERENTE:
       26 ternary_expression: expression '?' expression ':' expression •
       20 equality_expression: expression • DIFERENTE expression
      First example: SI expression '?' expression ':' expression • DIFERENTE expression DIFERENTE expression statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                         $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                            statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                                         statement_list FIN
                                        ↳ 35: equality_expression
                                              ↳ 20: ternary_expression                                                                DIFERENTE expression
                                                    ↳ 26: expression '?' expression ':' expression
                                                                                        ↳ 35: equality_expression
                                                                                              ↳ 20: expression • DIFERENTE expression
      Second example: SI expression '?' expression ':' expression • DIFERENTE expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                              $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                 statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                              statement_list FIN
                                        ↳ 35: equality_expression
                                              ↳ 20: expression                                             DIFERENTE expression
                                                    ↳ 45: ternary_expression
                                                          ↳ 26: expression '?' expression ':' expression •

    shift/reduce conflict on token IGUAL_LOGICO:
       26 ternary_expression: expression '?' expression ':' expression •
       21 equality_expression: expression • IGUAL_LOGICO expression
      First example: SI expression '?' expression ':' expression • IGUAL_LOGICO expression IGUAL_LOGICO expression statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                               $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                                  statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                                               statement_list FIN
                                        ↳ 35: equality_expression
                                              ↳ 21: ternary_expression                                                                   IGUAL_LOGICO expression
                                                    ↳ 26: expression '?' expression ':' expression
                                                                                        ↳ 35: equality_expression
                                                                                              ↳ 21: expression • IGUAL_LOGICO expression
      Second example: SI expression '?' expression ':' expression • IGUAL_LOGICO expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                                 $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                    statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                 statement_list FIN
                                        ↳ 35: equality_expression
                                              ↳ 21: expression                                             IGUAL_LOGICO expression
                                                    ↳ 45: ternary_expression
                                                          ↳ 26: expression '?' expression ':' expression •

    shift/reduce conflict on token REGEX:
       26 ternary_expression: expression '?' expression ':' expression •
       22 equality_expression: expression • REGEX expression
      First example: SI expression '?' expression ':' expression • REGEX expression REGEX expression statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                 $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                    statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                                 statement_list FIN
                                        ↳ 35: equality_expression
                                              ↳ 22: ternary_expression                                                            REGEX expression
                                                    ↳ 26: expression '?' expression ':' expression
                                                                                        ↳ 35: equality_expression
                                                                                              ↳ 22: expression • REGEX expression
      Second example: SI expression '?' expression ':' expression • REGEX expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                          $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                             statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                          statement_list FIN
                                        ↳ 35: equality_expression
                                              ↳ 22: expression                                             REGEX expression
                                                    ↳ 45: ternary_expression
                                                          ↳ 26: expression '?' expression ':' expression •

    shift/reduce conflict on token Y_LOGICO:
       26 ternary_expression: expression '?' expression ':' expression •
       24 logical_and_expression: expression • Y_LOGICO expression
      First example: SI expression '?' expression ':' expression • Y_LOGICO expression Y_LOGICO expression statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                       $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                          statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                                       statement_list FIN
                                        ↳ 37: logical_and_expression
                                              ↳ 24: ternary_expression                                                               Y_LOGICO expression
                                                    ↳ 26: expression '?' expression ':' expression
                                                                                        ↳ 37: logical_and_expression
                                                                                              ↳ 24: expression • Y_LOGICO expression
      Second example: SI expression '?' expression ':' expression • Y_LOGICO expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                             $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                             statement_list FIN
                                        ↳ 37: logical_and_expression
                                              ↳ 24: expression                                             Y_LOGICO expression
                                                    ↳ 45: ternary_expression
                                                          ↳ 26: expression '?' expression ':' expression •

    shift/reduce conflict on token O_LOGICO:
       26 ternary_expression: expression '?' expression ':' expression •
       25 logical_or_expression: expression • O_LOGICO expression
      First example: SI expression '?' expression ':' expression • O_LOGICO expression O_LOGICO expression statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                       $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                          statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                                       statement_list FIN
                                        ↳ 38: logical_or_expression
                                              ↳ 25: ternary_expression                                                               O_LOGICO expression
                                                    ↳ 26: expression '?' expression ':' expression
                                                                                        ↳ 38: logical_or_expression
                                                                                              ↳ 25: expression • O_LOGICO expression
      Second example: SI expression '?' expression ':' expression • O_LOGICO expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                             $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                             statement_list FIN
                                        ↳ 38: logical_or_expression
                                              ↳ 25: expression                                             O_LOGICO expression
                                                    ↳ 45: ternary_expression
                                                          ↳ 26: expression '?' expression ':' expression •

    shift/reduce conflict on token '?':
       26 ternary_expression: expression '?' expression ':' expression •
       26 ternary_expression: expression • '?' expression ':' expression
      First example: SI expression '?' expression ':' expression • '?' expression ':' expression '?' expression ':' expression statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                                           $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                                              statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                                                           statement_list FIN
                                        ↳ 45: ternary_expression
                                              ↳ 26: ternary_expression                                                                         '?' expression ':' expression
                                                    ↳ 26: expression '?' expression ':' expression
                                                                                        ↳ 45: ternary_expression
                                                                                              ↳ 26: expression • '?' expression ':' expression
      Second example: SI expression '?' expression ':' expression • '?' expression ':' expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                                       $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                          statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                       statement_list FIN
                                        ↳ 45: ternary_expression
                                              ↳ 26: expression                                             '?' expression ':' expression
                                                    ↳ 45: ternary_expression
                                                          ↳ 26: expression '?' expression ':' expression •

    shift/reduce conflict on token CONCATENAR:
       26 ternary_expression: expression '?' expression ':' expression •
       27 concat_expression: expression • CONCATENAR expression
      First example: SI expression '?' expression ':' expression • CONCATENAR expression CONCATENAR expression statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                           $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                              statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                                                           statement_list FIN
                                        ↳ 39: concat_expression
                                              ↳ 27: ternary_expression                                                                 CONCATENAR expression
                                                    ↳ 26: expression '?' expression ':' expression
                                                                                        ↳ 39: concat_expression
                                                                                              ↳ 27: expression • CONCATENAR expression
      Second example: SI expression '?' expression ':' expression • CONCATENAR expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                               $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                  statement_list
                         ↳ 55: selection_statement
                               ↳ 89: SI expression                                                                               statement_list FIN
                                        ↳ 39: concat_expression
                                              ↳ 27: expression                                             CONCATENAR expression
                                                    ↳ 45: ternary_expression
                                                          ↳ 26: expression '?' expression ':' expression •



State 244

   93 osi_statements: • osi_statement
   94               | • osi_statements osi_statement
   95 osi_statement: • O_SI expression statement_list
   95              | O_SI expression statement_list •  [O_SI, FIN]
   96              | • O_SI expression statement_list SINO statement_list
   96              | O_SI expression statement_list • SINO statement_list
   97              | • O_SI expression statement_list osi_statements
   97              | O_SI expression statement_list • osi_statements

    O_SI  shift, and go to state 191
    SINO  shift, and go to state 253

    O_SI      [reduce using rule 95 (osi_statement)]
    $default  reduce using rule 95 (osi_statement)

    osi_statements  go to state 254
    osi_statement   go to state 195

    shift/reduce conflict on token O_SI:
       95 osi_statement: O_SI expression statement_list •
       95 osi_statement: • O_SI expression statement_list
      First example: SI expression statement_list O_SI expression statement_list • O_SI expression statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                   $end
             ↳ 49: statement_list
                   ↳ 50: selection_statement                                                                                                            statement_list
                         ↳ 91: SI expression statement_list osi_statements                                                                          FIN
                                                            ↳ 93: osi_statement
                                                                  ↳ 97: O_SI expression statement_list osi_statements
                                                                                                       ↳ 93: osi_statement
                                                                                                             ↳ 95: • O_SI expression statement_list
      Second example: SI expression statement_list O_SI expression statement_list • O_SI expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                                         $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                            statement_list
                         ↳ 55: selection_statement
                               ↳ 91: SI expression statement_list osi_statements                                                                          FIN
                                                                  ↳ 94: osi_statements                               osi_statement
                                                                        ↳ 93: osi_statement                          ↳ 95: O_SI expression statement_list
                                                                              ↳ 95: O_SI expression statement_list •

    shift/reduce conflict on token O_SI:
       95 osi_statement: O_SI expression statement_list •
       96 osi_statement: • O_SI expression statement_list SINO statement_list
      First example: SI expression statement_list O_SI expression statement_list • O_SI expression statement_list SINO statement_list FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                       $end
             ↳ 49: statement_list
                   ↳ 50: selection_statement                                                                                                                                statement_list
                         ↳ 91: SI expression statement_list osi_statements                                                                                              FIN
                                                            ↳ 93: osi_statement
                                                                  ↳ 97: O_SI expression statement_list osi_statements
                                                                                                       ↳ 93: osi_statement
                                                                                                             ↳ 96: • O_SI expression statement_list SINO statement_list
      Second example: SI expression statement_list O_SI expression statement_list • O_SI expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                                         $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                            statement_list
                         ↳ 55: selection_statement
                               ↳ 91: SI expression statement_list osi_statements                                                                          FIN
                                                                  ↳ 94: osi_statements                               osi_statement
                                                                        ↳ 93: osi_statement                          ↳ 95: O_SI expression statement_list
                                                                              ↳ 95: O_SI expression statement_list •

    shift/reduce conflict on token O_SI:
       95 osi_statement: O_SI expression statement_list •
       97 osi_statement: • O_SI expression statement_list osi_statements
      First example: SI expression statement_list O_SI expression statement_list • O_SI expression statement_list osi_statements FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                  $end
             ↳ 49: statement_list
                   ↳ 50: selection_statement                                                                                                                           statement_list
                         ↳ 91: SI expression statement_list osi_statements                                                                                         FIN
                                                            ↳ 93: osi_statement
                                                                  ↳ 97: O_SI expression statement_list osi_statements
                                                                                                       ↳ 93: osi_statement
                                                                                                             ↳ 97: • O_SI expression statement_list osi_statements
      Second example: SI expression statement_list O_SI expression statement_list • O_SI expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                                         $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                            statement_list
                         ↳ 55: selection_statement
                               ↳ 91: SI expression statement_list osi_statements                                                                          FIN
                                                                  ↳ 94: osi_statements                               osi_statement
                                                                        ↳ 93: osi_statement                          ↳ 95: O_SI expression statement_list
                                                                              ↳ 95: O_SI expression statement_list •



State 245

   90 selection_statement: SI expression statement_list SINO statement_list FIN •

    $default  reduce using rule 90 (selection_statement)


State 246

  110 function_definition: FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list • FIN

    FIN  shift, and go to state 255


State 247

   53 statement: • declaration
   54          | • global_declaration
   55          | • selection_statement
   56          | • iteration_statement
   57          | • jump_statement
   58          | • function_definition
   59          | • function_call
   60          | • incdec_statement
   61          | • jump_loop
   62          | • goto_etiqueta
   63          | • clase_declaracion
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   71 global_declaration: • GLOBAL declaration
   72                   | • GLOBAL function_definition
   73 declaration: • variable_access '=' expression
   74            | • variable_access CONCATENAR_IGUAL expression
   75            | • variable_access MAS_IGUAL expression
   76            | • variable_access MENOS_IGUAL expression
   77            | • variable_access POR_IGUAL expression
   78            | • variable_access ENTRE_IGUAL expression
   79            | • variable_access MODULO_IGUAL expression
   80            | • parameter_list '=' argument_expression_list
   81            | • variable_access '[' expression ']' '=' expression
   89 selection_statement: • SI expression statement_list FIN
   90                    | • SI expression statement_list SINO statement_list FIN
   91                    | • SI expression statement_list osi_statements FIN
   92                    | • ELEGIR expression labeled_statements FIN
   98 iteration_statement: • MIENTRAS expression statement_list FIN
   99                    | • REPETIR statement_list HASTA expression
  100                    | • DESDE '(' declaration ';' expression ';' statement ')' statement_list FIN
  100                    | DESDE '(' declaration ';' expression ';' • statement ')' statement_list FIN
  101                    | • PARA IDENTIFICADOR EN RANGO '(' expression ')' statement_list FIN
  102                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ')' statement_list FIN
  103                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ',' expression ')' statement_list FIN
  104 goto_etiqueta: • IDENTIFICADOR ':'
  105 jump_statement: • RETORNO expression
  106               | • RETORNO argument_expression_list
  107               | • IR IDENTIFICADOR
  108 jump_loop: • ROMPER
  109          | • CONTINUAR
  110 function_definition: • FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  116 parameter_list: ε •  ['=', ',']
  117               | • IDENTIFICADOR
  118               | • VAR_ARGS
  119               | • parameter_list ',' IDENTIFICADOR
  120               | • parameter_list ',' VAR_ARGS
  146 clase_declaracion: • CLASE IDENTIFICADOR clase_sentencias FIN

    IDENTIFICADOR  shift, and go to state 2
    VAR_ARGS       shift, and go to state 3
    SI             shift, and go to state 4
    MIENTRAS       shift, and go to state 5
    REPETIR        shift, and go to state 6
    ROMPER         shift, and go to state 7
    CONTINUAR      shift, and go to state 8
    FUNCION        shift, and go to state 9
    DESDE          shift, and go to state 10
    RETORNO        shift, and go to state 11
    ELEGIR         shift, and go to state 12
    PARA           shift, and go to state 13
    IR             shift, and go to state 14
    GLOBAL         shift, and go to state 15
    CLASE          shift, and go to state 16

    $default  reduce using rule 116 (parameter_list)

    statement            go to state 256
    incdec_statement     go to state 20
    variable_access      go to state 21
    field_designator     go to state 22
    global_declaration   go to state 23
    declaration          go to state 24
    selection_statement  go to state 25
    iteration_statement  go to state 26
    goto_etiqueta        go to state 27
    jump_statement       go to state 28
    jump_loop            go to state 29
    function_definition  go to state 30
    function_call        go to state 31
    parameter_list       go to state 32
    clase_declaracion    go to state 33


State 248

    1 constant_expression: • NUMERICO
    2                    | • CADENA
   86 labeled_statement_case_case: • constant_expression ':'
   87                            | • constant_expression ':' CASO labeled_statement_case_case
   87                            | constant_expression ':' CASO • labeled_statement_case_case

    NUMERICO  shift, and go to state 36
    CADENA    shift, and go to state 37

    constant_expression          go to state 202
    labeled_statement_case_case  go to state 257


State 249

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression
  101 iteration_statement: PARA IDENTIFICADOR EN RANGO '(' expression • ')' statement_list FIN
  102                    | PARA IDENTIFICADOR EN RANGO '(' expression • ',' expression ')' statement_list FIN
  103                    | PARA IDENTIFICADOR EN RANGO '(' expression • ',' expression ',' expression ')' statement_list FIN

    EXPONENTE     shift, and go to state 110
    MAYOR_QUE     shift, and go to state 111
    MENOR_QUE     shift, and go to state 112
    MAYOR_IGUAL   shift, and go to state 113
    MENOR_IGUAL   shift, and go to state 114
    IGUAL_LOGICO  shift, and go to state 115
    DIFERENTE     shift, and go to state 116
    Y_LOGICO      shift, and go to state 117
    O_LOGICO      shift, and go to state 118
    CONCATENAR    shift, and go to state 119
    REGEX         shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '%'           shift, and go to state 125
    '^'           shift, and go to state 126
    '?'           shift, and go to state 127
    ')'           shift, and go to state 258
    ','           shift, and go to state 259


State 250

  119 parameter_list: parameter_list • ',' IDENTIFICADOR
  120               | parameter_list • ',' VAR_ARGS
  135 clase_funcion: FUNCION IDENTIFICADOR '(' parameter_list • ')' statement_list FIN

    ')'  shift, and go to state 260
    ','  shift, and go to state 99


State 251

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression
   81 declaration: variable_access '[' expression ']' '=' expression •  [$end, error, IDENTIFICADOR, VAR_ARGS, SI, O_SI, FIN, SINO, MIENTRAS, REPETIR, ROMPER, CONTINUAR, HASTA, FUNCION, DESDE, RETORNO, ELEGIR, CASO, DEFECTO, PARA, IR, GLOBAL, CLASE, '=', ')', ';', ',']

    EXPONENTE     shift, and go to state 110
    MAYOR_QUE     shift, and go to state 111
    MENOR_QUE     shift, and go to state 112
    MAYOR_IGUAL   shift, and go to state 113
    MENOR_IGUAL   shift, and go to state 114
    IGUAL_LOGICO  shift, and go to state 115
    DIFERENTE     shift, and go to state 116
    Y_LOGICO      shift, and go to state 117
    O_LOGICO      shift, and go to state 118
    CONCATENAR    shift, and go to state 119
    REGEX         shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '%'           shift, and go to state 125
    '^'           shift, and go to state 126
    '?'           shift, and go to state 127

    $default  reduce using rule 81 (declaration)


State 252

  111 function_anonymous: FUNCION '(' parameter_list ')' statement_list FIN •

    $default  reduce using rule 111 (function_anonymous)


State 253

   50 statement_list: • statement statement_list
   51               | • statement
   52               | • error statement_list
   53 statement: • declaration
   54          | • global_declaration
   55          | • selection_statement
   56          | • iteration_statement
   57          | • jump_statement
   58          | • function_definition
   59          | • function_call
   60          | • incdec_statement
   61          | • jump_loop
   62          | • goto_etiqueta
   63          | • clase_declaracion
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   71 global_declaration: • GLOBAL declaration
   72                   | • GLOBAL function_definition
   73 declaration: • variable_access '=' expression
   74            | • variable_access CONCATENAR_IGUAL expression
   75            | • variable_access MAS_IGUAL expression
   76            | • variable_access MENOS_IGUAL expression
   77            | • variable_access POR_IGUAL expression
   78            | • variable_access ENTRE_IGUAL expression
   79            | • variable_access MODULO_IGUAL expression
   80            | • parameter_list '=' argument_expression_list
   81            | • variable_access '[' expression ']' '=' expression
   89 selection_statement: • SI expression statement_list FIN
   90                    | • SI expression statement_list SINO statement_list FIN
   91                    | • SI expression statement_list osi_statements FIN
   92                    | • ELEGIR expression labeled_statements FIN
   96 osi_statement: O_SI expression statement_list SINO • statement_list
   98 iteration_statement: • MIENTRAS expression statement_list FIN
   99                    | • REPETIR statement_list HASTA expression
  100                    | • DESDE '(' declaration ';' expression ';' statement ')' statement_list FIN
  101                    | • PARA IDENTIFICADOR EN RANGO '(' expression ')' statement_list FIN
  102                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ')' statement_list FIN
  103                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ',' expression ')' statement_list FIN
  104 goto_etiqueta: • IDENTIFICADOR ':'
  105 jump_statement: • RETORNO expression
  106               | • RETORNO argument_expression_list
  107               | • IR IDENTIFICADOR
  108 jump_loop: • ROMPER
  109          | • CONTINUAR
  110 function_definition: • FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  116 parameter_list: ε •  ['=', ',']
  117               | • IDENTIFICADOR
  118               | • VAR_ARGS
  119               | • parameter_list ',' IDENTIFICADOR
  120               | • parameter_list ',' VAR_ARGS
  146 clase_declaracion: • CLASE IDENTIFICADOR clase_sentencias FIN

    error          shift, and go to state 1
    IDENTIFICADOR  shift, and go to state 2
    VAR_ARGS       shift, and go to state 3
    SI             shift, and go to state 4
    MIENTRAS       shift, and go to state 5
    REPETIR        shift, and go to state 6
    ROMPER         shift, and go to state 7
    CONTINUAR      shift, and go to state 8
    FUNCION        shift, and go to state 9
    DESDE          shift, and go to state 10
    RETORNO        shift, and go to state 11
    ELEGIR         shift, and go to state 12
    PARA           shift, and go to state 13
    IR             shift, and go to state 14
    GLOBAL         shift, and go to state 15
    CLASE          shift, and go to state 16

    '='  reduce using rule 116 (parameter_list)
    ','  reduce using rule 116 (parameter_list)

    statement_list       go to state 261
    statement            go to state 19
    incdec_statement     go to state 20
    variable_access      go to state 21
    field_designator     go to state 22
    global_declaration   go to state 23
    declaration          go to state 24
    selection_statement  go to state 25
    iteration_statement  go to state 26
    goto_etiqueta        go to state 27
    jump_statement       go to state 28
    jump_loop            go to state 29
    function_definition  go to state 30
    function_call        go to state 31
    parameter_list       go to state 32
    clase_declaracion    go to state 33


State 254

   94 osi_statements: osi_statements • osi_statement
   95 osi_statement: • O_SI expression statement_list
   96              | • O_SI expression statement_list SINO statement_list
   97              | • O_SI expression statement_list osi_statements
   97              | O_SI expression statement_list osi_statements •  [O_SI, FIN]

    O_SI  shift, and go to state 191

    O_SI      [reduce using rule 97 (osi_statement)]
    $default  reduce using rule 97 (osi_statement)

    osi_statement  go to state 229

    shift/reduce conflict on token O_SI:
       97 osi_statement: O_SI expression statement_list osi_statements •
       95 osi_statement: • O_SI expression statement_list
      First example: SI expression statement_list O_SI expression statement_list osi_statements • O_SI expression statement_list osi_statement FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                                      $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                                         statement_list
                         ↳ 55: selection_statement
                               ↳ 91: SI expression statement_list osi_statements                                                                                                       FIN
                                                                  ↳ 94: osi_statement                                                                                    osi_statement
                                                                        ↳ 97: O_SI expression statement_list osi_statements
                                                                                                             ↳ 94: osi_statements osi_statement
                                                                                                                                  ↳ 95: • O_SI expression statement_list
      Second example: SI expression statement_list O_SI expression statement_list osi_statements • O_SI expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                                                        $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                           statement_list
                         ↳ 55: selection_statement
                               ↳ 91: SI expression statement_list osi_statements                                                                                         FIN
                                                                  ↳ 94: osi_statements                                              osi_statement
                                                                        ↳ 93: osi_statement                                         ↳ 95: O_SI expression statement_list
                                                                              ↳ 97: O_SI expression statement_list osi_statements •

    shift/reduce conflict on token O_SI:
       97 osi_statement: O_SI expression statement_list osi_statements •
       96 osi_statement: • O_SI expression statement_list SINO statement_list
      First example: SI expression statement_list O_SI expression statement_list osi_statements • O_SI expression statement_list SINO statement_list osi_statement FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                                                          $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                                                             statement_list
                         ↳ 55: selection_statement
                               ↳ 91: SI expression statement_list osi_statements                                                                                                                           FIN
                                                                  ↳ 94: osi_statement                                                                                                        osi_statement
                                                                        ↳ 97: O_SI expression statement_list osi_statements
                                                                                                             ↳ 94: osi_statements osi_statement
                                                                                                                                  ↳ 96: • O_SI expression statement_list SINO statement_list
      Second example: SI expression statement_list O_SI expression statement_list osi_statements • O_SI expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                                                        $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                           statement_list
                         ↳ 55: selection_statement
                               ↳ 91: SI expression statement_list osi_statements                                                                                         FIN
                                                                  ↳ 94: osi_statements                                              osi_statement
                                                                        ↳ 93: osi_statement                                         ↳ 95: O_SI expression statement_list
                                                                              ↳ 97: O_SI expression statement_list osi_statements •

    shift/reduce conflict on token O_SI:
       97 osi_statement: O_SI expression statement_list osi_statements •
       97 osi_statement: • O_SI expression statement_list osi_statements
      First example: SI expression statement_list O_SI expression statement_list osi_statements • O_SI expression statement_list osi_statements osi_statement FIN statement_list $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                                                     $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                                                        statement_list
                         ↳ 55: selection_statement
                               ↳ 91: SI expression statement_list osi_statements                                                                                                                      FIN
                                                                  ↳ 94: osi_statement                                                                                                   osi_statement
                                                                        ↳ 97: O_SI expression statement_list osi_statements
                                                                                                             ↳ 94: osi_statements osi_statement
                                                                                                                                  ↳ 97: • O_SI expression statement_list osi_statements
      Second example: SI expression statement_list O_SI expression statement_list osi_statements • O_SI expression statement_list FIN statement_list $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                                                        $end
             ↳ 49: statement_list
                   ↳ 50: statement                                                                                                                                           statement_list
                         ↳ 55: selection_statement
                               ↳ 91: SI expression statement_list osi_statements                                                                                         FIN
                                                                  ↳ 94: osi_statements                                              osi_statement
                                                                        ↳ 93: osi_statement                                         ↳ 95: O_SI expression statement_list
                                                                              ↳ 97: O_SI expression statement_list osi_statements •



State 255

  110 function_definition: FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN •

    $default  reduce using rule 110 (function_definition)


State 256

  100 iteration_statement: DESDE '(' declaration ';' expression ';' statement • ')' statement_list FIN

    ')'  shift, and go to state 262


State 257

   87 labeled_statement_case_case: constant_expression ':' CASO labeled_statement_case_case •

    $default  reduce using rule 87 (labeled_statement_case_case)


State 258

   50 statement_list: • statement statement_list
   51               | • statement
   52               | • error statement_list
   53 statement: • declaration
   54          | • global_declaration
   55          | • selection_statement
   56          | • iteration_statement
   57          | • jump_statement
   58          | • function_definition
   59          | • function_call
   60          | • incdec_statement
   61          | • jump_loop
   62          | • goto_etiqueta
   63          | • clase_declaracion
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   71 global_declaration: • GLOBAL declaration
   72                   | • GLOBAL function_definition
   73 declaration: • variable_access '=' expression
   74            | • variable_access CONCATENAR_IGUAL expression
   75            | • variable_access MAS_IGUAL expression
   76            | • variable_access MENOS_IGUAL expression
   77            | • variable_access POR_IGUAL expression
   78            | • variable_access ENTRE_IGUAL expression
   79            | • variable_access MODULO_IGUAL expression
   80            | • parameter_list '=' argument_expression_list
   81            | • variable_access '[' expression ']' '=' expression
   89 selection_statement: • SI expression statement_list FIN
   90                    | • SI expression statement_list SINO statement_list FIN
   91                    | • SI expression statement_list osi_statements FIN
   92                    | • ELEGIR expression labeled_statements FIN
   98 iteration_statement: • MIENTRAS expression statement_list FIN
   99                    | • REPETIR statement_list HASTA expression
  100                    | • DESDE '(' declaration ';' expression ';' statement ')' statement_list FIN
  101                    | • PARA IDENTIFICADOR EN RANGO '(' expression ')' statement_list FIN
  101                    | PARA IDENTIFICADOR EN RANGO '(' expression ')' • statement_list FIN
  102                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ')' statement_list FIN
  103                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ',' expression ')' statement_list FIN
  104 goto_etiqueta: • IDENTIFICADOR ':'
  105 jump_statement: • RETORNO expression
  106               | • RETORNO argument_expression_list
  107               | • IR IDENTIFICADOR
  108 jump_loop: • ROMPER
  109          | • CONTINUAR
  110 function_definition: • FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  116 parameter_list: ε •  ['=', ',']
  117               | • IDENTIFICADOR
  118               | • VAR_ARGS
  119               | • parameter_list ',' IDENTIFICADOR
  120               | • parameter_list ',' VAR_ARGS
  146 clase_declaracion: • CLASE IDENTIFICADOR clase_sentencias FIN

    error          shift, and go to state 1
    IDENTIFICADOR  shift, and go to state 2
    VAR_ARGS       shift, and go to state 3
    SI             shift, and go to state 4
    MIENTRAS       shift, and go to state 5
    REPETIR        shift, and go to state 6
    ROMPER         shift, and go to state 7
    CONTINUAR      shift, and go to state 8
    FUNCION        shift, and go to state 9
    DESDE          shift, and go to state 10
    RETORNO        shift, and go to state 11
    ELEGIR         shift, and go to state 12
    PARA           shift, and go to state 13
    IR             shift, and go to state 14
    GLOBAL         shift, and go to state 15
    CLASE          shift, and go to state 16

    '='  reduce using rule 116 (parameter_list)
    ','  reduce using rule 116 (parameter_list)

    statement_list       go to state 263
    statement            go to state 19
    incdec_statement     go to state 20
    variable_access      go to state 21
    field_designator     go to state 22
    global_declaration   go to state 23
    declaration          go to state 24
    selection_statement  go to state 25
    iteration_statement  go to state 26
    goto_etiqueta        go to state 27
    jump_statement       go to state 28
    jump_loop            go to state 29
    function_definition  go to state 30
    function_call        go to state 31
    parameter_list       go to state 32
    clase_declaracion    go to state 33


State 259

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
  102 iteration_statement: PARA IDENTIFICADOR EN RANGO '(' expression ',' • expression ')' statement_list FIN
  103                    | PARA IDENTIFICADOR EN RANGO '(' expression ',' • expression ',' expression ')' statement_list FIN
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 264
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 260

   50 statement_list: • statement statement_list
   51               | • statement
   52               | • error statement_list
   53 statement: • declaration
   54          | • global_declaration
   55          | • selection_statement
   56          | • iteration_statement
   57          | • jump_statement
   58          | • function_definition
   59          | • function_call
   60          | • incdec_statement
   61          | • jump_loop
   62          | • goto_etiqueta
   63          | • clase_declaracion
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   71 global_declaration: • GLOBAL declaration
   72                   | • GLOBAL function_definition
   73 declaration: • variable_access '=' expression
   74            | • variable_access CONCATENAR_IGUAL expression
   75            | • variable_access MAS_IGUAL expression
   76            | • variable_access MENOS_IGUAL expression
   77            | • variable_access POR_IGUAL expression
   78            | • variable_access ENTRE_IGUAL expression
   79            | • variable_access MODULO_IGUAL expression
   80            | • parameter_list '=' argument_expression_list
   81            | • variable_access '[' expression ']' '=' expression
   89 selection_statement: • SI expression statement_list FIN
   90                    | • SI expression statement_list SINO statement_list FIN
   91                    | • SI expression statement_list osi_statements FIN
   92                    | • ELEGIR expression labeled_statements FIN
   98 iteration_statement: • MIENTRAS expression statement_list FIN
   99                    | • REPETIR statement_list HASTA expression
  100                    | • DESDE '(' declaration ';' expression ';' statement ')' statement_list FIN
  101                    | • PARA IDENTIFICADOR EN RANGO '(' expression ')' statement_list FIN
  102                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ')' statement_list FIN
  103                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ',' expression ')' statement_list FIN
  104 goto_etiqueta: • IDENTIFICADOR ':'
  105 jump_statement: • RETORNO expression
  106               | • RETORNO argument_expression_list
  107               | • IR IDENTIFICADOR
  108 jump_loop: • ROMPER
  109          | • CONTINUAR
  110 function_definition: • FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  116 parameter_list: ε •  ['=', ',']
  117               | • IDENTIFICADOR
  118               | • VAR_ARGS
  119               | • parameter_list ',' IDENTIFICADOR
  120               | • parameter_list ',' VAR_ARGS
  135 clase_funcion: FUNCION IDENTIFICADOR '(' parameter_list ')' • statement_list FIN
  146 clase_declaracion: • CLASE IDENTIFICADOR clase_sentencias FIN

    error          shift, and go to state 1
    IDENTIFICADOR  shift, and go to state 2
    VAR_ARGS       shift, and go to state 3
    SI             shift, and go to state 4
    MIENTRAS       shift, and go to state 5
    REPETIR        shift, and go to state 6
    ROMPER         shift, and go to state 7
    CONTINUAR      shift, and go to state 8
    FUNCION        shift, and go to state 9
    DESDE          shift, and go to state 10
    RETORNO        shift, and go to state 11
    ELEGIR         shift, and go to state 12
    PARA           shift, and go to state 13
    IR             shift, and go to state 14
    GLOBAL         shift, and go to state 15
    CLASE          shift, and go to state 16

    '='  reduce using rule 116 (parameter_list)
    ','  reduce using rule 116 (parameter_list)

    statement_list       go to state 265
    statement            go to state 19
    incdec_statement     go to state 20
    variable_access      go to state 21
    field_designator     go to state 22
    global_declaration   go to state 23
    declaration          go to state 24
    selection_statement  go to state 25
    iteration_statement  go to state 26
    goto_etiqueta        go to state 27
    jump_statement       go to state 28
    jump_loop            go to state 29
    function_definition  go to state 30
    function_call        go to state 31
    parameter_list       go to state 32
    clase_declaracion    go to state 33


State 261

   96 osi_statement: O_SI expression statement_list SINO statement_list •

    $default  reduce using rule 96 (osi_statement)


State 262

   50 statement_list: • statement statement_list
   51               | • statement
   52               | • error statement_list
   53 statement: • declaration
   54          | • global_declaration
   55          | • selection_statement
   56          | • iteration_statement
   57          | • jump_statement
   58          | • function_definition
   59          | • function_call
   60          | • incdec_statement
   61          | • jump_loop
   62          | • goto_etiqueta
   63          | • clase_declaracion
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   71 global_declaration: • GLOBAL declaration
   72                   | • GLOBAL function_definition
   73 declaration: • variable_access '=' expression
   74            | • variable_access CONCATENAR_IGUAL expression
   75            | • variable_access MAS_IGUAL expression
   76            | • variable_access MENOS_IGUAL expression
   77            | • variable_access POR_IGUAL expression
   78            | • variable_access ENTRE_IGUAL expression
   79            | • variable_access MODULO_IGUAL expression
   80            | • parameter_list '=' argument_expression_list
   81            | • variable_access '[' expression ']' '=' expression
   89 selection_statement: • SI expression statement_list FIN
   90                    | • SI expression statement_list SINO statement_list FIN
   91                    | • SI expression statement_list osi_statements FIN
   92                    | • ELEGIR expression labeled_statements FIN
   98 iteration_statement: • MIENTRAS expression statement_list FIN
   99                    | • REPETIR statement_list HASTA expression
  100                    | • DESDE '(' declaration ';' expression ';' statement ')' statement_list FIN
  100                    | DESDE '(' declaration ';' expression ';' statement ')' • statement_list FIN
  101                    | • PARA IDENTIFICADOR EN RANGO '(' expression ')' statement_list FIN
  102                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ')' statement_list FIN
  103                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ',' expression ')' statement_list FIN
  104 goto_etiqueta: • IDENTIFICADOR ':'
  105 jump_statement: • RETORNO expression
  106               | • RETORNO argument_expression_list
  107               | • IR IDENTIFICADOR
  108 jump_loop: • ROMPER
  109          | • CONTINUAR
  110 function_definition: • FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  116 parameter_list: ε •  ['=', ',']
  117               | • IDENTIFICADOR
  118               | • VAR_ARGS
  119               | • parameter_list ',' IDENTIFICADOR
  120               | • parameter_list ',' VAR_ARGS
  146 clase_declaracion: • CLASE IDENTIFICADOR clase_sentencias FIN

    error          shift, and go to state 1
    IDENTIFICADOR  shift, and go to state 2
    VAR_ARGS       shift, and go to state 3
    SI             shift, and go to state 4
    MIENTRAS       shift, and go to state 5
    REPETIR        shift, and go to state 6
    ROMPER         shift, and go to state 7
    CONTINUAR      shift, and go to state 8
    FUNCION        shift, and go to state 9
    DESDE          shift, and go to state 10
    RETORNO        shift, and go to state 11
    ELEGIR         shift, and go to state 12
    PARA           shift, and go to state 13
    IR             shift, and go to state 14
    GLOBAL         shift, and go to state 15
    CLASE          shift, and go to state 16

    '='  reduce using rule 116 (parameter_list)
    ','  reduce using rule 116 (parameter_list)

    statement_list       go to state 266
    statement            go to state 19
    incdec_statement     go to state 20
    variable_access      go to state 21
    field_designator     go to state 22
    global_declaration   go to state 23
    declaration          go to state 24
    selection_statement  go to state 25
    iteration_statement  go to state 26
    goto_etiqueta        go to state 27
    jump_statement       go to state 28
    jump_loop            go to state 29
    function_definition  go to state 30
    function_call        go to state 31
    parameter_list       go to state 32
    clase_declaracion    go to state 33


State 263

  101 iteration_statement: PARA IDENTIFICADOR EN RANGO '(' expression ')' statement_list • FIN

    FIN  shift, and go to state 267


State 264

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression
  102 iteration_statement: PARA IDENTIFICADOR EN RANGO '(' expression ',' expression • ')' statement_list FIN
  103                    | PARA IDENTIFICADOR EN RANGO '(' expression ',' expression • ',' expression ')' statement_list FIN

    EXPONENTE     shift, and go to state 110
    MAYOR_QUE     shift, and go to state 111
    MENOR_QUE     shift, and go to state 112
    MAYOR_IGUAL   shift, and go to state 113
    MENOR_IGUAL   shift, and go to state 114
    IGUAL_LOGICO  shift, and go to state 115
    DIFERENTE     shift, and go to state 116
    Y_LOGICO      shift, and go to state 117
    O_LOGICO      shift, and go to state 118
    CONCATENAR    shift, and go to state 119
    REGEX         shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '%'           shift, and go to state 125
    '^'           shift, and go to state 126
    '?'           shift, and go to state 127
    ')'           shift, and go to state 268
    ','           shift, and go to state 269


State 265

  135 clase_funcion: FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list • FIN

    FIN  shift, and go to state 270


State 266

  100 iteration_statement: DESDE '(' declaration ';' expression ';' statement ')' statement_list • FIN

    FIN  shift, and go to state 271


State 267

  101 iteration_statement: PARA IDENTIFICADOR EN RANGO '(' expression ')' statement_list FIN •

    $default  reduce using rule 101 (iteration_statement)


State 268

   50 statement_list: • statement statement_list
   51               | • statement
   52               | • error statement_list
   53 statement: • declaration
   54          | • global_declaration
   55          | • selection_statement
   56          | • iteration_statement
   57          | • jump_statement
   58          | • function_definition
   59          | • function_call
   60          | • incdec_statement
   61          | • jump_loop
   62          | • goto_etiqueta
   63          | • clase_declaracion
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   71 global_declaration: • GLOBAL declaration
   72                   | • GLOBAL function_definition
   73 declaration: • variable_access '=' expression
   74            | • variable_access CONCATENAR_IGUAL expression
   75            | • variable_access MAS_IGUAL expression
   76            | • variable_access MENOS_IGUAL expression
   77            | • variable_access POR_IGUAL expression
   78            | • variable_access ENTRE_IGUAL expression
   79            | • variable_access MODULO_IGUAL expression
   80            | • parameter_list '=' argument_expression_list
   81            | • variable_access '[' expression ']' '=' expression
   89 selection_statement: • SI expression statement_list FIN
   90                    | • SI expression statement_list SINO statement_list FIN
   91                    | • SI expression statement_list osi_statements FIN
   92                    | • ELEGIR expression labeled_statements FIN
   98 iteration_statement: • MIENTRAS expression statement_list FIN
   99                    | • REPETIR statement_list HASTA expression
  100                    | • DESDE '(' declaration ';' expression ';' statement ')' statement_list FIN
  101                    | • PARA IDENTIFICADOR EN RANGO '(' expression ')' statement_list FIN
  102                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ')' statement_list FIN
  102                    | PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ')' • statement_list FIN
  103                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ',' expression ')' statement_list FIN
  104 goto_etiqueta: • IDENTIFICADOR ':'
  105 jump_statement: • RETORNO expression
  106               | • RETORNO argument_expression_list
  107               | • IR IDENTIFICADOR
  108 jump_loop: • ROMPER
  109          | • CONTINUAR
  110 function_definition: • FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  116 parameter_list: ε •  ['=', ',']
  117               | • IDENTIFICADOR
  118               | • VAR_ARGS
  119               | • parameter_list ',' IDENTIFICADOR
  120               | • parameter_list ',' VAR_ARGS
  146 clase_declaracion: • CLASE IDENTIFICADOR clase_sentencias FIN

    error          shift, and go to state 1
    IDENTIFICADOR  shift, and go to state 2
    VAR_ARGS       shift, and go to state 3
    SI             shift, and go to state 4
    MIENTRAS       shift, and go to state 5
    REPETIR        shift, and go to state 6
    ROMPER         shift, and go to state 7
    CONTINUAR      shift, and go to state 8
    FUNCION        shift, and go to state 9
    DESDE          shift, and go to state 10
    RETORNO        shift, and go to state 11
    ELEGIR         shift, and go to state 12
    PARA           shift, and go to state 13
    IR             shift, and go to state 14
    GLOBAL         shift, and go to state 15
    CLASE          shift, and go to state 16

    '='  reduce using rule 116 (parameter_list)
    ','  reduce using rule 116 (parameter_list)

    statement_list       go to state 272
    statement            go to state 19
    incdec_statement     go to state 20
    variable_access      go to state 21
    field_designator     go to state 22
    global_declaration   go to state 23
    declaration          go to state 24
    selection_statement  go to state 25
    iteration_statement  go to state 26
    goto_etiqueta        go to state 27
    jump_statement       go to state 28
    jump_loop            go to state 29
    function_definition  go to state 30
    function_call        go to state 31
    parameter_list       go to state 32
    clase_declaracion    go to state 33


State 269

    1 constant_expression: • NUMERICO
    2                    | • CADENA
    3 primary_expression: • IDENTIFICADOR
    4                   | • VERDADERO
    5                   | • FALSO
    6                   | • NULO
    7 unary_expression: • '-' expression
    8                 | • '+' expression
    9 multiplicative_expression: • expression '^' expression
   10                          | • expression EXPONENTE expression
   11                          | • expression '*' expression
   12                          | • expression '/' expression
   13                          | • expression '%' expression
   14 additive_expression: • expression '-' expression
   15                    | • expression '+' expression
   16 relational_expression: • expression MAYOR_QUE expression
   17                      | • expression MENOR_QUE expression
   18                      | • expression MAYOR_IGUAL expression
   19                      | • expression MENOR_IGUAL expression
   20 equality_expression: • expression DIFERENTE expression
   21                    | • expression IGUAL_LOGICO expression
   22                    | • expression REGEX expression
   23 logical_not_expression: • '!' expression
   24 logical_and_expression: • expression Y_LOGICO expression
   25 logical_or_expression: • expression O_LOGICO expression
   26 ternary_expression: • expression '?' expression ':' expression
   27 concat_expression: • expression CONCATENAR expression
   28 expression: • '(' expression ')'
   29           | • constant_expression
   30           | • primary_expression
   31           | • unary_expression
   32           | • multiplicative_expression
   33           | • additive_expression
   34           | • relational_expression
   35           | • equality_expression
   36           | • logical_not_expression
   37           | • logical_and_expression
   38           | • logical_or_expression
   39           | • concat_expression
   40           | • function_call
   41           | • list_new
   42           | • dict_new
   43           | • variable_access
   44           | • function_anonymous
   45           | • ternary_expression
   46           | • incdec_statement
   47           | • VAR_ARGS
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
  103 iteration_statement: PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ',' • expression ')' statement_list FIN
  111 function_anonymous: • FUNCION '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  121 list_new: • '[' list_items ']'
  125 dict_new: • '{' dict_items '}'

    NUMERICO       shift, and go to state 36
    CADENA         shift, and go to state 37
    IDENTIFICADOR  shift, and go to state 38
    VAR_ARGS       shift, and go to state 39
    FUNCION        shift, and go to state 40
    VERDADERO      shift, and go to state 41
    FALSO          shift, and go to state 42
    NULO           shift, and go to state 43
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '!'            shift, and go to state 46
    '('            shift, and go to state 47
    '['            shift, and go to state 48
    '{'            shift, and go to state 49

    constant_expression        go to state 50
    primary_expression         go to state 51
    unary_expression           go to state 52
    multiplicative_expression  go to state 53
    additive_expression        go to state 54
    relational_expression      go to state 55
    equality_expression        go to state 56
    logical_not_expression     go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    ternary_expression         go to state 60
    concat_expression          go to state 61
    expression                 go to state 273
    incdec_statement           go to state 63
    variable_access            go to state 64
    field_designator           go to state 22
    function_anonymous         go to state 65
    function_call              go to state 66
    list_new                   go to state 67
    dict_new                   go to state 68


State 270

  135 clase_funcion: FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN •

    $default  reduce using rule 135 (clase_funcion)


State 271

  100 iteration_statement: DESDE '(' declaration ';' expression ';' statement ')' statement_list FIN •

    $default  reduce using rule 100 (iteration_statement)


State 272

  102 iteration_statement: PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ')' statement_list • FIN

    FIN  shift, and go to state 274


State 273

    9 multiplicative_expression: expression • '^' expression
   10                          | expression • EXPONENTE expression
   11                          | expression • '*' expression
   12                          | expression • '/' expression
   13                          | expression • '%' expression
   14 additive_expression: expression • '-' expression
   15                    | expression • '+' expression
   16 relational_expression: expression • MAYOR_QUE expression
   17                      | expression • MENOR_QUE expression
   18                      | expression • MAYOR_IGUAL expression
   19                      | expression • MENOR_IGUAL expression
   20 equality_expression: expression • DIFERENTE expression
   21                    | expression • IGUAL_LOGICO expression
   22                    | expression • REGEX expression
   24 logical_and_expression: expression • Y_LOGICO expression
   25 logical_or_expression: expression • O_LOGICO expression
   26 ternary_expression: expression • '?' expression ':' expression
   27 concat_expression: expression • CONCATENAR expression
  103 iteration_statement: PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ',' expression • ')' statement_list FIN

    EXPONENTE     shift, and go to state 110
    MAYOR_QUE     shift, and go to state 111
    MENOR_QUE     shift, and go to state 112
    MAYOR_IGUAL   shift, and go to state 113
    MENOR_IGUAL   shift, and go to state 114
    IGUAL_LOGICO  shift, and go to state 115
    DIFERENTE     shift, and go to state 116
    Y_LOGICO      shift, and go to state 117
    O_LOGICO      shift, and go to state 118
    CONCATENAR    shift, and go to state 119
    REGEX         shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '%'           shift, and go to state 125
    '^'           shift, and go to state 126
    '?'           shift, and go to state 127
    ')'           shift, and go to state 275


State 274

  102 iteration_statement: PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ')' statement_list FIN •

    $default  reduce using rule 102 (iteration_statement)


State 275

   50 statement_list: • statement statement_list
   51               | • statement
   52               | • error statement_list
   53 statement: • declaration
   54          | • global_declaration
   55          | • selection_statement
   56          | • iteration_statement
   57          | • jump_statement
   58          | • function_definition
   59          | • function_call
   60          | • incdec_statement
   61          | • jump_loop
   62          | • goto_etiqueta
   63          | • clase_declaracion
   64 incdec_statement: • variable_access INCREMENTO
   65                 | • variable_access DECREMENTO
   66 variable_access: • IDENTIFICADOR
   67                | • field_designator
   68                | • function_call
   69 field_designator: • variable_access ATRIBUTO IDENTIFICADOR
   70                 | • variable_access '[' expression ']'
   71 global_declaration: • GLOBAL declaration
   72                   | • GLOBAL function_definition
   73 declaration: • variable_access '=' expression
   74            | • variable_access CONCATENAR_IGUAL expression
   75            | • variable_access MAS_IGUAL expression
   76            | • variable_access MENOS_IGUAL expression
   77            | • variable_access POR_IGUAL expression
   78            | • variable_access ENTRE_IGUAL expression
   79            | • variable_access MODULO_IGUAL expression
   80            | • parameter_list '=' argument_expression_list
   81            | • variable_access '[' expression ']' '=' expression
   89 selection_statement: • SI expression statement_list FIN
   90                    | • SI expression statement_list SINO statement_list FIN
   91                    | • SI expression statement_list osi_statements FIN
   92                    | • ELEGIR expression labeled_statements FIN
   98 iteration_statement: • MIENTRAS expression statement_list FIN
   99                    | • REPETIR statement_list HASTA expression
  100                    | • DESDE '(' declaration ';' expression ';' statement ')' statement_list FIN
  101                    | • PARA IDENTIFICADOR EN RANGO '(' expression ')' statement_list FIN
  102                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ')' statement_list FIN
  103                    | • PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ',' expression ')' statement_list FIN
  103                    | PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ',' expression ')' • statement_list FIN
  104 goto_etiqueta: • IDENTIFICADOR ':'
  105 jump_statement: • RETORNO expression
  106               | • RETORNO argument_expression_list
  107               | • IR IDENTIFICADOR
  108 jump_loop: • ROMPER
  109          | • CONTINUAR
  110 function_definition: • FUNCION IDENTIFICADOR '(' parameter_list ')' statement_list FIN
  112 function_call: • variable_access '(' argument_expression_list ')'
  116 parameter_list: ε •  ['=', ',']
  117               | • IDENTIFICADOR
  118               | • VAR_ARGS
  119               | • parameter_list ',' IDENTIFICADOR
  120               | • parameter_list ',' VAR_ARGS
  146 clase_declaracion: • CLASE IDENTIFICADOR clase_sentencias FIN

    error          shift, and go to state 1
    IDENTIFICADOR  shift, and go to state 2
    VAR_ARGS       shift, and go to state 3
    SI             shift, and go to state 4
    MIENTRAS       shift, and go to state 5
    REPETIR        shift, and go to state 6
    ROMPER         shift, and go to state 7
    CONTINUAR      shift, and go to state 8
    FUNCION        shift, and go to state 9
    DESDE          shift, and go to state 10
    RETORNO        shift, and go to state 11
    ELEGIR         shift, and go to state 12
    PARA           shift, and go to state 13
    IR             shift, and go to state 14
    GLOBAL         shift, and go to state 15
    CLASE          shift, and go to state 16

    '='  reduce using rule 116 (parameter_list)
    ','  reduce using rule 116 (parameter_list)

    statement_list       go to state 276
    statement            go to state 19
    incdec_statement     go to state 20
    variable_access      go to state 21
    field_designator     go to state 22
    global_declaration   go to state 23
    declaration          go to state 24
    selection_statement  go to state 25
    iteration_statement  go to state 26
    goto_etiqueta        go to state 27
    jump_statement       go to state 28
    jump_loop            go to state 29
    function_definition  go to state 30
    function_call        go to state 31
    parameter_list       go to state 32
    clase_declaracion    go to state 33


State 276

  103 iteration_statement: PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ',' expression ')' statement_list • FIN

    FIN  shift, and go to state 277


State 277

  103 iteration_statement: PARA IDENTIFICADOR EN RANGO '(' expression ',' expression ',' expression ')' statement_list FIN •

    $default  reduce using rule 103 (iteration_statement)
